name: CI

on:
  # Triggers the workflow on pull request events
  pull_request:
    branches: ['*']
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  JAVA_VERSION: "17.x"
  FLUTTER_CHANNEL: "stable"


jobs:
  flutter_analyze:
    name: "Analysis"
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          cache: true

      - name: Flutter version
        run: flutter --version

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

  flutter_test:
    name: "Unit tests"
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          cache: true
      - name: Install dependencies
        run: flutter pub get
      - name: Run tests
        run: flutter test --dart-define=FLUTTER_TEST=true

  code_coverage:
    name: "Codecov"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          cache: true

      - name: Flutter version
        run: flutter --version

      - uses: stelynx/dart-full-coverage@v1.1.1
        with:
          package: egakcap
          ignore: "*_state.dart, do_not_import_me.dart"

      - name: Install dependencies and generated files
        run: make gen

      - name: Run tests
        run: |
          flutter build aot
          flutter analyze
          flutter test --coverage .

      - uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{ secrets.CODECOV_TOKEN }


  android_build:
    name: "Build android app"
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{env.JAVA_VERSION}}
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          cache: true
      - name: Install Flutter dependencies
        run: flutter pub get
      - name: Decrypt Android keys
        run: sh ./.github/scripts/decrypt_android_secrets.sh
        env:
          ANDROID_KEYS_SECRET_PASSPHRASE: ${{ secrets.ANDROID_KEYS_SECRET_PASSPHRASE }}
      - name: Build android app
        run: flutter build appbundle --release
      - name: Upload android build
        uses: actions/upload-artifact@v3
        with:
          name: android_appbundle
          path: build/app/outputs/bundle/release/app-release.aab

  ios_build:
    name: "Build ios app"
    runs-on: macOS-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          cache: true
      - name: Install Flutter dependencies
        run: flutter pub get
      - name: Build ios app
        run: flutter build ios --release --no-codesign

  chrome_build:
    name: "Build chrome extension"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"

      - name: Install NPM dependencies
        run: npm install

      - name: Build using Webpack
        run: npm run build

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{env.FLUTTER_CHANNEL}}
          cache: true

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Build the Flutter Chrome extension
        run: flutter build web --web-renderer html --csp --release

      - name: Zip build
        uses: papeloto/action-zip@v1
        with:
          files: build/web/
          dest: ribn_chrome_ext.zip

      - name: Upload extension build
        uses: actions/upload-artifact@v3
        with:
          name: ribn_chrome_ext.zip
          path: ribn_chrome_ext.zip
