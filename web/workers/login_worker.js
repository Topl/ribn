// Generated by dart2js (NullSafetyMode.sound, csp), the Dart to JavaScript compiler version: 2.17.1.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinPropertiesHard(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key))
        to[key] = from[key];
    }
  }
  function mixinPropertiesEasy(from, to) {
    Object.assign(to, from);
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        cls.prototype.__proto__ = sup.prototype;
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixinEasy(cls, mixin) {
    mixinPropertiesEasy(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function mixinHard(cls, mixin) {
    mixinPropertiesHard(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazyOld(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        A.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel)
        holder[name] = initializer();
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel)
          A.throwLateFieldADI(name);
        holder[name] = value;
      }
      var finalValue = holder[name];
      holder[getterName] = function() {
        return finalValue;
      };
      return finalValue;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function instanceTearOffGetter(isIntercepted, parameters) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(receiver, this);
    } : function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(this, null);
    };
  }
  function staticTearOffGetter(parameters) {
    var cache = null;
    return function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters).prototype;
      return cache;
    };
  }
  var typesOffset = 0;
  function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    if (typeof funType == "number")
      funType += typesOffset;
    return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
  }
  function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
    var getterFunction = staticTearOffGetter(parameters);
    holder[getterName] = getterFunction;
  }
  function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    isIntercepted = !!isIntercepted;
    var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
    var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
    prototype[getterName] = getterFunction;
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, lazyOld: lazyOld, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  var A = {JS_CONST: function JS_CONST() {
    },
    checkNotNullable(value, $name, $T) {
      return value;
    },
    SubListIterable$(_iterable, _start, _endOrLength, $E) {
      A.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        A.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          A.throwExpression(A.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new A.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    IterableElementError_tooFew() {
      return new A.StateError("Too few elements");
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    CodeUnits: function CodeUnits(t0) {
      this._string = t0;
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S(value) {
      var result;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      result = J.toString$0$(value);
      return result;
    },
    Primitives_objectHashCode(object) {
      var hash,
        property = $.Primitives__identityHashCodeProperty;
      if (property == null)
        property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
      hash = object[property];
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object[property] = hash;
      }
      return hash;
    },
    Primitives_objectTypeName(object) {
      return A.Primitives__objectTypeNameNewRti(object);
    },
    Primitives__objectTypeNameNewRti(object) {
      var interceptor, dispatchName, t1, $constructor, constructorName;
      if (object instanceof A.Object)
        return A._rtiToString(A.instanceType(object), null);
      interceptor = J.getInterceptor$(object);
      if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = B.C_JS_CONST(object);
        t1 = dispatchName !== "Object" && dispatchName !== "";
        if (t1)
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string")
            t1 = constructorName !== "Object" && constructorName !== "";
          else
            t1 = false;
          if (t1)
            return constructorName;
        }
      }
      return A._rtiToString(A.instanceType(object), null);
    },
    Primitives_stringFromCharCode(charCode) {
      var bits;
      if (charCode <= 65535)
        return String.fromCharCode(charCode);
      if (charCode <= 1114111) {
        bits = charCode - 65536;
        return String.fromCharCode((B.JSInt_methods._shrOtherPositive$1(bits, 10) | 55296) >>> 0, bits & 1023 | 56320);
      }
      throw A.wrapException(A.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_lazyAsJsDate(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._value);
      return receiver.date;
    },
    Primitives_getYear(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0;
      return t1;
    },
    Primitives_getMonth(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1;
      return t1;
    },
    Primitives_getDay(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0;
      return t1;
    },
    Primitives_getHours(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0;
      return t1;
    },
    Primitives_getMinutes(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0;
      return t1;
    },
    Primitives_getSeconds(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0;
      return t1;
    },
    Primitives_getMilliseconds(receiver) {
      var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0;
      return t1;
    },
    iae(argument) {
      throw A.wrapException(A.argumentErrorValue(argument));
    },
    ioore(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw A.wrapException(A.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError(indexable, index) {
      var $length, _s5_ = "index";
      if (!A._isInt(index))
        return new A.ArgumentError(true, index, _s5_, null);
      $length = A._asInt(J.get$length$asx(indexable));
      if (index < 0 || index >= $length)
        return A.IndexError$(index, indexable, _s5_, null, $length);
      return A.RangeError$value(index, _s5_);
    },
    diagnoseRangeError(start, end, $length) {
      if (start < 0 || start > $length)
        return A.RangeError$range(start, 0, $length, "start", null);
      if (end != null)
        if (end < start || end > $length)
          return A.RangeError$range(end, start, $length, "end", null);
      return new A.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue(object) {
      return new A.ArgumentError(true, object, null, null);
    },
    wrapException(ex) {
      var wrapper, t1;
      if (ex == null)
        ex = new A.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      t1 = A.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper() {
      return J.toString$0$(this.dartException);
    },
    throwExpression(ex) {
      throw A.wrapException(ex);
    },
    throwConcurrentModificationError(collection) {
      throw A.wrapException(A.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = A._setArrayType([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException(ex) {
      if (ex == null)
        return new A.NullThrownFromJavaScriptException(ex);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return A.saveStackTrace(ex, ex.dartException);
      return A._unwrapNonDartException(ex);
    },
    saveStackTrace(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException(ex) {
      var message, number, ieErrorCode, t1, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, _null = null;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", _null));
            case 445:
            case 5007:
              t1 = A.S(message);
              return A.saveStackTrace(ex, new A.NullError(t1 + " (Error " + ieErrorCode + ")", _null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t1 = match != null;
                        } else
                          t1 = true;
                      } else
                        t1 = true;
                    } else
                      t1 = true;
                  } else
                    t1 = true;
                } else
                  t1 = true;
              } else
                t1 = true;
            } else
              t1 = true;
            if (t1) {
              A._asString(message);
              return A.saveStackTrace(ex, new A.NullError(message, match == null ? _null : match.method));
            }
          }
        }
        return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new A.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return A.saveStackTrace(ex, new A.ArgumentError(false, _null, _null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new A.StackOverflowError();
      return ex;
    },
    getTraceFromException(exception) {
      var trace;
      if (exception == null)
        return new A._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new A._StackTrace(exception);
    },
    objectHashCode(object) {
      if (object == null || typeof object != "object")
        return J.get$hashCode$(object);
      else
        return A.Primitives_objectHashCode(object);
    },
    fillLiteralMap(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    invokeClosure(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      type$.Function._as(closure);
      switch (A._asInt(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw A.wrapException(A.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS(closure, arity) {
      var $function;
      if (closure == null)
        return null;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, A.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff(parameters) {
      var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
        container = parameters.co,
        isStatic = parameters.iS,
        isIntercepted = parameters.iI,
        needsDirectAccess = parameters.nDA,
        applyTrampolineIndex = parameters.aI,
        funsOrNames = parameters.fs,
        callNames = parameters.cs,
        $name = funsOrNames[0],
        callName = callNames[0],
        $function = container[$name],
        t1 = parameters.fT;
      t1.toString;
      $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else
        $constructor = function tear_off(a, b) {
          this.$initialize(a, b);
        };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      $prototype.$_name = $name;
      $prototype.$_target = $function;
      t2 = !isStatic;
      if (t2)
        trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
      else {
        $prototype.$static_name = $name;
        trampoline = $function;
      }
      $prototype.$signature = A.Closure__computeSignatureFunctionNewRti(t1, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
        stub = funsOrNames[i];
        if (typeof stub == "string") {
          stub0 = container[stub];
          stubName = stub;
          stub = stub0;
        } else
          stubName = "";
        stubCallName = callNames[i];
        if (stubCallName != null) {
          if (t2)
            stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex)
          applyTrampoline = stub;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = parameters.rC;
      $prototype.$defaultValues = parameters.dV;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti(functionType, isStatic, isIntercepted) {
      if (typeof functionType == "number")
        return functionType;
      if (typeof functionType == "string") {
        if (isStatic)
          throw A.wrapException("Cannot compute signature for static tearoff.");
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, A.BoundClosure_evalRecipe);
      }
      throw A.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          return function(entry, receiverOf) {
            return function() {
              return receiverOf(this)[entry]();
            };
          }(stubName, getReceiver);
        case 1:
          return function(entry, receiverOf) {
            return function(a) {
              return receiverOf(this)[entry](a);
            };
          }(stubName, getReceiver);
        case 2:
          return function(entry, receiverOf) {
            return function(a, b) {
              return receiverOf(this)[entry](a, b);
            };
          }(stubName, getReceiver);
        case 3:
          return function(entry, receiverOf) {
            return function(a, b, c) {
              return receiverOf(this)[entry](a, b, c);
            };
          }(stubName, getReceiver);
        case 4:
          return function(entry, receiverOf) {
            return function(a, b, c, d) {
              return receiverOf(this)[entry](a, b, c, d);
            };
          }(stubName, getReceiver);
        case 5:
          return function(entry, receiverOf) {
            return function(a, b, c, d, e) {
              return receiverOf(this)[entry](a, b, c, d, e);
            };
          }(stubName, getReceiver);
        default:
          return function(f, receiverOf) {
            return function() {
              return f.apply(receiverOf(this), arguments);
            };
          }($function, getReceiver);
      }
    },
    Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
      var arity, t1;
      if (isIntercepted)
        return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
      arity = $function.length;
      t1 = A.Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf,
        getInterceptor = A.BoundClosure_interceptorOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(entry, interceptorOf, receiverOf) {
            return function() {
              return interceptorOf(this)[entry](receiverOf(this));
            };
          }(stubName, getInterceptor, getReceiver);
        case 2:
          return function(entry, interceptorOf, receiverOf) {
            return function(a) {
              return interceptorOf(this)[entry](receiverOf(this), a);
            };
          }(stubName, getInterceptor, getReceiver);
        case 3:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b) {
              return interceptorOf(this)[entry](receiverOf(this), a, b);
            };
          }(stubName, getInterceptor, getReceiver);
        case 4:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c);
            };
          }(stubName, getInterceptor, getReceiver);
        case 5:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
            };
          }(stubName, getInterceptor, getReceiver);
        case 6:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d, e) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
            };
          }(stubName, getInterceptor, getReceiver);
        default:
          return function(f, interceptorOf, receiverOf) {
            return function() {
              var a = [receiverOf(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(interceptorOf(this), a);
            };
          }($function, getInterceptor, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
      var arity, t1;
      if ($.BoundClosure__interceptorFieldNameCache == null)
        $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
      if ($.BoundClosure__receiverFieldNameCache == null)
        $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
      arity = $function.length;
      t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    closureFromTearOff(parameters) {
      return A.Closure_fromTearOff(parameters);
    },
    BoundClosure_evalRecipe(closure, recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
    },
    BoundClosure_receiverOf(closure) {
      return closure._receiver;
    },
    BoundClosure_interceptorOf(closure) {
      return closure._interceptor;
    },
    BoundClosure__computeFieldNamed(fieldName) {
      var t1, i, $name,
        template = new A.BoundClosure("receiver", "interceptor"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template), type$.nullable_Object);
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found.", null));
    },
    throwCyclicInit(staticName) {
      throw A.wrapException(new A.CyclicInitializationError(staticName));
    },
    getIsolateAffinityTag($name) {
      return init.getIsolateTag($name);
    },
    defineProperty(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = A._asString($.getTagFunction.call$1(obj)),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = A._asStringQ($.alternateTagFunction.call$2(obj, tag));
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = A.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return A.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw A.wrapException(A.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return A.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return A.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      A.initNativeDispatchContinue();
    },
    initNativeDispatchContinue() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      A.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = B.C_JS_CONST0();
      hooks = A.applyHooksTransformer(B.C_JS_CONST1, A.applyHooksTransformer(B.C_JS_CONST2, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST4, A.applyHooksTransformer(B.C_JS_CONST5, A.applyHooksTransformer(B.C_JS_CONST6(B.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new A.initHooks_closure(getTag);
      $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    escapeReplacement(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    quoteStringForRegExp(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked(receiver, pattern, replacement) {
      var t1 = A.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      return t1;
    },
    stringReplaceAllUncheckedString(receiver, pattern, replacement) {
      var $length, t1, i, index;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        t1 = "" + replacement;
        for (i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      index = receiver.indexOf(pattern, 0);
      if (index < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(A.quoteStringForRegExp(pattern), "g"), A.escapeReplacement(replacement));
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError(t0, t1) {
      this.__js_helper$_message = t0;
      this._method = t1;
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    Closure0Args: function Closure0Args() {
    },
    Closure2Args: function Closure2Args() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1) {
      this._receiver = t0;
      this._interceptor = t1;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      this.hashMapCellKey = t0;
      this.hashMapCellValue = t1;
      this._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
      _.$ti = t2;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    _ensureNativeList(list) {
      var t1, result, i;
      if (type$.JSIndexable_dynamic._is(list))
        return list;
      t1 = J.getInterceptor$asx(list);
      result = A.List_List$filled(t1.get$length(list), null, false, type$.dynamic);
      for (i = 0; i < t1.get$length(list); ++i)
        B.JSArray_methods.$indexSet(result, i, t1.$index(list, i));
      return result;
    },
    NativeByteData_NativeByteData$view(buffer, offsetInBytes, $length) {
      return $length == null ? new DataView(buffer, offsetInBytes) : new DataView(buffer, offsetInBytes, $length);
    },
    _checkValidIndex(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw A.wrapException(A.diagnoseIndexError(list, index));
    },
    _checkValidRange(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        if (end == null)
          t1 = start > $length;
        else
          t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw A.wrapException(A.diagnoseRangeError(start, end, $length));
      if (end == null)
        return $length;
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = A._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return A.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 11 || kind === 12;
    },
    Rti__getCanonicalRecipe(rti) {
      return rti._canonicalRecipe;
    },
    findType(recipe) {
      return A._Universe_eval(init.typeUniverse, recipe, false);
    },
    _substitute(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 11:
          returnType = rti._primary;
          substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 12:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 13:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result[i] = substitutedRti;
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.splice(i, 3, t1, t2, substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new A._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    _setArrayType(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return A.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType(object, testRti) {
      var rti;
      if (A.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof A.Closure) {
          rti = A.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return A.instanceType(object);
    },
    instanceType(object) {
      var rti;
      if (object instanceof A.Object) {
        rti = object.$ti;
        return rti != null ? rti : A._instanceTypeFromConstructor(object);
      }
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType(object) {
      var rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return A._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss(instance, $constructor) {
      var effectiveConstructor = instance instanceof A.Closure ? instance.__proto__.__proto__.constructor : $constructor,
        rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = A._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    _installSpecializedIsTest(object) {
      var t1, unstarred, isFn, $name, testRti = this;
      if (testRti === type$.Object)
        return A._finishIsFn(testRti, object, A._isObject);
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return A._finishIsFn(testRti, object, A._isTop);
      t1 = testRti._kind;
      unstarred = t1 === 6 ? testRti._primary : testRti;
      if (unstarred === type$.int)
        isFn = A._isInt;
      else if (unstarred === type$.double || unstarred === type$.num)
        isFn = A._isNum;
      else if (unstarred === type$.String)
        isFn = A._isString;
      else
        isFn = unstarred === type$.bool ? A._isBool : null;
      if (isFn != null)
        return A._finishIsFn(testRti, object, isFn);
      if (unstarred._kind === 9) {
        $name = unstarred._primary;
        if (unstarred._rest.every(A.isTopType)) {
          testRti._specializedTestResource = "$is" + $name;
          if ($name === "List")
            return A._finishIsFn(testRti, object, A._isListTestViaProperty);
          return A._finishIsFn(testRti, object, A._isTestViaProperty);
        }
      } else if (t1 === 7)
        return A._finishIsFn(testRti, object, A._generalNullableIsTestImplementation);
      return A._finishIsFn(testRti, object, A._generalIsTestImplementation);
    },
    _finishIsFn(testRti, object, isFn) {
      testRti._is = isFn;
      return testRti._is(object);
    },
    _installSpecializedAsCheck(object) {
      var t1, testRti = this,
        asFn = A._generalAsCheckImplementation;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        asFn = A._asTop;
      else if (testRti === type$.Object)
        asFn = A._asObject;
      else {
        t1 = A.isNullable(testRti);
        if (t1)
          asFn = A._generalNullableAsCheckImplementation;
      }
      testRti._as = asFn;
      return testRti._as(object);
    },
    _nullIs(testRti) {
      var t1,
        kind = testRti._kind;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          if (!(testRti === type$.legacy_Never))
            if (kind !== 7)
              t1 = kind === 8 && A._nullIs(testRti._primary) || testRti === type$.Null || testRti === type$.JSNull;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _generalIsTestImplementation(object) {
      var testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      return A._isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), null, testRti, null);
    },
    _generalNullableIsTestImplementation(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isListTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      if (typeof object != "object")
        return false;
      if (Array.isArray(object))
        return true;
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation(object) {
      var t1, testRti = this;
      if (object == null) {
        t1 = A.isNullable(testRti);
        if (t1)
          return object;
      } else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _generalNullableAsCheckImplementation(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _failedAsCheck(object, testRti) {
      throw A.wrapException(A._TypeError$fromMessage(A._Error_compose(object, A.instanceOrFunctionType(object, testRti), A._rtiToString(testRti, null))));
    },
    _Error_compose(object, objectRti, checkedTypeDescription) {
      var objectDescription = A.Error_safeToString(object);
      return objectDescription + ": type '" + A._rtiToString(objectRti == null ? A.instanceType(object) : objectRti, null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage(message) {
      return new A._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType(object, type) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, null, type));
    },
    _isObject(object) {
      return object != null;
    },
    _asObject(object) {
      if (object != null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "Object"));
    },
    _isTop(object) {
      return true;
    },
    _asTop(object) {
      return object;
    },
    _isBool(object) {
      return true === object || false === object;
    },
    _asBool(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolS(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolQ(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool?"));
    },
    _asDouble(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double?"));
    },
    _isInt(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntS(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntQ(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int?"));
    },
    _isNum(object) {
      return typeof object == "number";
    },
    _asNum(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num?"));
    },
    _isString(object) {
      return typeof object == "string";
    },
    _asString(object) {
      if (typeof object == "string")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringS(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringQ(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String?"));
    },
    _rtiArrayToString(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + A._rtiToString(array[i], genericContext);
      return s;
    },
    _functionRtiToString(functionType, genericContext, bounds) {
      var boundsLength, outerContextLength, offset, i, t1, t2, typeParametersText, typeSep, t3, t4, boundRti, kind, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null) {
          genericContext = A._setArrayType([], type$.JSArray_String);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          B.JSArray_methods.add$1(genericContext, "T" + (offset + i));
        for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          t3 = genericContext.length;
          t4 = t3 - 1 - i;
          if (!(t4 >= 0))
            return A.ioore(genericContext, t4);
          typeParametersText = B.JSString_methods.$add(typeParametersText + typeSep, genericContext[t4]);
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            if (!(boundRti === t2))
              t3 = false;
            else
              t3 = true;
          else
            t3 = true;
          if (!t3)
            typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else {
        typeParametersText = "";
        outerContextLength = null;
      }
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = A._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString(rti, genericContext) {
      var s, questionArgument, argumentKind, $name, $arguments, t1, t2,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        s = A._rtiToString(rti._primary, genericContext);
        return s;
      }
      if (kind === 7) {
        questionArgument = rti._primary;
        s = A._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 11 || argumentKind === 12 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 8)
        return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 9) {
        $name = A._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return A._functionRtiToString(rti, genericContext, null);
      if (kind === 12)
        return A._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 13) {
        t1 = rti._primary;
        t2 = genericContext.length;
        t1 = t2 - 1 - t1;
        if (!(t1 >= 0 && t1 < t2))
          return A.ioore(genericContext, t1);
        return genericContext[t1];
      }
      return "?";
    },
    _unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        t1 = universe.eT,
        probe = t1[cls];
      if (probe == null)
        return A._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = A._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = A._Utils_newArrayOrEmpty($length);
        for (i = 0; i < $length; ++i)
          $arguments[i] = erased;
        $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
        t1[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules(universe, rules) {
      return A._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes(universe, types) {
      return A._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval(universe, recipe, normalize) {
      var rti,
        t1 = universe.eC,
        probe = t1.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, null, recipe, normalize));
      t1.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests(universe, rti) {
      rti._as = A._installSpecializedAsCheck;
      rti._is = A._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;
        else
          t1 = true;
        if (t1)
          return baseType;
      }
      rti = new A.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 7)
              t1 = baseKind === 8 && A.isNullable(baseType._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return baseType;
        else if (baseKind === 1 || baseType === type$.legacy_Never)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          if (starArgument._kind === 8 && A.isNullable(starArgument._primary))
            return starArgument;
          else
            return A.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti(universe, baseType, key, normalize) {
      var t1, t2, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.legacy_Object))
            t2 = false;
          else
            t2 = true;
        else
          t2 = true;
        if (t2 || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 13;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed($arguments) {
      var s, sep, i, t1, nameSep,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
      }
      return s;
    },
    _Universe__lookupInterfaceRti(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length > 0)
        s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti(universe, returnType, parameters) {
      var sep, key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 11;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = A._Utils_newArrayOrEmpty($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 12;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Parser_create(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse(parser) {
      var t2, i, ch, t3, array, head, base, parameters, optionalPositional, named, item,
        source = parser.r,
        t1 = parser.s;
      for (t2 = source.length, i = 0; i < t2;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = A._Parser_handleDigit(i + 1, ch, source, t1);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36)
          i = A._Parser_handleIdentifier(parser, i, source, t1, false);
        else if (ch === 46)
          i = A._Parser_handleIdentifier(parser, i, source, t1, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              t1.push(false);
              break;
            case 33:
              t1.push(true);
              break;
            case 59:
              t1.push(A._Parser_toType(parser.u, parser.e, t1.pop()));
              break;
            case 94:
              t1.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
              break;
            case 35:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 62:
              t3 = parser.u;
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              head = t1.pop();
              if (typeof head == "string")
                t1.push(A._Universe__lookupInterfaceRti(t3, head, array));
              else {
                base = A._Parser_toType(t3, parser.e, head);
                switch (base._kind) {
                  case 11:
                    t1.push(A._Universe__lookupGenericFunctionRti(t3, base, array, parser.n));
                    break;
                  default:
                    t1.push(A._Universe__lookupBindingRti(t3, base, array));
                    break;
                }
              }
              break;
            case 38:
              A._Parser_handleExtendedOperations(parser, t1);
              break;
            case 42:
              t3 = parser.u;
              t1.push(A._Universe__lookupStarRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 63:
              t3 = parser.u;
              t1.push(A._Universe__lookupQuestionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 47:
              t3 = parser.u;
              t1.push(A._Universe__lookupFutureOrRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 40:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 41:
              t3 = parser.u;
              parameters = new A._FunctionParameters();
              optionalPositional = t3.sEA;
              named = t3.sEA;
              head = t1.pop();
              if (typeof head == "number")
                switch (head) {
                  case -1:
                    optionalPositional = t1.pop();
                    break;
                  case -2:
                    named = t1.pop();
                    break;
                  default:
                    t1.push(head);
                    break;
                }
              else
                t1.push(head);
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              parameters._requiredPositional = array;
              parameters._optionalPositional = optionalPositional;
              parameters._named = named;
              t1.push(A._Universe__lookupFunctionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parameters));
              break;
            case 91:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 93:
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-1);
              break;
            case 123:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 125:
              array = t1.splice(parser.p);
              A._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-2);
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = t1.pop();
      return A._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = A._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleExtendedOperations(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
    },
    _Parser_toType(universe, environment, item) {
      if (typeof item == "string")
        return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number")
        return A._Parser_indexToType(universe, environment, item);
      else
        return item;
    },
    _Parser_toTypes(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    _isSubtype(universe, s, sEnv, t, tEnv) {
      var t1, sKind, leftTypeVariable, tKind, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (A.isStrongTopType(s))
        return false;
      if (s._kind !== 1)
        t1 = false;
      else
        t1 = true;
      if (t1)
        return true;
      leftTypeVariable = sKind === 13;
      if (leftTypeVariable)
        if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      t1 = s === type$.Null || s === type$.JSNull;
      if (t1) {
        if (tKind === 8)
          return A._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t === type$.Null || t === type$.JSNull || tKind === 7 || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 8)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        if (sKind === 6)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return sKind !== 7;
      }
      if (sKind === 6)
        return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 6) {
        t1 = A.Rti__getQuestionFromStar(universe, t);
        return A._isSubtype(universe, s, sEnv, t1, tEnv);
      }
      if (sKind === 8) {
        if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 7) {
        t1 = A._isSubtype(universe, type$.Null, sEnv, t, tEnv);
        return t1 && A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      }
      if (tKind === 8) {
        if (A._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 7) {
        t1 = A._isSubtype(universe, s, sEnv, type$.Null, tEnv);
        return t1 || A._isSubtype(universe, s, sEnv, t._primary, tEnv);
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 11;
      if ((!t1 || sKind === 12) && t === type$.Function)
        return true;
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 12)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 11) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return A._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      return false;
    },
    _isFunctionSubtype(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype(universe, s, sEnv, t, tEnv) {
      var rule, recipes, $length, supertypeArgs, i, t1, t2,
        sName = s._primary,
        tName = t._primary;
      for (; sName !== tName;) {
        rule = universe.tR[sName];
        if (rule == null)
          return false;
        if (typeof rule == "string") {
          sName = rule;
          continue;
        }
        recipes = rule[tName];
        if (recipes == null)
          return false;
        $length = recipes.length;
        supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
        for (i = 0; i < $length; ++i)
          supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
        return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv);
      }
      t1 = s._rest;
      t2 = t._rest;
      return A._areArgumentsSubtypes(universe, t1, null, sEnv, t2, tEnv);
    },
    _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv) {
      var i, t1, t2,
        $length = sArgs.length;
      for (i = 0; i < $length; ++i) {
        t1 = sArgs[i];
        t2 = tArgs[i];
        if (!A._isSubtype(universe, t1, sEnv, t2, tEnv))
          return false;
      }
      return true;
    },
    isNullable(t) {
      var t1,
        kind = t._kind;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!A.isStrongTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && A.isNullable(t._primary)))
              t1 = kind === 8 && A.isNullable(t._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isTopType(t) {
      var t1;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isStrongTopType(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    _Utils_newArrayOrEmpty($length) {
      return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    _AsyncRun__initializeScheduleImmediate() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return A.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(A.convertDartClosureToJS(new A._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new A._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return A.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return A.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride(callback) {
      self.scheduleImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateJsOverride_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate(callback) {
      self.setImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer(callback) {
      type$.void_Function._as(callback);
      A._TimerImpl$(0, callback);
    },
    _TimerImpl$(milliseconds, callback) {
      var t1 = new A._TimerImpl();
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    AsyncError$(error, stackTrace) {
      var t1 = A.checkNotNullable(error, "error", type$.Object);
      return new A.AsyncError(t1, stackTrace == null ? A.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    AsyncError_defaultStackTrace(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return B.C__StringStackTrace;
    },
    _Future__chainCoreFuture(source, target) {
      var t1, t2, listeners;
      for (t1 = type$._Future_dynamic; t2 = source._state, (t2 & 4) !== 0;)
        source = t1._as(source._resultOrListeners);
      if ((t2 & 24) !== 0) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(source);
        A._Future__propagateToListeners(target, listeners);
      } else {
        listeners = type$.nullable__FutureListener_dynamic_dynamic._as(target._resultOrListeners);
        target._state = target._state & 1 | 4;
        target._resultOrListeners = source;
        source._prependListeners$1(listeners);
      }
    },
    _Future__propagateToListeners(source, listeners) {
      var t2, t3, t4, _box_0, t5, t6, hasError, asyncError, nextListener, nextListener0, sourceResult, t7, zone, oldZone, result, current, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.AsyncError, t3 = type$.nullable__FutureListener_dynamic_dynamic, t4 = type$.Future_dynamic; true;) {
        _box_0 = {};
        t5 = t1._state;
        t6 = (t5 & 16) === 0;
        hasError = !t6;
        if (listeners == null) {
          if (hasError && (t5 & 1) === 0) {
            asyncError = t2._as(t1._resultOrListeners);
            A._rootHandleError(asyncError.error, asyncError.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          A._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t5 = _box_1.source;
        sourceResult = t5._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        if (t6) {
          t7 = t1.state;
          t7 = (t7 & 1) !== 0 || (t7 & 15) === 8;
        } else
          t7 = true;
        if (t7) {
          zone = t1.result._zone;
          if (hasError) {
            t5 = t5._zone === zone;
            t5 = !(t5 || t5);
          } else
            t5 = false;
          if (t5) {
            t2._as(sourceResult);
            A._rootHandleError(sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = t1.state;
          if ((t1 & 15) === 8)
            new A._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t6) {
            if ((t1 & 1) !== 0)
              new A._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new A._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t4._is(t1)) {
            t5 = _box_0.listener.$ti;
            t5 = t5._eval$1("Future<2>")._is(t1) || !t5._rest[1]._is(t1);
          } else
            t5 = false;
          if (t5) {
            t4._as(t1);
            result = _box_0.listener.result;
            if ((t1._state & 24) !== 0) {
              current = t3._as(result._resultOrListeners);
              result._resultOrListeners = null;
              listeners = result._reverseListeners$1(current);
              result._state = t1._state & 30 | result._state & 1;
              result._resultOrListeners = t1._resultOrListeners;
              _box_1.source = t1;
              continue;
            } else
              A._Future__chainCoreFuture(t1, result);
            return;
          }
        }
        result = _box_0.listener.result;
        current = t3._as(result._resultOrListeners);
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t5 = _box_0.listenerValueOrError;
        if (!t1) {
          result.$ti._precomputed1._as(t5);
          result._state = 8;
          result._resultOrListeners = t5;
        } else {
          t2._as(t5);
          result._state = result._state & 1 | 16;
          result._resultOrListeners = t5;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler(errorHandler, zone) {
      var t1 = type$.dynamic_Function_Object_StackTrace;
      if (t1._is(errorHandler))
        return t1._as(errorHandler);
      t1 = type$.dynamic_Function_Object;
      if (t1._is(errorHandler))
        return t1._as(errorHandler);
      throw A.wrapException(A.ArgumentError$value(errorHandler, "onError", string$.Error_));
    },
    _microtaskLoop() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop() {
      $._isInCallbackLoop = true;
      try {
        A._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback(callback) {
      var newEntry = new A._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        A._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new A._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask(callback) {
      var _null = null,
        currentZone = $.Zone__current;
      if (B.C__RootZone === currentZone) {
        A._rootScheduleMicrotask(_null, _null, B.C__RootZone, callback);
        return;
      }
      A._rootScheduleMicrotask(_null, _null, currentZone, type$.void_Function._as(currentZone.bindCallbackGuarded$1(callback)));
    },
    _rootHandleError(error, stackTrace) {
      A._schedulePriorityAsyncCallback(new A._rootHandleError_closure(error, stackTrace));
    },
    _rootRun($self, $parent, zone, f, $R) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary($self, $parent, zone, f, arg, $R, $T) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask($self, $parent, zone, f) {
      type$.void_Function._as(f);
      if (B.C__RootZone !== zone)
        f = zone.bindCallbackGuarded$1(f);
      A._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl() {
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.$this = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__chainFuture_closure: function _Future__chainFuture_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    StreamSubscription: function StreamSubscription() {
    },
    StreamTransformerBase: function StreamTransformerBase() {
    },
    _Zone: function _Zone() {
    },
    _rootHandleError_closure: function _rootHandleError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    LinkedHashMap_LinkedHashMap$_literal(keyValuePairs, $K, $V) {
      return $K._eval$1("@<0>")._bind$1($V)._eval$1("LinkedHashMap<1,2>")._as(A.fillLiteralMap(keyValuePairs, new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"))));
    },
    LinkedHashMap_LinkedHashMap$_empty($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    IterableBase_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (A._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = A._setArrayType([], type$.JSArray_String);
      B.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        A._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = A.StringBuffer__writeAll(leftDelimiter, type$.Iterable_dynamic._as(parts), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (A._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new A.StringBuffer(leftDelimiter);
      B.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        t1 = buffer;
        t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting(o) {
      var t1, i;
      for (t1 = $._toStringVisiting.length, i = 0; i < t1; ++i)
        if (o === $._toStringVisiting[i])
          return true;
      return false;
    },
    _iterablePartsToStrings(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = A.S(it.get$current());
        B.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            B.JSArray_methods.add$1(parts, A.S(penultimate));
            return;
          }
          ultimateString = A.S(penultimate);
          if (0 >= parts.length)
            return A.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return A.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              B.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = A.S(penultimate);
          ultimateString = A.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        B.JSArray_methods.add$1(parts, elision);
      B.JSArray_methods.add$1(parts, penultimateString);
      B.JSArray_methods.add$1(parts, ultimateString);
    },
    MapBase_mapToString(m) {
      var result, t1 = {};
      if (A._isToStringVisiting(m))
        return "{...}";
      result = new A.StringBuffer("");
      try {
        B.JSArray_methods.add$1($._toStringVisiting, m);
        result._contents += "{";
        t1.first = true;
        m.forEach$1(0, new A.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    ListBase: function ListBase() {
    },
    ListMixin: function ListMixin() {
    },
    MapBase: function MapBase() {
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    MapMixin: function MapMixin() {
    },
    _ListBase_Object_ListMixin: function _ListBase_Object_ListMixin() {
    },
    _parseJson(source, reviver) {
      var e, exception, t1, parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.FormatException$(String(e), null, null);
        throw A.wrapException(t1);
      }
      t1 = A._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return new A._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = A._convertJsonToDartLazy(object[i]);
      return object;
    },
    JsonUnsupportedObjectError$(unsupportedObject, cause, partialResult) {
      return new A.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    _defaultToEncodable(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier$(_sink, _toEncodable) {
      return new A._JsonStringStringifier(_sink, [], A.convert___defaultToEncodable$closure());
    },
    _JsonStringStringifier_stringify(object, toEncodable, indent) {
      var t1,
        output = new A.StringBuffer(""),
        stringifier = A._JsonStringStringifier$(output, toEncodable);
      stringifier.writeObject$1(object);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._data = null;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._parent = t0;
    },
    _UnicodeSubsetEncoder: function _UnicodeSubsetEncoder() {
    },
    Codec: function Codec() {
    },
    Converter: function Converter() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0) {
      this._toEncodable = t0;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    Latin1Encoder: function Latin1Encoder() {
    },
    Error__objectToString(object) {
      if (object instanceof A.Closure)
        return object.toString$0(0);
      return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
    },
    Error__throw(error, stackTrace) {
      error = A.wrapException(error);
      if (error == null)
        error = type$.Object._as(error);
      error.stack = stackTrace.toString$0(0);
      throw error;
      throw A.wrapException("unreachable");
    },
    List_List$filled($length, fill, growable, $E) {
      var i,
        result = J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < $length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from(elements, $E) {
      var t1,
        list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, $E._as(t1.get$current()));
      return list;
    },
    List_List$of(elements, growable, $E) {
      var t1 = A.List_List$_of(elements, $E);
      return t1;
    },
    List_List$_of(elements, $E) {
      var list, t1;
      if (Array.isArray(elements))
        return A._setArrayType(elements.slice(0), $E._eval$1("JSArray<0>"));
      list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, t1.get$current());
      return list;
    },
    StringBuffer__writeAll(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += A.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        string += A.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          string = string + separator + A.S(iterator.get$current());
      }
      return string;
    },
    DateTime__fourDigits(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Error_safeToString(object) {
      if (typeof object == "number" || A._isBool(object) || object == null)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return A.Error__objectToString(object);
    },
    AssertionError$(message) {
      return new A.AssertionError(message);
    },
    ArgumentError$(message, $name) {
      return new A.ArgumentError(false, null, $name, message);
    },
    ArgumentError$value(value, $name, message) {
      return new A.ArgumentError(true, value, $name, message);
    },
    RangeError$value(value, $name) {
      return new A.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range(invalidValue, minValue, maxValue, $name, message) {
      return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValidRange(start, end, $length) {
      if (0 > start || start > $length)
        throw A.wrapException(A.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (start > end || end > $length)
          throw A.wrapException(A.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative(value, $name) {
      if (value < 0)
        throw A.wrapException(A.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$(invalidValue, indexable, $name, message, $length) {
      var t1 = A._asInt($length == null ? J.get$length$asx(indexable) : $length);
      return new A.IndexError(t1, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$(message) {
      return new A.UnsupportedError(message);
    },
    UnimplementedError$(message) {
      return new A.UnimplementedError(message);
    },
    StateError$(message) {
      return new A.StateError(message);
    },
    ConcurrentModificationError$(modifiedObject) {
      return new A.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception(message) {
      return new A._Exception(message);
    },
    FormatException$(message, source, offset) {
      return new A.FormatException(message, source, offset);
    },
    DateTime: function DateTime(t0, t1) {
      this._value = t0;
      this.isUtc = t1;
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    NullThrownError: function NullThrownError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    CyclicInitializationError: function CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Iterable: function Iterable() {
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace() {
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    _EventStreamSubscription$(_target, _eventType, onData, _useCapture, $T) {
      var t1 = A._wrapZone(new A._EventStreamSubscription_closure(onData), type$.Event);
      if (t1 != null && true)
        B.DedicatedWorkerGlobalScope_methods.addEventListener$3(_target, _eventType, t1, false);
      return new A._EventStreamSubscription(_target, _eventType, t1, false, $T._eval$1("_EventStreamSubscription<0>"));
    },
    _wrapZone(callback, $T) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    Blob: function Blob() {
    },
    DedicatedWorkerGlobalScope: function DedicatedWorkerGlobalScope() {
    },
    DomException: function DomException() {
    },
    Event: function Event() {
    },
    EventTarget: function EventTarget() {
    },
    File: function File() {
    },
    MessageEvent: function MessageEvent() {
    },
    MessagePort: function MessagePort() {
    },
    WorkerGlobalScope: function WorkerGlobalScope() {
    },
    EventStreamProvider: function EventStreamProvider(t0) {
      this.$ti = t0;
    },
    _EventStream: function _EventStream(t0, t1, t2, t3) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _EventStreamSubscription: function _EventStreamSubscription(t0, t1, t2, t3, t4) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._onData = t2;
      _._useCapture = t3;
      _.$ti = t4;
    },
    _EventStreamSubscription_closure: function _EventStreamSubscription_closure(t0) {
      this.onData = t0;
    },
    _StructuredClone: function _StructuredClone() {
    },
    _StructuredClone_walk_closure: function _StructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _StructuredClone_walk_closure0: function _StructuredClone_walk_closure0(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _AcceptStructuredClone: function _AcceptStructuredClone() {
    },
    _AcceptStructuredClone_walk_closure: function _AcceptStructuredClone_walk_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _StructuredCloneDart2Js: function _StructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
    },
    _AcceptStructuredCloneDart2Js: function _AcceptStructuredCloneDart2Js(t0, t1) {
      this.values = t0;
      this.copies = t1;
      this.mustCopy = false;
    },
    promiseToFuture(jsPromise, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new A._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(A.convertDartClosureToJS(new A.promiseToFuture_closure(completer, $T), 1), A.convertDartClosureToJS(new A.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    NullRejectionException: function NullRejectionException(t0) {
      this.isUndefined = t0;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0, t1) {
      this.completer = t0;
      this.T = t1;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    Endian: function Endian() {
    },
    KeyStore__getMac(derivedKey, cipherText) {
      var blake2b, out,
        t1 = A.List_List$of(B.NativeUint8List_methods.sublist$2(derivedKey, 16, 32), true, type$.int);
      B.JSArray_methods.addAll$1(t1, cipherText);
      t1 = new Uint8Array(A._ensureNativeList(t1));
      blake2b = new A.Blake2bDigest(A.Register64List$(16), A.Register64$(0, null), A.Register64$(0, null), A.Register64$(0, null), A.Register64List$(16));
      blake2b._buffer = new Uint8Array(128);
      blake2b._digestLength = 32;
      blake2b.init$0();
      blake2b.update$3(t1, 0, t1.length);
      t1 = blake2b.get$digestSize();
      out = new Uint8Array(t1);
      return A.Base58_encode(type$.List_int._as(B.NativeUint8List_methods.sublist$2(out, 0, blake2b.doFinal$2(out, 0))));
    },
    KeyStore__initCipher(forEncryption, key, iv) {
      var t6, t7,
        _s11_ = "_counterOut",
        t1 = type$.int,
        t2 = J.JSArray_JSArray$fixed(0, t1),
        t3 = type$.JSArray_int,
        t4 = A._setArrayType([99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], t3),
        t5 = A._setArrayType([82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125], t3);
      t3 = new A.AESEngine(t2, t4, t5, A._setArrayType([1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], t3), A._setArrayType([2774754246, 2222750968, 2574743534, 2373680118, 234025727, 3177933782, 2976870366, 1422247313, 1345335392, 50397442, 2842126286, 2099981142, 436141799, 1658312629, 3870010189, 2591454956, 1170918031, 2642575903, 1086966153, 2273148410, 368769775, 3948501426, 3376891790, 200339707, 3970805057, 1742001331, 4255294047, 3937382213, 3214711843, 4154762323, 2524082916, 1539358875, 3266819957, 486407649, 2928907069, 1780885068, 1513502316, 1094664062, 49805301, 1338821763, 1546925160, 4104496465, 887481809, 150073849, 2473685474, 1943591083, 1395732834, 1058346282, 201589768, 1388824469, 1696801606, 1589887901, 672667696, 2711000631, 251987210, 3046808111, 151455502, 907153956, 2608889883, 1038279391, 652995533, 1764173646, 3451040383, 2675275242, 453576978, 2659418909, 1949051992, 773462580, 756751158, 2993581788, 3998898868, 4221608027, 4132590244, 1295727478, 1641469623, 3467883389, 2066295122, 1055122397, 1898917726, 2542044179, 4115878822, 1758581177, 0, 753790401, 1612718144, 536673507, 3367088505, 3982187446, 3194645204, 1187761037, 3653156455, 1262041458, 3729410708, 3561770136, 3898103984, 1255133061, 1808847035, 720367557, 3853167183, 385612781, 3309519750, 3612167578, 1429418854, 2491778321, 3477423498, 284817897, 100794884, 2172616702, 4031795360, 1144798328, 3131023141, 3819481163, 4082192802, 4272137053, 3225436288, 2324664069, 2912064063, 3164445985, 1211644016, 83228145, 3753688163, 3249976951, 1977277103, 1663115586, 806359072, 452984805, 250868733, 1842533055, 1288555905, 336333848, 890442534, 804056259, 3781124030, 2727843637, 3427026056, 957814574, 1472513171, 4071073621, 2189328124, 1195195770, 2892260552, 3881655738, 723065138, 2507371494, 2690670784, 2558624025, 3511635870, 2145180835, 1713513028, 2116692564, 2878378043, 2206763019, 3393603212, 703524551, 3552098411, 1007948840, 2044649127, 3797835452, 487262998, 1994120109, 1004593371, 1446130276, 1312438900, 503974420, 3679013266, 168166924, 1814307912, 3831258296, 1573044895, 1859376061, 4021070915, 2791465668, 2828112185, 2761266481, 937747667, 2339994098, 854058965, 1137232011, 1496790894, 3077402074, 2358086913, 1691735473, 3528347292, 3769215305, 3027004632, 4199962284, 133494003, 636152527, 2942657994, 2390391540, 3920539207, 403179536, 3585784431, 2289596656, 1864705354, 1915629148, 605822008, 4054230615, 3350508659, 1371981463, 602466507, 2094914977, 2624877800, 555687742, 3712699286, 3703422305, 2257292045, 2240449039, 2423288032, 1111375484, 3300242801, 2858837708, 3628615824, 84083462, 32962295, 302911004, 2741068226, 1597322602, 4183250862, 3501832553, 2441512471, 1489093017, 656219450, 3114180135, 954327513, 335083755, 3013122091, 856756514, 3144247762, 1893325225, 2307821063, 2811532339, 3063651117, 572399164, 2458355477, 552200649, 1238290055, 4283782570, 2015897680, 2061492133, 2408352771, 4171342169, 2156497161, 386731290, 3669999461, 837215959, 3326231172, 3093850320, 3275833730, 2962856233, 1999449434, 286199582, 3417354363, 4233385128, 3602627437, 974525996], t3), A._setArrayType([1353184337, 1399144830, 3282310938, 2522752826, 3412831035, 4047871263, 2874735276, 2466505547, 1442459680, 4134368941, 2440481928, 625738485, 4242007375, 3620416197, 2151953702, 2409849525, 1230680542, 1729870373, 2551114309, 3787521629, 41234371, 317738113, 2744600205, 3338261355, 3881799427, 2510066197, 3950669247, 3663286933, 763608788, 3542185048, 694804553, 1154009486, 1787413109, 2021232372, 1799248025, 3715217703, 3058688446, 397248752, 1722556617, 3023752829, 407560035, 2184256229, 1613975959, 1165972322, 3765920945, 2226023355, 480281086, 2485848313, 1483229296, 436028815, 2272059028, 3086515026, 601060267, 3791801202, 1468997603, 715871590, 120122290, 63092015, 2591802758, 2768779219, 4068943920, 2997206819, 3127509762, 1552029421, 723308426, 2461301159, 4042393587, 2715969870, 3455375973, 3586000134, 526529745, 2331944644, 2639474228, 2689987490, 853641733, 1978398372, 971801355, 2867814464, 111112542, 1360031421, 4186579262, 1023860118, 2919579357, 1186850381, 3045938321, 90031217, 1876166148, 4279586912, 620468249, 2548678102, 3426959497, 2006899047, 3175278768, 2290845959, 945494503, 3689859193, 1191869601, 3910091388, 3374220536, 0, 2206629897, 1223502642, 2893025566, 1316117100, 4227796733, 1446544655, 517320253, 658058550, 1691946762, 564550760, 3511966619, 976107044, 2976320012, 266819475, 3533106868, 2660342555, 1338359936, 2720062561, 1766553434, 370807324, 179999714, 3844776128, 1138762300, 488053522, 185403662, 2915535858, 3114841645, 3366526484, 2233069911, 1275557295, 3151862254, 4250959779, 2670068215, 3170202204, 3309004356, 880737115, 1982415755, 3703972811, 1761406390, 1676797112, 3403428311, 277177154, 1076008723, 538035844, 2099530373, 4164795346, 288553390, 1839278535, 1261411869, 4080055004, 3964831245, 3504587127, 1813426987, 2579067049, 4199060497, 577038663, 3297574056, 440397984, 3626794326, 4019204898, 3343796615, 3251714265, 4272081548, 906744984, 3481400742, 685669029, 646887386, 2764025151, 3835509292, 227702864, 2613862250, 1648787028, 3256061430, 3904428176, 1593260334, 4121936770, 3196083615, 2090061929, 2838353263, 3004310991, 999926984, 2809993232, 1852021992, 2075868123, 158869197, 4095236462, 28809964, 2828685187, 1701746150, 2129067946, 147831841, 3873969647, 3650873274, 3459673930, 3557400554, 3598495785, 2947720241, 824393514, 815048134, 3227951669, 935087732, 2798289660, 2966458592, 366520115, 1251476721, 4158319681, 240176511, 804688151, 2379631990, 1303441219, 1414376140, 3741619940, 3820343710, 461924940, 3089050817, 2136040774, 82468509, 1563790337, 1937016826, 776014843, 1511876531, 1389550482, 861278441, 323475053, 2355222426, 2047648055, 2383738969, 2302415851, 3995576782, 902390199, 3991215329, 1018251130, 1507840668, 1064563285, 2043548696, 3208103795, 3939366739, 1537932639, 342834655, 2262516856, 2180231114, 1053059257, 741614648, 1598071746, 1925389590, 203809468, 2336832552, 1100287487, 1895934009, 3736275976, 2632234200, 2428589668, 1636092795, 1890988757, 1952214088, 1113045200], t3));
      t2 = new A.CTRStreamCipher(t3);
      t2.SICStreamCipher$1(t3);
      t6 = new A.KeyParameter(key);
      t7 = type$.ParametersWithIV_nullable_CipherParameters;
      t7._as(new A.ParametersWithIV(iv, t6, t7));
      B.NativeUint8List_methods.setAll$2(A._lateReadCheck(t2.__SICStreamCipher__iv, "_iv"), 0, iv);
      B.NativeUint8List_methods.setAll$2(A._lateReadCheck(t2.__SICStreamCipher__counter, "_counter"), 0, A._lateReadCheck(t2.__SICStreamCipher__iv, "_iv"));
      B.NativeUint8List_methods.fillRange$3(A._lateReadCheck(t2.__SICStreamCipher__counterOut, _s11_), 0, A._lateReadCheck(t2.__SICStreamCipher__counterOut, _s11_).length, 0);
      t2.__SICStreamCipher__consumed = A._lateReadCheck(t2.__SICStreamCipher__counterOut, _s11_).length;
      t3._forEncryption = true;
      t3.set$_WorkingKey(t3.generateWorkingKey$2(true, t6));
      if (t3._forEncryption)
        t3.set$_s(A.List_List$from(t4, t1));
      else
        t3.set$_s(A.List_List$from(t5, t1));
      return t2;
    },
    _KeyDerivator: function _KeyDerivator() {
    },
    _ScryptKeyDerivator: function _ScryptKeyDerivator(t0, t1, t2, t3, t4) {
      var _ = this;
      _.dklen = t0;
      _.n = t1;
      _.r = t2;
      _.p = t3;
      _.salt = t4;
    },
    KeyStore: function KeyStore(t0, t1, t2, t3, t4) {
      var _ = this;
      _.privateKey = t0;
      _._derivator = t1;
      _._password = t2;
      _._iv = t3;
      _._id = t4;
    },
    HexCodec: function HexCodec() {
    },
    _decode(codeUnits, sourceStart, sourceEnd, destination, destinationStart) {
      var t1, t2, i, destinationIndex, firstDigit, secondDigit, destinationIndex0;
      for (t1 = sourceEnd - 1, t2 = destination.length, i = sourceStart, destinationIndex = destinationStart; i < t1; i += 2, destinationIndex = destinationIndex0) {
        firstDigit = A.digitForCodeUnit(codeUnits, i);
        secondDigit = A.digitForCodeUnit(codeUnits, i + 1);
        destinationIndex0 = destinationIndex + 1;
        if (!(destinationIndex < t2))
          return A.ioore(destination, destinationIndex);
        destination[destinationIndex] = 16 * firstDigit + secondDigit;
      }
      if ((sourceEnd - sourceStart & 1) === 0)
        return null;
      return 16 * A.digitForCodeUnit(codeUnits, t1);
    },
    HexDecoder: function HexDecoder() {
    },
    CipherParameters: function CipherParameters() {
    },
    KeyParameter: function KeyParameter(t0) {
      this.__KeyParameter_key = t0;
    },
    ParametersWithIV: function ParametersWithIV(t0, t1, t2) {
      this.iv = t0;
      this.parameters = t1;
      this.$ti = t2;
    },
    AESEngine: function AESEngine(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._ROUNDS = 0;
      _._WorkingKey = null;
      _._forEncryption = false;
      _._s = t0;
      _._S = t1;
      _._Si = t2;
      _._rcon = t3;
      _._T0 = t4;
      _._Tinv0 = t5;
    },
    Blake2bDigest: function Blake2bDigest(t0, t1, t2, t3, t4) {
      var _ = this;
      _._digestLength = 64;
      _._keyLength = 0;
      _._buffer = _._key = _._personalization = _._salt = null;
      _._bufferPos = 0;
      _._internalState = t0;
      _._chainValue = null;
      _._t0 = t1;
      _._t1 = t2;
      _._f0 = t3;
      _._m = t4;
    },
    SHA256Digest: function SHA256Digest(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._byteCount = t0;
      _._wordBuffer = t1;
      _.__MD4FamilyDigest__wordBufferOffset = $;
      _._endian = t2;
      _._packedStateSize = t3;
      _.state = t4;
      _.buffer = t5;
      _.__MD4FamilyDigest_bufferOffset = $;
    },
    Pbkdf2Parameters: function Pbkdf2Parameters(t0, t1, t2) {
      this.salt = t0;
      this.iterationCount = t1;
      this.desiredKeyLength = t2;
    },
    ScryptParameters: function ScryptParameters(t0, t1, t2, t3, t4) {
      var _ = this;
      _.N = t0;
      _.r = t1;
      _.p = t2;
      _.desiredKeyLength = t3;
      _.salt = t4;
    },
    PBKDF2KeyDerivator: function PBKDF2KeyDerivator(t0) {
      this.__PBKDF2KeyDerivator__params = $;
      this._mac = t0;
      this.__PBKDF2KeyDerivator__state = $;
    },
    Scrypt: function Scrypt(t0, t1) {
      this._params = null;
      this._b32 = t0;
      this._x = t1;
    },
    HMac: function HMac(t0, t1) {
      var _ = this;
      _._digest = t0;
      _.__HMac__digestSize = $;
      _.__HMac__blockLength = t1;
      _.__HMac__outputBuf = _.__HMac__inputPad = $;
    },
    BaseBlockCipher: function BaseBlockCipher() {
    },
    BaseDigest: function BaseDigest() {
    },
    BaseKeyDerivator: function BaseKeyDerivator() {
    },
    BaseMac: function BaseMac() {
    },
    BaseStreamCipher: function BaseStreamCipher() {
    },
    MD4FamilyDigest: function MD4FamilyDigest() {
    },
    NodeCrypto: function NodeCrypto() {
    },
    shiftl32(x, n) {
      n &= 31;
      return (x & $._MASK32_HI_BITS[n]) << n >>> 0;
    },
    rotr32(x, n) {
      n &= 31;
      return (B.JSInt_methods._shrOtherPositive$1(x, n) | A.shiftl32(x, 32 - n)) >>> 0;
    },
    pack32(x, out, offset, endian) {
      if (!type$.ByteData._is(out))
        out = A.NativeByteData_NativeByteData$view(out.buffer, out.byteOffset, J.get$length$asx(out));
      B.NativeByteData_methods._setUint32$3(out, offset, x, B.C_Endian === endian);
    },
    unpack32(inp, offset, endian) {
      inp = A.NativeByteData_NativeByteData$view(inp.buffer, inp.byteOffset, inp.length);
      return B.NativeByteData_methods._getUint32$2(inp, offset, B.C_Endian === endian);
    },
    Register64$(hiOrLo32OrY, lo32) {
      var t1 = new A.Register64();
      t1.$set$2(hiOrLo32OrY, lo32);
      return t1;
    },
    Register64List$from(values) {
      var i, t1, t2,
        _list = J.JSArray_JSArray$allocateGrowable(8, type$.Register64);
      for (i = 0; i < 8; ++i) {
        t1 = values[i];
        t2 = new A.Register64();
        t2.$set$2(t1[0], t1[1]);
        _list[i] = t2;
      }
      return new A.Register64List(_list);
    },
    Register64List$($length) {
      var _i, t1,
        _list = J.JSArray_JSArray$allocateGrowable($length, type$.Register64);
      for (_i = 0; _i < $length; ++_i) {
        t1 = new A.Register64();
        t1.$set$2(0, null);
        _list[_i] = t1;
      }
      return new A.Register64List(_list);
    },
    Register64: function Register64() {
      this.__Register64__lo32 = this.__Register64__hi32 = $;
    },
    Register64List: function Register64List(t0) {
      this._list = t0;
    },
    CTRStreamCipher: function CTRStreamCipher(t0) {
      var _ = this;
      _.underlyingCipher = t0;
      _.__SICStreamCipher__consumed = _.__SICStreamCipher__counterOut = _.__SICStreamCipher__counter = _.__SICStreamCipher__iv = $;
    },
    SICStreamCipher: function SICStreamCipher() {
    },
    main() {
      var t1 = type$.nullable_EventTarget._as(self.self),
        t2 = type$.nullable_void_Function_MessageEvent._as(new A.main_closure());
      type$.nullable_void_Function._as(null);
      A._EventStreamSubscription$(t1, "message", t2, false, type$.MessageEvent);
    },
    main_closure: function main_closure() {
    },
    throwLateFieldADI(fieldName) {
      return A.throwExpression(new A.LateError("Field '" + fieldName + "' has been assigned during initialization."));
    },
    _lateReadCheck(value, $name) {
      if (value === $)
        throw A.wrapException(new A.LateError("Field '" + $name + "' has not been initialized."));
      return value;
    },
    str2ByteArray(str, enc) {
      if (enc === "latin1")
        return B.C_Latin1Encoder.convert$1(str);
      else
        return new Uint8Array(A._ensureNativeList(new Uint8Array(A._ensureNativeList(A.Base58_decode(str)))));
    },
    Base58_encode(bytes) {
      var t1, leadingZeroes, startAt, output, mod, leadingZeroes0,
        _s58_ = string$._23456;
      if (bytes.length === 0)
        return "";
      bytes = new Uint8Array(A._ensureNativeList(bytes));
      t1 = bytes.length;
      leadingZeroes = 0;
      while (true) {
        if (!(leadingZeroes < t1 && bytes[leadingZeroes] === 0))
          break;
        ++leadingZeroes;
      }
      for (startAt = leadingZeroes, output = ""; startAt < t1;) {
        mod = A.Base58__divmod58(bytes, startAt);
        if (bytes[startAt] === 0)
          ++startAt;
        if (!(mod < 58))
          return A.ioore(_s58_, mod);
        output = _s58_[mod] + output;
      }
      if (output.length !== 0)
        while (true) {
          t1 = output.length;
          if (0 >= t1)
            return A.ioore(output, 0);
          if (!(output[0] === _s58_[0]))
            break;
          output = B.JSString_methods.substring$2(output, 1, t1);
        }
      for (; leadingZeroes0 = leadingZeroes - 1, leadingZeroes > 0; leadingZeroes = leadingZeroes0)
        output = _s58_[0] + output;
      return output;
    },
    Base58_decode(input) {
      var input58, index, i, charint, t1, leadingZeroes, output, startAt, j0, mod,
        j = input.length;
      if (j === 0)
        return new Uint8Array(0);
      input58 = J.JSArray_JSArray$allocateGrowable(j, type$.int);
      for (index = 0; index < j; ++index)
        input58[index] = 0;
      for (i = 0; i < j; ++i) {
        charint = B.JSString_methods.indexOf$1(string$._23456, input[i]);
        if (charint < 0)
          throw A.wrapException(A.FormatException$("Invalid input formatting for Base58 decoding.", null, null));
        B.JSArray_methods.$indexSet(input58, i, charint);
      }
      t1 = input58.length;
      leadingZeroes = 0;
      while (true) {
        if (!(leadingZeroes < t1 && input58[leadingZeroes] === 0))
          break;
        ++leadingZeroes;
      }
      output = new Uint8Array(j);
      for (startAt = leadingZeroes, j0 = j; startAt < input58.length;) {
        mod = A.Base58__divmod256(input58, startAt);
        if (!(startAt < input58.length))
          return A.ioore(input58, startAt);
        if (input58[startAt] === 0)
          ++startAt;
        --j0;
        if (!(j0 >= 0 && j0 < j))
          return A.ioore(output, j0);
        output[j0] = mod;
      }
      while (true) {
        if (j0 < j) {
          if (!(j0 >= 0))
            return A.ioore(output, j0);
          t1 = output[j0] === 0;
        } else
          t1 = false;
        if (!t1)
          break;
        ++j0;
      }
      return B.NativeUint8List_methods.sublist$1(output, j0 - leadingZeroes);
    },
    Base58__divmod58(number, startAt) {
      var t1, i, remaining, num;
      for (t1 = number.length, i = startAt, remaining = 0; i < t1; ++i) {
        num = (remaining & 255) * 256 + number[i];
        number[i] = B.JSInt_methods._tdivFast$1(num, 58);
        remaining = B.JSInt_methods.$mod(num, 58);
      }
      return remaining;
    },
    Base58__divmod256(number58, startAt) {
      var i, remaining, num;
      for (i = startAt, remaining = 0; i < number58.length; ++i) {
        num = 58 * remaining + (number58[i] & 255);
        B.JSArray_methods.$indexSet(number58, i, B.JSInt_methods._tdivFast$1(num, 256));
        remaining = B.JSInt_methods.$mod(num, 256);
      }
      return remaining;
    },
    digitForCodeUnit(codeUnits, index) {
      var letter,
        codeUnit = B.JSString_methods.codeUnitAt$1(codeUnits._string, index),
        digit = 48 ^ codeUnit;
      if (digit <= 9)
        return digit;
      else {
        letter = codeUnit | 32;
        if (97 <= letter && letter <= 102)
          return letter - 97 + 10;
      }
      throw A.wrapException(A.FormatException$("Invalid hexadecimal code unit U+" + B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(codeUnit, 16), 4, "0") + ".", codeUnits, index));
    }
  },
  J = {
    makeDispatchRecord(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          A.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = A.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return B.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return B.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return B.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return B.UnknownJavaScriptObject_methods;
      }
      return B.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$allocateGrowable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed(allocation, $E) {
      return J.JSArray_markFixedList(A._setArrayType(allocation, $E._eval$1("JSArray<0>")), $E);
    },
    JSArray_markFixedList(list, $T) {
      list.fixed$length = Array;
      return list;
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$x(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx(receiver, a0) {
      if (typeof a0 === "number")
        if (receiver.constructor == Array || typeof receiver == "string" || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    postMessage$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).postMessage$2(receiver, a0, a1);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    LegacyJavaScriptObject: function LegacyJavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _._length = t1;
      _._index = 0;
      _._current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  B = {};
  var holders = [A, J, B];
  var $ = {};
  A.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq(receiver, other) {
      return receiver === other;
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    toString$0(receiver) {
      return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
    }
  };
  J.JSBool.prototype = {
    toString$0(receiver) {
      return String(receiver);
    },
    get$hashCode(receiver) {
      return receiver ? 519018 : 218159;
    },
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq(receiver, other) {
      return null == other;
    },
    toString$0(receiver) {
      return "null";
    },
    get$hashCode(receiver) {
      return 0;
    },
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {};
  J.LegacyJavaScriptObject.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    },
    $isJSObject: 1
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$LegacyJavaScriptObject$toString(receiver);
      return "JavaScript function for " + J.toString$0$(dartClosure);
    },
    $isFunction: 1
  };
  J.JSArray.prototype = {
    add$1(receiver, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("add"));
      receiver.push(value);
    },
    addAll$1(receiver, collection) {
      var t1, _i;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(collection);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("addAll"));
      for (t1 = collection.length, _i = 0; _i < t1; ++_i)
        receiver.push(collection[_i]);
    },
    elementAt$1(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    fillRange$3(receiver, start, end, fillValue) {
      var i;
      A._arrayInstanceType(receiver)._eval$1("1?")._as(fillValue);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("fill range"));
      A.RangeError_checkValidRange(start, end, receiver.length);
      for (i = start; i < end; ++i)
        receiver[i] = fillValue;
    },
    get$isNotEmpty(receiver) {
      return receiver.length !== 0;
    },
    toString$0(receiver) {
      return A.IterableBase_iterableToFullString(receiver, "[", "]");
    },
    get$iterator(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, A._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._asInt(index);
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._asInt(index);
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("indexed set"));
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    $isJSIndexable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this._length !== $length)
        throw A.wrapException(A.throwConcurrentModificationError(t1));
      t2 = _this._index;
      if (t2 >= $length) {
        _this.set$_current(null);
        return false;
      }
      _this.set$_current(t1[t2]);
      ++_this._index;
      return true;
    },
    set$_current(_current) {
      this._current = this.$ti._eval$1("1?")._as(_current);
    }
  };
  J.JSNumber.prototype = {
    toRadixString$1(receiver, radix) {
      var result, match, t1, exponent;
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      if (B.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        A.throwExpression(A.UnsupportedError$("Unexpected toString result: " + result));
      t1 = match.length;
      if (1 >= t1)
        return A.ioore(match, 1);
      result = match[1];
      if (3 >= t1)
        return A.ioore(match, 3);
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + B.JSString_methods.$mul("0", exponent);
    },
    toString$0(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    $mod(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      return result + other;
    },
    $tdiv(receiver, other) {
      if ((receiver | 0) === receiver)
        if (other >= 1 || other < -1)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivFast$1(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw A.wrapException(A.UnsupportedError$("Result of truncating division is " + A.S(quotient) + ": " + A.S(receiver) + " ~/ " + other));
    },
    _shrOtherPositive$1(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrReceiverPositive$1(receiver, other) {
      if (0 > other)
        throw A.wrapException(A.argumentErrorValue(other));
      return this._shrBothPositive$1(receiver, other);
    },
    _shrBothPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {$isint: 1};
  J.JSNumNotInt.prototype = {};
  J.JSString.prototype = {
    codeUnitAt$1(receiver, index) {
      if (index < 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        A.throwExpression(A.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    _codeUnitAt$1(receiver, index) {
      if (index >= receiver.length)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    $add(receiver, other) {
      return receiver + other;
    },
    substring$2(receiver, start, end) {
      return receiver.substring(start, A.RangeError_checkValidRange(start, end, receiver.length));
    },
    $mul(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw A.wrapException(B.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    indexOf$1(receiver, pattern) {
      var t1 = receiver.indexOf(pattern, 0);
      return t1;
    },
    toString$0(receiver) {
      return receiver;
    },
    get$hashCode(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._asInt(index);
      if (index >= receiver.length)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isPattern: 1,
    $isString: 1
  };
  A.LateError.prototype = {
    toString$0(_) {
      return "LateInitializationError: " + this._message;
    }
  };
  A.CodeUnits.prototype = {
    get$length(_) {
      return this._string.length;
    },
    $index(_, i) {
      return B.JSString_methods.codeUnitAt$1(this._string, A._asInt(i));
    }
  };
  A.EfficientLengthIterable.prototype = {};
  A.ListIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A.ListIterator(_this, _this.get$length(_this), A._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    }
  };
  A.SubListIterable.prototype = {
    get$_endIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length(_) {
      var endOrLength,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength >= $length)
        return $length - t1;
      if (typeof endOrLength !== "number")
        return endOrLength.$sub();
      return endOrLength - t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw A.wrapException(A.IndexError$(index, _this, "index", null, null));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    },
    toList$1$growable(_, growable) {
      var $length, result, i, _this = this,
        start = _this._start,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        endOrLength = _this._endOrLength;
      if (endOrLength != null && endOrLength < end)
        end = endOrLength;
      $length = end - start;
      if ($length <= 0) {
        t1 = J.JSArray_JSArray$fixed(0, _this.$ti._precomputed1);
        return t1;
      }
      result = A.List_List$filled($length, t2.elementAt$1(t1, start), false, _this.$ti._precomputed1);
      for (i = 1; i < $length; ++i) {
        B.JSArray_methods.$indexSet(result, i, t2.elementAt$1(t1, start + i));
        if (t2.get$length(t1) < end)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return result;
    }
  };
  A.ListIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.set$__internal$_current(null);
        return false;
      }
      _this.set$__internal$_current(t2.elementAt$1(t1, t3));
      ++_this.__internal$_index;
      return true;
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("1?")._as(_current);
    }
  };
  A.FixedLengthListMixin.prototype = {};
  A.UnmodifiableListMixin.prototype = {
    $indexSet(_, index, value) {
      A._asInt(index);
      A._instanceType(this)._eval$1("UnmodifiableListMixin.E")._as(value);
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    setRange$4(_, start, end, iterable, skipCount) {
      A._instanceType(this)._eval$1("Iterable<UnmodifiableListMixin.E>")._as(iterable);
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    setRange$3($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    }
  };
  A.UnmodifiableListBase.prototype = {};
  A.TypeErrorDecoder.prototype = {
    matchTypeError$1(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  A.NullError.prototype = {
    toString$0(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + this.__js_helper$_message;
      return "NoSuchMethodError: method not found: '" + t1 + "' on null";
    }
  };
  A.JsNoSuchMethodError.prototype = {
    toString$0(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  A.UnknownJsTypeError.prototype = {
    toString$0(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  A.NullThrownFromJavaScriptException.prototype = {
    toString$0(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    }
  };
  A._StackTrace.prototype = {
    toString$0(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  A.Closure.prototype = {
    toString$0(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    $isFunction: 1,
    get$$call() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
  A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
  A.TearOffClosure.prototype = {};
  A.StaticClosure.prototype = {
    toString$0(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + A.unminifyOrTag($name) + "'";
    }
  };
  A.BoundClosure.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.BoundClosure))
        return false;
      return this.$_target === other.$_target && this._receiver === other._receiver;
    },
    get$hashCode(_) {
      return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
    },
    toString$0(_) {
      return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
    }
  };
  A.RuntimeError.prototype = {
    toString$0(_) {
      return "RuntimeError: " + this.message;
    }
  };
  A.JsLinkedHashMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_length === 0;
    },
    get$keys() {
      return new A.LinkedHashMapKeyIterable(this, this.$ti._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    $index(_, key) {
      var strings, cell, t1, nums, _null = null;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return _null;
        cell = strings[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return _null;
        cell = nums[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return this.internalGet$1(key);
    },
    internalGet$1(key) {
      var bucket, index,
        rest = this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = rest[J.get$hashCode$(key) & 0x3fffffff];
      index = this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet(_, key, value) {
      var strings, nums, rest, hash, bucket, index, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else {
        rest = _this.__js_helper$_rest;
        if (rest == null)
          rest = _this.__js_helper$_rest = _this._newHashTable$0();
        hash = J.get$hashCode$(key) & 0x3fffffff;
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [_this._newLinkedCell$2(key, value)];
        else {
          index = _this.internalFindBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index].hashMapCellValue = value;
          else
            bucket.push(_this._newLinkedCell$2(key, value));
        }
      }
    },
    forEach$1(_, action) {
      var cell, modifications, _this = this;
      _this.$ti._eval$1("~(1,2)")._as(action);
      cell = _this._first;
      modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3(table, key, value) {
      var cell,
        t1 = this.$ti;
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.hashMapCellValue = value;
    },
    _newLinkedCell$2(key, value) {
      var _this = this,
        t1 = _this.$ti,
        cell = new A.LinkedHashMapCell(t1._precomputed1._as(key), t1._rest[1]._as(value));
      if (_this._first == null)
        _this._first = _this._last = cell;
      else
        _this._last = _this._last._next = cell;
      ++_this.__js_helper$_length;
      _this._modifications = _this._modifications + 1 & 1073741823;
      return cell;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _newHashTable$0() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    $isLinkedHashMap: 1
  };
  A.LinkedHashMapCell.prototype = {};
  A.LinkedHashMapKeyIterable.prototype = {
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this._map,
        t2 = new A.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti._eval$1("LinkedHashMapKeyIterator<1>"));
      t2._cell = t1._first;
      return t2;
    }
  };
  A.LinkedHashMapKeyIterator.prototype = {
    get$current() {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.set$__js_helper$_current(null);
        return false;
      } else {
        _this.set$__js_helper$_current(cell.hashMapCellKey);
        _this._cell = cell._next;
        return true;
      }
    },
    set$__js_helper$_current(_current) {
      this.__js_helper$_current = this.$ti._eval$1("1?")._as(_current);
    }
  };
  A.initHooks_closure.prototype = {
    call$1(o) {
      return this.getTag(o);
    },
    $signature: 2
  };
  A.initHooks_closure0.prototype = {
    call$2(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 7
  };
  A.initHooks_closure1.prototype = {
    call$1(tag) {
      return this.prototypeForTag(A._asString(tag));
    },
    $signature: 8
  };
  A.NativeByteBuffer.prototype = {$isNativeByteBuffer: 1};
  A.NativeTypedData.prototype = {
    _invalidPosition$3(receiver, position, $length, $name) {
      var t1 = A.RangeError$range(position, 0, $length, $name, null);
      throw A.wrapException(t1);
    },
    _checkPosition$3(receiver, position, $length, $name) {
      if (position >>> 0 !== position || position > $length)
        this._invalidPosition$3(receiver, position, $length, $name);
    },
    $isNativeTypedData: 1
  };
  A.NativeByteData.prototype = {
    _getUint32$2(receiver, byteOffset, littleEndian) {
      return receiver.getUint32(byteOffset, littleEndian);
    },
    _setUint32$3(receiver, byteOffset, value, littleEndian) {
      return receiver.setUint32(byteOffset, value, littleEndian);
    },
    $isByteData: 1
  };
  A.NativeTypedArray.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    _setRangeFast$4(receiver, start, end, source, skipCount) {
      var count, sourceLength,
        targetLength = receiver.length;
      this._checkPosition$3(receiver, start, targetLength, "start");
      this._checkPosition$3(receiver, end, targetLength, "end");
      if (start > end)
        throw A.wrapException(A.RangeError$range(start, 0, end, null, null));
      count = end - start;
      if (skipCount < 0)
        throw A.wrapException(A.ArgumentError$(skipCount, null));
      sourceLength = source.length;
      if (sourceLength - skipCount < count)
        throw A.wrapException(A.StateError$("Not enough elements"));
      if (skipCount !== 0 || sourceLength !== count)
        source = source.subarray(skipCount, skipCount + count);
      receiver.set(source, start);
    },
    $isJSIndexable: 1,
    $isJavaScriptIndexingBehavior: 1
  };
  A.NativeTypedArrayOfDouble.prototype = {
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._asInt(index);
      A._asDouble(value);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      type$.Iterable_double._as(iterable);
      this.super$ListMixin$setRange(receiver, start, end, iterable, skipCount);
    },
    setRange$3($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    $isIterable: 1,
    $isList: 1
  };
  A.NativeTypedArrayOfInt.prototype = {
    $indexSet(receiver, index, value) {
      A._asInt(index);
      A._asInt(value);
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      this._setRangeFast$4(receiver, start, end, type$.Iterable_int._as(iterable), skipCount);
      return;
    },
    setRange$3($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    $isIterable: 1,
    $isList: 1
  };
  A.NativeInt16List.prototype = {
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeInt32List.prototype = {
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeInt8List.prototype = {
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint16List.prototype = {
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint32List.prototype = {
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint8ClampedList.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint8List.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._asInt(index);
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint8Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    sublist$1($receiver, start) {
      return this.sublist$2($receiver, start, null);
    },
    $isUint8List: 1
  };
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A.Rti.prototype = {
    _eval$1(recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1(typeOrTuple) {
      return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  A._FunctionParameters.prototype = {};
  A._Error.prototype = {
    toString$0(_) {
      return this.__rti$_message;
    }
  };
  A._TypeError.prototype = {$isTypeError: 1};
  A._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 3
  };
  A._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1(callback) {
      var t1, t2;
      this._box_0.storedCallback = type$.void_Function._as(callback);
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 9
  };
  A._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 4
  };
  A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 4
  };
  A._TimerImpl.prototype = {
    _TimerImpl$2(milliseconds, callback) {
      if (self.setTimeout != null)
        self.setTimeout(A.convertDartClosureToJS(new A._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("`setTimeout()` not found."));
    }
  };
  A._TimerImpl_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 0
  };
  A.AsyncError.prototype = {
    toString$0(_) {
      return A.S(this.error);
    },
    $isError: 1,
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A._Completer.prototype = {
    completeError$1(error) {
      var t1, stackTrace;
      A.checkNotNullable(error, "error", type$.Object);
      t1 = this.future;
      if ((t1._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      stackTrace = A.AsyncError_defaultStackTrace(error);
      t1._asyncCompleteError$2(error, stackTrace);
    }
  };
  A._AsyncCompleter.prototype = {};
  A._FutureListener.prototype = {
    matchesErrorTest$1(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2$2(type$.bool_Function_Object._as(this.callback), asyncError.error, type$.bool, type$.Object);
    },
    handleError$1(asyncError) {
      var exception, _this = this,
        errorCallback = _this.errorCallback,
        result = null,
        t1 = type$.dynamic,
        t2 = type$.Object,
        t3 = asyncError.error,
        t4 = _this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        result = t4.runBinary$3$3(errorCallback, t3, asyncError.stackTrace, t1, t2, type$.StackTrace);
      else
        result = t4.runUnary$2$2(type$.dynamic_Function_Object._as(errorCallback), t3, t1, t2);
      try {
        t1 = _this.$ti._eval$1("2/")._as(result);
        return t1;
      } catch (exception) {
        if (type$.TypeError._is(A.unwrapException(exception))) {
          if ((_this.state & 1) !== 0)
            throw A.wrapException(A.ArgumentError$("The error handler of Future.then must return a value of the returned future's type", "onError"));
          throw A.wrapException(A.ArgumentError$("The error handler of Future.catchError must return a value of the future's type", "onError"));
        } else
          throw exception;
      }
    }
  };
  A._Future.prototype = {
    then$1$2$onError(f, onError, $R) {
      var currentZone, result, t2,
        t1 = this.$ti;
      t1._bind$1($R)._eval$1("1/(2)")._as(f);
      currentZone = $.Zone__current;
      if (currentZone === B.C__RootZone) {
        if (onError != null && !type$.dynamic_Function_Object_StackTrace._is(onError) && !type$.dynamic_Function_Object._is(onError))
          throw A.wrapException(A.ArgumentError$value(onError, "onError", string$.Error_));
      } else {
        $R._eval$1("@<0/>")._bind$1(t1._precomputed1)._eval$1("1(2)")._as(f);
        if (onError != null)
          onError = A._registerErrorHandler(onError, currentZone);
      }
      result = new A._Future(currentZone, $R._eval$1("_Future<0>"));
      t2 = onError == null ? 1 : 3;
      this._addListener$1(new A._FutureListener(result, t2, f, onError, t1._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _setErrorObject$1(error) {
      this._state = this._state & 1 | 16;
      this._resultOrListeners = error;
    },
    _cloneResult$1(source) {
      this._state = source._state & 30 | this._state & 1;
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1(listener) {
      var source, _this = this,
        t1 = _this._state;
      if (t1 <= 3) {
        listener._nextListener = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listener;
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(source);
        }
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__addListener_closure(_this, listener)));
      }
    },
    _prependListeners$1(listeners) {
      var t1, existingListeners, next, cursor, next0, source, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 3) {
        existingListeners = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(source);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__prependListeners_closure(_box_0, _this)));
      }
    },
    _removeListeners$0() {
      var current = type$.nullable__FutureListener_dynamic_dynamic._as(this._resultOrListeners);
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _chainForeignFuture$1(source) {
      var e, s, exception, _this = this;
      _this._state ^= 2;
      try {
        source.then$1$2$onError(new A._Future__chainForeignFuture_closure(_this), new A._Future__chainForeignFuture_closure0(_this), type$.Null);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A.scheduleMicrotask(new A._Future__chainForeignFuture_closure1(_this, e, s));
      }
    },
    _completeWithValue$1(value) {
      var listeners, _this = this;
      _this.$ti._precomputed1._as(value);
      listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2(error, stackTrace) {
      var listeners;
      type$.StackTrace._as(stackTrace);
      listeners = this._removeListeners$0();
      this._setErrorObject$1(A.AsyncError$(error, stackTrace));
      A._Future__propagateToListeners(this, listeners);
    },
    _asyncComplete$1(value) {
      var t1 = this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(t1._precomputed1._as(value));
    },
    _asyncCompleteWithValue$1(value) {
      var _this = this;
      _this.$ti._precomputed1._as(value);
      _this._state ^= 2;
      A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__asyncCompleteWithValue_closure(_this, value)));
    },
    _chainFuture$1(value) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("Future<1>")._as(value);
      if (t1._is(value)) {
        if ((value._state & 16) !== 0) {
          _this._state ^= 2;
          A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__chainFuture_closure(_this, value)));
        } else
          A._Future__chainCoreFuture(value, _this);
        return;
      }
      _this._chainForeignFuture$1(value);
    },
    _asyncCompleteError$2(error, stackTrace) {
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, type$.void_Function._as(new A._Future__asyncCompleteError_closure(this, error, stackTrace)));
    },
    $isFuture: 1
  };
  A._Future__addListener_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  A._Future__prependListeners_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  A._Future__chainForeignFuture_closure.prototype = {
    call$1(value) {
      var error, stackTrace, exception,
        t1 = this.$this;
      t1._state ^= 2;
      try {
        t1._completeWithValue$1(t1.$ti._precomputed1._as(value));
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        t1._completeError$2(error, stackTrace);
      }
    },
    $signature: 3
  };
  A._Future__chainForeignFuture_closure0.prototype = {
    call$2(error, stackTrace) {
      this.$this._completeError$2(type$.Object._as(error), type$.StackTrace._as(stackTrace));
    },
    $signature: 10
  };
  A._Future__chainForeignFuture_closure1.prototype = {
    call$0() {
      this.$this._completeError$2(this.e, this.s);
    },
    $signature: 0
  };
  A._Future__asyncCompleteWithValue_closure.prototype = {
    call$0() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  A._Future__chainFuture_closure.prototype = {
    call$0() {
      A._Future__chainCoreFuture(this.value, this.$this);
    },
    $signature: 0
  };
  A._Future__asyncCompleteError_closure.prototype = {
    call$0() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1$1(type$.dynamic_Function._as(t1.callback), type$.dynamic);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this.hasError && type$.AsyncError._as(_this._box_1.source._resultOrListeners).error === e;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (completeResult instanceof A._Future && (completeResult._state & 24) !== 0) {
        if ((completeResult._state & 16) !== 0) {
          t1 = _this._box_0;
          t1.listenerValueOrError = type$.AsyncError._as(completeResult._resultOrListeners);
          t1.listenerHasError = true;
        }
        return;
      }
      if (type$.Future_dynamic._is(completeResult)) {
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new A._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1(_) {
      return this.originalSource;
    },
    $signature: 11
  };
  A._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0() {
      var e, s, t1, t2, t3, t4, t5, exception;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t3 = t2.$ti;
        t4 = t3._precomputed1;
        t5 = t4._as(this.sourceResult);
        t1.listenerValueOrError = t2.result._zone.runUnary$2$2(t3._eval$1("2/(1)")._as(t2.callback), t5, t3._eval$1("2/"), t4);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = this._box_0;
        t1.listenerValueOrError = A.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleError.prototype = {
    call$0() {
      var asyncError, e, s, t1, exception, t2, _this = this;
      try {
        asyncError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t2 = _this._box_0;
        if (t1.error === e)
          t2.listenerValueOrError = t1;
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._AsyncCallbackEntry.prototype = {};
  A.Stream.prototype = {
    get$length(_) {
      var t2, t3, _this = this, t1 = {},
        future = new A._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      t2 = _this.$ti;
      t3 = t2._eval$1("~(1)?")._as(new A.Stream_length_closure(t1, _this));
      type$.nullable_void_Function._as(new A.Stream_length_closure0(t1, future));
      A._EventStreamSubscription$(_this._target, _this._eventType, t3, false, t2._precomputed1);
      return future;
    }
  };
  A.Stream_length_closure.prototype = {
    call$1(_) {
      this.$this.$ti._precomputed1._as(_);
      ++this._box_0.count;
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1)");
    }
  };
  A.Stream_length_closure0.prototype = {
    call$0() {
      var t1 = this.future,
        t2 = t1.$ti,
        t3 = t2._eval$1("1/")._as(this._box_0.count),
        listeners = t1._removeListeners$0();
      t2._precomputed1._as(t3);
      t1._state = 8;
      t1._resultOrListeners = t3;
      A._Future__propagateToListeners(t1, listeners);
    },
    $signature: 0
  };
  A.StreamSubscription.prototype = {};
  A.StreamTransformerBase.prototype = {};
  A._Zone.prototype = {$isZone: 1};
  A._rootHandleError_closure.prototype = {
    call$0() {
      var t1 = this.error,
        t2 = this.stackTrace;
      A.checkNotNullable(t1, "error", type$.Object);
      A.checkNotNullable(t2, "stackTrace", type$.StackTrace);
      A.Error__throw(t1, t2);
    },
    $signature: 0
  };
  A._RootZone.prototype = {
    runGuarded$1(f) {
      var e, s, exception;
      type$.void_Function._as(f);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        A._rootRun(null, null, this, f, type$.void);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    runUnaryGuarded$1$2(f, arg, $T) {
      var e, s, exception;
      $T._eval$1("~(0)")._as(f);
      $T._as(arg);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        A._rootRunUnary(null, null, this, f, arg, type$.void, $T);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    bindCallbackGuarded$1(f) {
      return new A._RootZone_bindCallbackGuarded_closure(this, type$.void_Function._as(f));
    },
    bindUnaryCallbackGuarded$1$1(f, $T) {
      return new A._RootZone_bindUnaryCallbackGuarded_closure(this, $T._eval$1("~(0)")._as(f), $T);
    },
    $index(_, key) {
      return null;
    },
    run$1$1(f, $R) {
      $R._eval$1("0()")._as(f);
      if ($.Zone__current === B.C__RootZone)
        return f.call$0();
      return A._rootRun(null, null, this, f, $R);
    },
    runUnary$2$2(f, arg, $R, $T) {
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      if ($.Zone__current === B.C__RootZone)
        return f.call$1(arg);
      return A._rootRunUnary(null, null, this, f, arg, $R, $T);
    },
    runBinary$3$3(f, arg1, arg2, $R, T1, T2) {
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      if ($.Zone__current === B.C__RootZone)
        return f.call$2(arg1, arg2);
      return A._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
    }
  };
  A._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 0
  };
  A._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1(arg) {
      var t1 = this.T;
      return this.$this.runUnaryGuarded$1$2(this.f, t1._as(arg), t1);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A.ListBase.prototype = {$isIterable: 1, $isList: 1};
  A.ListMixin.prototype = {
    get$iterator(receiver) {
      return new A.ListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("ListIterator<ListMixin.E>"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    get$isNotEmpty(receiver) {
      return this.get$length(receiver) !== 0;
    },
    fillRange$3(receiver, start, end, fill) {
      var i;
      A.instanceType(receiver)._eval$1("ListMixin.E?")._as(fill);
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      for (i = start; i < end; ++i)
        this.$indexSet(receiver, i, fill);
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherStart, otherList, i,
        t1 = A.instanceType(receiver);
      t1._eval$1("Iterable<ListMixin.E>")._as(iterable);
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (t1._eval$1("List<ListMixin.E>")._is(iterable)) {
        otherStart = skipCount;
        otherList = iterable;
      } else {
        otherList = A.SubListIterable$(iterable, skipCount, null, A.instanceType(iterable)._eval$1("ListMixin.E")).toList$1$growable(0, false);
        otherStart = 0;
      }
      if (otherStart + $length > otherList.length)
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i) {
          t1 = otherStart + i;
          if (!(t1 >= 0 && t1 < otherList.length))
            return A.ioore(otherList, t1);
          this.$indexSet(receiver, start + i, otherList[t1]);
        }
      else
        for (i = 0; i < $length; ++i) {
          t1 = otherStart + i;
          if (!(t1 >= 0 && t1 < otherList.length))
            return A.ioore(otherList, t1);
          this.$indexSet(receiver, start + i, otherList[t1]);
        }
    },
    setRange$3($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    setAll$2(receiver, index, iterable) {
      A.instanceType(receiver)._eval$1("Iterable<ListMixin.E>")._as(iterable);
      this.setRange$3(receiver, index, index + iterable.length, iterable);
    },
    toString$0(receiver) {
      return A.IterableBase_iterableToFullString(receiver, "[", "]");
    }
  };
  A.MapBase.prototype = {};
  A.MapBase_mapToString_closure.prototype = {
    call$2(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += A.S(k);
      t1._contents = t2 + ": ";
      t1._contents += A.S(v);
    },
    $signature: 5
  };
  A.MapMixin.prototype = {
    forEach$1(_, action) {
      var t2, key, t3,
        t1 = A._instanceType(this);
      t1._eval$1("~(MapMixin.K,MapMixin.V)")._as(action);
      for (t2 = this.get$keys(), t2 = t2.get$iterator(t2), t1 = t1._eval$1("MapMixin.V"); t2.moveNext$0();) {
        key = t2.get$current();
        t3 = this.$index(0, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
      }
    },
    get$length(_) {
      var t1 = this.get$keys();
      return t1.get$length(t1);
    },
    get$isEmpty(_) {
      var t1 = this.get$keys();
      return t1.get$isEmpty(t1);
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $isMap: 1
  };
  A._ListBase_Object_ListMixin.prototype = {};
  A._JsonMap.prototype = {
    $index(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length(_) {
      return this._processed == null ? this._data.__js_helper$_length : this._computeKeys$0().length;
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$keys() {
      if (this._processed == null) {
        var t1 = this._data;
        return new A.LinkedHashMapKeyIterable(t1, t1.$ti._eval$1("LinkedHashMapKeyIterable<1>"));
      }
      return new A._JsonMapKeyIterable(this);
    },
    forEach$1(_, f) {
      var keys, i, key, value, _this = this;
      type$.void_Function_String_dynamic._as(f);
      if (_this._processed == null)
        return _this._data.forEach$1(0, f);
      keys = _this._computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = A._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._data)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0() {
      var keys = type$.nullable_List_dynamic._as(this._data);
      if (keys == null)
        keys = this._data = A._setArrayType(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _process$1(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = A._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  A._JsonMapKeyIterable.prototype = {
    get$length(_) {
      var t1 = this._parent;
      return t1.get$length(t1);
    },
    elementAt$1(_, index) {
      var t1 = this._parent;
      if (t1._processed == null)
        t1 = t1.get$keys().elementAt$1(0, index);
      else {
        t1 = t1._computeKeys$0();
        if (!(index >= 0 && index < t1.length))
          return A.ioore(t1, index);
        t1 = t1[index];
      }
      return t1;
    },
    get$iterator(_) {
      var t1 = this._parent;
      if (t1._processed == null) {
        t1 = t1.get$keys();
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
      }
      return t1;
    }
  };
  A._UnicodeSubsetEncoder.prototype = {
    convert$1(string) {
      var i, codeUnit,
        $length = A.RangeError_checkValidRange(0, null, string.length) - 0,
        result = new Uint8Array($length);
      for (i = 0; i < $length; ++i) {
        codeUnit = B.JSString_methods._codeUnitAt$1(string, i);
        if ((codeUnit & 4294967040) !== 0)
          throw A.wrapException(A.ArgumentError$value(string, "string", "Contains invalid characters."));
        if (!(i < $length))
          return A.ioore(result, i);
        result[i] = codeUnit;
      }
      return result;
    }
  };
  A.Codec.prototype = {};
  A.Converter.prototype = {};
  A.JsonUnsupportedObjectError.prototype = {
    toString$0(_) {
      var safeString = A.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  A.JsonCyclicError.prototype = {
    toString$0(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  A.JsonCodec.prototype = {
    decode$2$reviver(source, reviver) {
      var t1;
      type$.nullable_nullable_Object_Function_2_nullable_Object_and_nullable_Object._as(reviver);
      t1 = A._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    decode$1(source) {
      return this.decode$2$reviver(source, null);
    },
    encode$2$toEncodable(value, toEncodable) {
      var t1;
      type$.nullable_nullable_Object_Function_dynamic._as(toEncodable);
      t1 = A._JsonStringStringifier_stringify(value, this.get$encoder()._toEncodable, null);
      return t1;
    },
    encode$1(value) {
      return this.encode$2$toEncodable(value, null);
    },
    get$encoder() {
      return B.JsonEncoder_null;
    },
    get$decoder() {
      return B.JsonDecoder_null;
    }
  };
  A.JsonEncoder.prototype = {};
  A.JsonDecoder.prototype = {};
  A._JsonStringifier.prototype = {
    writeStringContent$1(s) {
      var t1, offset, i, charCode, t2, t3,
        $length = s.length;
      for (t1 = this._sink, offset = 0, i = 0; i < $length; ++i) {
        charCode = B.JSString_methods._codeUnitAt$1(s, i);
        if (charCode > 92) {
          if (charCode >= 55296) {
            t2 = charCode & 64512;
            if (t2 === 55296) {
              t3 = i + 1;
              t3 = !(t3 < $length && (B.JSString_methods._codeUnitAt$1(s, t3) & 64512) === 56320);
            } else
              t3 = false;
            if (!t3)
              if (t2 === 56320) {
                t2 = i - 1;
                t2 = !(t2 >= 0 && (B.JSString_methods.codeUnitAt$1(s, t2) & 64512) === 55296);
              } else
                t2 = false;
            else
              t2 = true;
            if (t2) {
              if (i > offset)
                t1._contents += B.JSString_methods.substring$2(s, offset, i);
              offset = i + 1;
              t2 = t1._contents += A.Primitives_stringFromCharCode(92);
              t2 += A.Primitives_stringFromCharCode(117);
              t1._contents = t2;
              t2 += A.Primitives_stringFromCharCode(100);
              t1._contents = t2;
              t3 = charCode >>> 8 & 15;
              t2 += A.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
              t1._contents = t2;
              t3 = charCode >>> 4 & 15;
              t2 += A.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
              t1._contents = t2;
              t3 = charCode & 15;
              t1._contents = t2 + A.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
            }
          }
          continue;
        }
        if (charCode < 32) {
          if (i > offset)
            t1._contents += B.JSString_methods.substring$2(s, offset, i);
          offset = i + 1;
          t2 = t1._contents += A.Primitives_stringFromCharCode(92);
          switch (charCode) {
            case 8:
              t1._contents = t2 + A.Primitives_stringFromCharCode(98);
              break;
            case 9:
              t1._contents = t2 + A.Primitives_stringFromCharCode(116);
              break;
            case 10:
              t1._contents = t2 + A.Primitives_stringFromCharCode(110);
              break;
            case 12:
              t1._contents = t2 + A.Primitives_stringFromCharCode(102);
              break;
            case 13:
              t1._contents = t2 + A.Primitives_stringFromCharCode(114);
              break;
            default:
              t2 += A.Primitives_stringFromCharCode(117);
              t1._contents = t2;
              t2 += A.Primitives_stringFromCharCode(48);
              t1._contents = t2;
              t2 += A.Primitives_stringFromCharCode(48);
              t1._contents = t2;
              t3 = charCode >>> 4 & 15;
              t2 += A.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
              t1._contents = t2;
              t3 = charCode & 15;
              t1._contents = t2 + A.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            t1._contents += B.JSString_methods.substring$2(s, offset, i);
          offset = i + 1;
          t2 = t1._contents += A.Primitives_stringFromCharCode(92);
          t1._contents = t2 + A.Primitives_stringFromCharCode(charCode);
        }
      }
      if (offset === 0)
        t1._contents += s;
      else if (offset < $length)
        t1._contents += B.JSString_methods.substring$2(s, offset, $length);
    },
    _checkCycle$1(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw A.wrapException(new A.JsonCyclicError(object, null));
      }
      B.JSArray_methods.add$1(t1, object);
    },
    writeObject$1(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = A.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw A.wrapException(t1);
        }
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw A.wrapException(t1);
      }
    },
    writeJsonValue$1(object) {
      var t1, success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this._sink._contents += B.JSNumber_methods.toString$0(object);
        return true;
      } else if (object === true) {
        _this._sink._contents += "true";
        return true;
      } else if (object === false) {
        _this._sink._contents += "false";
        return true;
      } else if (object == null) {
        _this._sink._contents += "null";
        return true;
      } else if (typeof object == "string") {
        t1 = _this._sink;
        t1._contents += '"';
        _this.writeStringContent$1(object);
        t1._contents += '"';
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        t1 = _this._seen;
        if (0 >= t1.length)
          return A.ioore(t1, -1);
        t1.pop();
        return success;
      } else
        return false;
    },
    writeList$1(list) {
      var t2, i,
        t1 = this._sink;
      t1._contents += "[";
      t2 = J.getInterceptor$asx(list);
      if (t2.get$isNotEmpty(list)) {
        this.writeObject$1(t2.$index(list, 0));
        for (i = 1; i < t2.get$length(list); ++i) {
          t1._contents += ",";
          this.writeObject$1(t2.$index(list, i));
        }
      }
      t1._contents += "]";
    },
    writeMap$1(map) {
      var t1, keyValueList, i, t2, separator, t3, _this = this, _box_0 = {};
      if (map.get$isEmpty(map)) {
        _this._sink._contents += "{}";
        return true;
      }
      t1 = map.get$length(map) * 2;
      keyValueList = A.List_List$filled(t1, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      map.forEach$1(0, new A._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      t2 = _this._sink;
      t2._contents += "{";
      for (separator = '"'; i < t1; i += 2, separator = ',"') {
        t2._contents += separator;
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        t2._contents += '":';
        t3 = i + 1;
        if (!(t3 < t1))
          return A.ioore(keyValueList, t3);
        _this.writeObject$1(keyValueList[t3]);
      }
      t2._contents += "}";
      return true;
    }
  };
  A._JsonStringifier_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      B.JSArray_methods.$indexSet(t1, t2.i++, key);
      B.JSArray_methods.$indexSet(t1, t2.i++, value);
    },
    $signature: 5
  };
  A._JsonStringStringifier.prototype = {
    get$_partialResult() {
      var t1 = this._sink._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.Latin1Encoder.prototype = {};
  A.DateTime.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DateTime && this._value === other._value && true;
    },
    get$hashCode(_) {
      var t1 = this._value;
      return (t1 ^ B.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
    },
    toString$0(_) {
      var _this = this,
        y = A.DateTime__fourDigits(A.Primitives_getYear(_this)),
        m = A.DateTime__twoDigits(A.Primitives_getMonth(_this)),
        d = A.DateTime__twoDigits(A.Primitives_getDay(_this)),
        h = A.DateTime__twoDigits(A.Primitives_getHours(_this)),
        min = A.DateTime__twoDigits(A.Primitives_getMinutes(_this)),
        sec = A.DateTime__twoDigits(A.Primitives_getSeconds(_this)),
        ms = A.DateTime__threeDigits(A.Primitives_getMilliseconds(_this));
      return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
    }
  };
  A.Error.prototype = {
    get$stackTrace() {
      return A.getTraceFromException(this.$thrownJsError);
    }
  };
  A.AssertionError.prototype = {
    toString$0(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + A.Error_safeToString(t1);
      return "Assertion failed";
    }
  };
  A.TypeError.prototype = {};
  A.NullThrownError.prototype = {
    toString$0(_) {
      return "Throw of null.";
    }
  };
  A.ArgumentError.prototype = {
    get$_errorName() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation() {
      return "";
    },
    toString$0(_) {
      var _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + A.S(message),
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.invalidValue);
    }
  };
  A.RangeError.prototype = {
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + A.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
      return explanation;
    }
  };
  A.IndexError.prototype = {
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      if (A._asInt(this.invalidValue) < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.UnsupportedError.prototype = {
    toString$0(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  A.UnimplementedError.prototype = {
    toString$0(_) {
      return "UnimplementedError: " + this.message;
    }
  };
  A.StateError.prototype = {
    toString$0(_) {
      return "Bad state: " + this.message;
    }
  };
  A.ConcurrentModificationError.prototype = {
    toString$0(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
    }
  };
  A.OutOfMemoryError.prototype = {
    toString$0(_) {
      return "Out of Memory";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.StackOverflowError.prototype = {
    toString$0(_) {
      return "Stack Overflow";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.CyclicInitializationError.prototype = {
    toString$0(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    }
  };
  A._Exception.prototype = {
    toString$0(_) {
      return "Exception: " + this.message;
    }
  };
  A.FormatException.prototype = {
    toString$0(_) {
      var t1, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix,
        message = this.message,
        report = "" !== message ? "FormatException: " + message : "FormatException",
        offset = this.offset,
        source = this.source;
      if (typeof source == "string") {
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = B.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = B.JSString_methods._codeUnitAt$1(source, i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = source.length;
        for (i = offset; i < lineEnd; ++i) {
          char = B.JSString_methods.codeUnitAt$1(source, i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        if (lineEnd - lineStart > 78)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        return report + prefix + B.JSString_methods.substring$2(source, start, end) + postfix + "\n" + B.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + A.S(offset) + ")") : report;
    }
  };
  A.Iterable.prototype = {
    get$length(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    elementAt$1(_, index) {
      var t1, elementIndex, element;
      A.RangeError_checkNotNegative(index, "index");
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current();
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw A.wrapException(A.IndexError$(index, this, "index", null, elementIndex));
    },
    toString$0(_) {
      return A.IterableBase_iterableToShortString(this, "(", ")");
    }
  };
  A.Null.prototype = {
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, this);
    },
    toString$0(_) {
      return "null";
    }
  };
  A.Object.prototype = {$isObject: 1,
    $eq(_, other) {
      return this === other;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this);
    },
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
    },
    toString() {
      return this.toString$0(this);
    }
  };
  A._StringStackTrace.prototype = {
    toString$0(_) {
      return "";
    },
    $isStackTrace: 1
  };
  A.StringBuffer.prototype = {
    get$length(_) {
      return this._contents.length;
    },
    toString$0(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isStringSink: 1
  };
  A.Blob.prototype = {$isBlob: 1};
  A.DedicatedWorkerGlobalScope.prototype = {
    postMessage$2(receiver, message, transfer) {
      type$.nullable_List_Object._as(transfer);
      receiver.postMessage(new A._StructuredCloneDart2Js([], []).walk$1(message));
      return;
    }
  };
  A.DomException.prototype = {
    toString$0(receiver) {
      return String(receiver);
    }
  };
  A.Event.prototype = {$isEvent: 1};
  A.EventTarget.prototype = {
    addEventListener$3(receiver, type, listener, useCapture) {
      type$.nullable_dynamic_Function_Event._as(listener);
      if (listener != null)
        this._addEventListener$3(receiver, type, listener, false);
    },
    _addEventListener$3(receiver, type, listener, options) {
      return receiver.addEventListener(type, A.convertDartClosureToJS(type$.nullable_dynamic_Function_Event._as(listener), 1), false);
    },
    $isEventTarget: 1
  };
  A.File.prototype = {$isFile: 1};
  A.MessageEvent.prototype = {$isMessageEvent: 1};
  A.MessagePort.prototype = {$isMessagePort: 1};
  A.WorkerGlobalScope.prototype = {};
  A.EventStreamProvider.prototype = {};
  A._EventStream.prototype = {};
  A._EventStreamSubscription.prototype = {};
  A._EventStreamSubscription_closure.prototype = {
    call$1(e) {
      return this.onData.call$1(type$.Event._as(e));
    },
    $signature: 12
  };
  A._StructuredClone.prototype = {
    findSlot$1(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      B.JSArray_methods.add$1(t1, value);
      B.JSArray_methods.add$1(this.copies, null);
      return $length;
    },
    walk$1(e) {
      var slot, t2, copy, _this = this, t1 = {};
      if (e == null)
        return e;
      if (A._isBool(e))
        return e;
      if (typeof e == "number")
        return e;
      if (typeof e == "string")
        return e;
      if (e instanceof A.DateTime)
        return new Date(e._value);
      if (type$.File._is(e))
        return e;
      if (type$.Blob._is(e))
        return e;
      if (type$.NativeByteBuffer._is(e) || type$.NativeTypedData._is(e) || type$.MessagePort._is(e))
        return e;
      if (type$.Map_dynamic_dynamic._is(e)) {
        slot = _this.findSlot$1(e);
        t2 = _this.copies;
        if (!(slot < t2.length))
          return A.ioore(t2, slot);
        copy = t1.copy = t2[slot];
        if (copy != null)
          return copy;
        copy = {};
        t1.copy = copy;
        B.JSArray_methods.$indexSet(t2, slot, copy);
        e.forEach$1(0, new A._StructuredClone_walk_closure(t1, _this));
        return t1.copy;
      }
      if (type$.List_dynamic._is(e)) {
        slot = _this.findSlot$1(e);
        t1 = _this.copies;
        if (!(slot < t1.length))
          return A.ioore(t1, slot);
        copy = t1[slot];
        if (copy != null)
          return copy;
        return _this.copyList$2(e, slot);
      }
      if (type$.JSObject._is(e)) {
        slot = _this.findSlot$1(e);
        t2 = _this.copies;
        if (!(slot < t2.length))
          return A.ioore(t2, slot);
        copy = t1.copy = t2[slot];
        if (copy != null)
          return copy;
        copy = {};
        t1.copy = copy;
        B.JSArray_methods.$indexSet(t2, slot, copy);
        _this.forEachObjectKey$2(e, new A._StructuredClone_walk_closure0(t1, _this));
        return t1.copy;
      }
      throw A.wrapException(A.UnimplementedError$("structured clone of other type"));
    },
    copyList$2(e, slot) {
      var i,
        t1 = J.getInterceptor$asx(e),
        $length = t1.get$length(e),
        copy = new Array($length);
      B.JSArray_methods.$indexSet(this.copies, slot, copy);
      for (i = 0; i < $length; ++i)
        B.JSArray_methods.$indexSet(copy, i, this.walk$1(t1.$index(e, i)));
      return copy;
    }
  };
  A._StructuredClone_walk_closure.prototype = {
    call$2(key, value) {
      this._box_0.copy[key] = this.$this.walk$1(value);
    },
    $signature: 13
  };
  A._StructuredClone_walk_closure0.prototype = {
    call$2(key, value) {
      this._box_0.copy[key] = this.$this.walk$1(value);
    },
    $signature: 14
  };
  A._AcceptStructuredClone.prototype = {
    findSlot$1(value) {
      var i,
        t1 = this.values,
        $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      B.JSArray_methods.add$1(t1, value);
      B.JSArray_methods.add$1(this.copies, null);
      return $length;
    },
    walk$1(e) {
      var millisSinceEpoch, t1, proto, slot, copy, t2, l, $length, i, _this = this, _box_0 = {};
      if (e == null)
        return e;
      if (A._isBool(e))
        return e;
      if (typeof e == "number")
        return e;
      if (typeof e == "string")
        return e;
      if (e instanceof Date) {
        millisSinceEpoch = e.getTime();
        if (Math.abs(millisSinceEpoch) <= 864e13)
          t1 = false;
        else
          t1 = true;
        if (t1)
          A.throwExpression(A.ArgumentError$("DateTime is outside valid range: " + millisSinceEpoch, null));
        A.checkNotNullable(true, "isUtc", type$.bool);
        return new A.DateTime(millisSinceEpoch, true);
      }
      if (e instanceof RegExp)
        throw A.wrapException(A.UnimplementedError$("structured clone of RegExp"));
      if (typeof Promise != "undefined" && e instanceof Promise)
        return A.promiseToFuture(e, type$.dynamic);
      proto = Object.getPrototypeOf(e);
      if (proto === Object.prototype || proto === null) {
        slot = _this.findSlot$1(e);
        t1 = _this.copies;
        if (!(slot < t1.length))
          return A.ioore(t1, slot);
        copy = _box_0.copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = type$.dynamic;
        copy = A.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        _box_0.copy = copy;
        B.JSArray_methods.$indexSet(t1, slot, copy);
        _this.forEachJsField$2(e, new A._AcceptStructuredClone_walk_closure(_box_0, _this));
        return _box_0.copy;
      }
      if (e instanceof Array) {
        l = e;
        slot = _this.findSlot$1(l);
        t1 = _this.copies;
        if (!(slot < t1.length))
          return A.ioore(t1, slot);
        copy = t1[slot];
        if (copy != null)
          return copy;
        t2 = J.getInterceptor$asx(l);
        $length = t2.get$length(l);
        copy = _this.mustCopy ? new Array($length) : l;
        B.JSArray_methods.$indexSet(t1, slot, copy);
        for (t1 = J.getInterceptor$ax(copy), i = 0; i < $length; ++i)
          t1.$indexSet(copy, i, _this.walk$1(t2.$index(l, i)));
        return copy;
      }
      return e;
    }
  };
  A._AcceptStructuredClone_walk_closure.prototype = {
    call$2(key, value) {
      var t1 = this._box_0.copy,
        t2 = this.$this.walk$1(value);
      J.$indexSet$ax(t1, key, t2);
      return t2;
    },
    $signature: 15
  };
  A._StructuredCloneDart2Js.prototype = {
    forEachObjectKey$2(object, action) {
      var t1, t2, _i, key;
      type$.dynamic_Function_dynamic_dynamic._as(action);
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  A._AcceptStructuredCloneDart2Js.prototype = {
    forEachJsField$2(object, action) {
      var t1, t2, _i, key;
      type$.dynamic_Function_dynamic_dynamic._as(action);
      for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        action.call$2(key, object[key]);
      }
    }
  };
  A.NullRejectionException.prototype = {
    toString$0(_) {
      return "Promise was rejected with a value of `" + (this.isUndefined ? "undefined" : "null") + "`.";
    }
  };
  A.promiseToFuture_closure.prototype = {
    call$1(r) {
      var t1 = this.completer,
        t2 = t1.$ti;
      r = t2._eval$1("1/?")._as(this.T._eval$1("0/?")._as(r));
      t1 = t1.future;
      if ((t1._state & 30) !== 0)
        A.throwExpression(A.StateError$("Future already completed"));
      t1._asyncComplete$1(t2._eval$1("1/")._as(r));
      return null;
    },
    $signature: 6
  };
  A.promiseToFuture_closure0.prototype = {
    call$1(e) {
      if (e == null)
        return this.completer.completeError$1(new A.NullRejectionException(e === undefined));
      return this.completer.completeError$1(e);
    },
    $signature: 6
  };
  A.Endian.prototype = {};
  A._KeyDerivator.prototype = {};
  A._ScryptKeyDerivator.prototype = {
    deriveKey$1(password) {
      var t2, t3, out, _this = this,
        t1 = type$.int,
        impl = new A.Scrypt(A.List_List$filled(16, 0, false, t1), A.List_List$filled(16, 0, false, t1));
      t1 = _this.n;
      t2 = _this.r;
      t3 = _this.p;
      impl._params = new A.ScryptParameters(t1, t2, t3, _this.dklen, _this.salt);
      if (t1 < 2 || (t1 & t1 - 1) >>> 0 !== 0)
        A.throwExpression(A.ArgumentError$("N must be a power of 2 greater than 1", null));
      if (t1 > B.JSInt_methods.$tdiv(16777215, t2))
        A.throwExpression(A.ArgumentError$("Parameter N is too large", null));
      if (t2 > B.JSInt_methods.$tdiv(16777215, t3))
        A.throwExpression(A.ArgumentError$("Parameter r is too large", null));
      t1 = impl.get$keySize();
      out = new Uint8Array(t1);
      return B.NativeUint8List_methods.sublist$2(out, 0, impl.deriveKey$4(password, 0, out, 0));
    }
  };
  A.KeyStore.prototype = {
    toJson$0() {
      var t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, _this = this,
        t1 = _this._derivator,
        derivedKey = t1.deriveKey$1(_this._password),
        t2 = _this._iv,
        cipherTextBytes = A.KeyStore__initCipher(true, derivedKey, t2).process$1(A.str2ByteArray(_this.privateKey, "")),
        t3 = type$.List_int,
        t4 = type$.String,
        t5 = type$.Object;
      t1 = A.LinkedHashMap_LinkedHashMap$_literal(["cipher", "aes-256-ctr", "cipherParams", A.LinkedHashMap_LinkedHashMap$_literal(["iv", A.Base58_encode(t3._as(t2))], t4, t4), "cipherText", A.Base58_encode(t3._as(new Uint8Array(A._ensureNativeList(cipherTextBytes)))), "kdf", "scrypt", "kdfparams", A.LinkedHashMap_LinkedHashMap$_literal(["dkLen", t1.dklen, "n", t1.n, "r", t1.r, "p", t1.p, "salt", A.Base58_encode(t3._as(t1.salt))], t4, type$.dynamic), "mac", A.KeyStore__getMac(derivedKey, cipherTextBytes)], t4, t5);
      t3 = _this._id;
      t2 = t3.length;
      if (t2 !== 16)
        A.throwExpression(A.Exception_Exception("The provided buffer needs to have a length of 16."));
      t6 = $.$get$Uuid__byteToHex();
      if (0 >= t2)
        return A.ioore(t3, 0);
      t7 = t3[0];
      if (!(t7 < 256))
        return A.ioore(t6, t7);
      t7 = t6[t7];
      if (1 >= t2)
        return A.ioore(t3, 1);
      t8 = t3[1];
      if (!(t8 < 256))
        return A.ioore(t6, t8);
      t8 = t6[t8];
      if (2 >= t2)
        return A.ioore(t3, 2);
      t9 = t3[2];
      if (!(t9 < 256))
        return A.ioore(t6, t9);
      t9 = t6[t9];
      if (3 >= t2)
        return A.ioore(t3, 3);
      t10 = t3[3];
      if (!(t10 < 256))
        return A.ioore(t6, t10);
      t10 = t6[t10];
      if (4 >= t2)
        return A.ioore(t3, 4);
      t11 = t3[4];
      if (!(t11 < 256))
        return A.ioore(t6, t11);
      t11 = t6[t11];
      if (5 >= t2)
        return A.ioore(t3, 5);
      t12 = t3[5];
      if (!(t12 < 256))
        return A.ioore(t6, t12);
      t12 = t6[t12];
      if (6 >= t2)
        return A.ioore(t3, 6);
      t13 = t3[6];
      if (!(t13 < 256))
        return A.ioore(t6, t13);
      t13 = t6[t13];
      if (7 >= t2)
        return A.ioore(t3, 7);
      t14 = t3[7];
      if (!(t14 < 256))
        return A.ioore(t6, t14);
      t14 = t6[t14];
      if (8 >= t2)
        return A.ioore(t3, 8);
      t15 = t3[8];
      if (!(t15 < 256))
        return A.ioore(t6, t15);
      t15 = t6[t15];
      if (9 >= t2)
        return A.ioore(t3, 9);
      t16 = t3[9];
      if (!(t16 < 256))
        return A.ioore(t6, t16);
      t16 = t6[t16];
      if (10 >= t2)
        return A.ioore(t3, 10);
      t17 = t3[10];
      if (!(t17 < 256))
        return A.ioore(t6, t17);
      t17 = t6[t17];
      if (11 >= t2)
        return A.ioore(t3, 11);
      t18 = t3[11];
      if (!(t18 < 256))
        return A.ioore(t6, t18);
      t18 = t6[t18];
      if (12 >= t2)
        return A.ioore(t3, 12);
      t19 = t3[12];
      if (!(t19 < 256))
        return A.ioore(t6, t19);
      t19 = t6[t19];
      if (13 >= t2)
        return A.ioore(t3, 13);
      t20 = t3[13];
      if (!(t20 < 256))
        return A.ioore(t6, t20);
      t20 = t6[t20];
      if (14 >= t2)
        return A.ioore(t3, 14);
      t21 = t3[14];
      if (!(t21 < 256))
        return A.ioore(t6, t21);
      t21 = t6[t21];
      if (15 >= t2)
        return A.ioore(t3, 15);
      t3 = t3[15];
      if (!(t3 < 256))
        return A.ioore(t6, t3);
      return B.C_JsonCodec.encode$1(A.LinkedHashMap_LinkedHashMap$_literal(["crypto", t1, "id", t7 + t8 + t9 + t10 + "-" + t11 + t12 + "-" + t13 + t14 + "-" + t15 + t16 + "-" + t17 + t18 + t19 + t20 + t21 + t6[t3], "version", 1], t4, t5));
    }
  };
  A.HexCodec.prototype = {
    get$decoder() {
      return B.C_HexDecoder;
    }
  };
  A.HexDecoder.prototype = {
    convert$1(input) {
      var t2, bytes,
        t1 = input.length;
      if ((t1 & 1) !== 0)
        throw A.wrapException(A.FormatException$("Invalid input length, must be even.", input, t1));
      t2 = B.JSInt_methods._tdivFast$1(t1, 2);
      bytes = new Uint8Array(t2);
      A._decode(new A.CodeUnits(input), 0, t1, bytes, 0);
      return bytes;
    }
  };
  A.CipherParameters.prototype = {};
  A.KeyParameter.prototype = {};
  A.ParametersWithIV.prototype = {$isCipherParameters: 1};
  A.AESEngine.prototype = {
    _subWord$1(x) {
      var t1 = this._S;
      return (t1[x & 255] & 255 | (t1[x >>> 8 & 255] & 255) << 8 | (t1[x >>> 16 & 255] & 255) << 16 | t1[x >>> 24 & 255] << 24) >>> 0;
    },
    generateWorkingKey$2(forEncryption, params) {
      var KC, t2, _length, $W, i, col0, t3, col1, col2, col3, col4, col5, rcon, rcon0, col6, col7, _this = this,
        t1 = A._lateReadCheck(params.__KeyParameter_key, "key"),
        keyLen = t1.length;
      if (keyLen < 16 || keyLen > 32 || (keyLen & 7) !== 0)
        throw A.wrapException(A.ArgumentError$("Key length not 128/192/256 bits.", null));
      KC = keyLen >>> 2;
      t2 = KC + 6;
      _this._ROUNDS = t2;
      _length = t2 + 1;
      $W = J.JSArray_JSArray$allocateGrowable(_length, type$.List_int);
      for (t2 = type$.int, i = 0; i < _length; ++i)
        $W[i] = A.List_List$filled(4, 0, false, t2);
      switch (KC) {
        case 4:
          col0 = A.unpack32(t1, 0, B.C_Endian);
          t2 = $W.length;
          if (0 >= t2)
            return A.ioore($W, 0);
          t3 = $W[0];
          B.JSArray_methods.$indexSet(t3, 0, col0);
          col1 = A.unpack32(t1, 4, B.C_Endian);
          B.JSArray_methods.$indexSet(t3, 1, col1);
          col2 = A.unpack32(t1, 8, B.C_Endian);
          B.JSArray_methods.$indexSet(t3, 2, col2);
          col3 = A.unpack32(t1, 12, B.C_Endian);
          B.JSArray_methods.$indexSet(t3, 3, col3);
          for (t1 = _this._rcon, i = 1; i <= 10; ++i) {
            col0 = (col0 ^ _this._subWord$1((col3 >>> 8 | (col3 & $._MASK32_HI_BITS[24]) << 24) >>> 0) ^ t1[i - 1]) >>> 0;
            if (!(i < t2))
              return A.ioore($W, i);
            t3 = $W[i];
            B.JSArray_methods.$indexSet(t3, 0, col0);
            col1 = (col1 ^ col0) >>> 0;
            B.JSArray_methods.$indexSet(t3, 1, col1);
            col2 = (col2 ^ col1) >>> 0;
            B.JSArray_methods.$indexSet(t3, 2, col2);
            col3 = (col3 ^ col2) >>> 0;
            B.JSArray_methods.$indexSet(t3, 3, col3);
          }
          break;
        case 6:
          col0 = A.unpack32(t1, 0, B.C_Endian);
          t2 = $W.length;
          if (0 >= t2)
            return A.ioore($W, 0);
          t3 = $W[0];
          B.JSArray_methods.$indexSet(t3, 0, col0);
          col1 = A.unpack32(t1, 4, B.C_Endian);
          B.JSArray_methods.$indexSet(t3, 1, col1);
          col2 = A.unpack32(t1, 8, B.C_Endian);
          B.JSArray_methods.$indexSet(t3, 2, col2);
          col3 = A.unpack32(t1, 12, B.C_Endian);
          B.JSArray_methods.$indexSet(t3, 3, col3);
          col4 = A.unpack32(t1, 16, B.C_Endian);
          col5 = A.unpack32(t1, 20, B.C_Endian);
          for (i = 1, rcon = 1; true;) {
            if (!(i < t2))
              return A.ioore($W, i);
            t1 = $W[i];
            B.JSArray_methods.$indexSet(t1, 0, col4);
            B.JSArray_methods.$indexSet(t1, 1, col5);
            rcon0 = rcon << 1;
            col0 = (col0 ^ _this._subWord$1((col5 >>> 8 | (col5 & $._MASK32_HI_BITS[24]) << 24) >>> 0) ^ rcon) >>> 0;
            B.JSArray_methods.$indexSet(t1, 2, col0);
            col1 = (col1 ^ col0) >>> 0;
            B.JSArray_methods.$indexSet(t1, 3, col1);
            col2 = (col2 ^ col1) >>> 0;
            t1 = i + 1;
            if (!(t1 < t2))
              return A.ioore($W, t1);
            t1 = $W[t1];
            B.JSArray_methods.$indexSet(t1, 0, col2);
            col3 = (col3 ^ col2) >>> 0;
            B.JSArray_methods.$indexSet(t1, 1, col3);
            col4 = (col4 ^ col3) >>> 0;
            B.JSArray_methods.$indexSet(t1, 2, col4);
            col5 = (col5 ^ col4) >>> 0;
            B.JSArray_methods.$indexSet(t1, 3, col5);
            rcon = rcon0 << 1;
            col0 = (col0 ^ _this._subWord$1((col5 >>> 8 | (col5 & $._MASK32_HI_BITS[24]) << 24) >>> 0) ^ rcon0) >>> 0;
            t1 = i + 2;
            if (!(t1 < t2))
              return A.ioore($W, t1);
            t1 = $W[t1];
            B.JSArray_methods.$indexSet(t1, 0, col0);
            col1 = (col1 ^ col0) >>> 0;
            B.JSArray_methods.$indexSet(t1, 1, col1);
            col2 = (col2 ^ col1) >>> 0;
            B.JSArray_methods.$indexSet(t1, 2, col2);
            col3 = (col3 ^ col2) >>> 0;
            B.JSArray_methods.$indexSet(t1, 3, col3);
            i += 3;
            if (i >= 13)
              break;
            col4 = (col4 ^ col3) >>> 0;
            col5 = (col5 ^ col4) >>> 0;
          }
          break;
        case 8:
          col0 = A.unpack32(t1, 0, B.C_Endian);
          t2 = $W.length;
          if (0 >= t2)
            return A.ioore($W, 0);
          t3 = $W[0];
          B.JSArray_methods.$indexSet(t3, 0, col0);
          col1 = A.unpack32(t1, 4, B.C_Endian);
          B.JSArray_methods.$indexSet(t3, 1, col1);
          col2 = A.unpack32(t1, 8, B.C_Endian);
          B.JSArray_methods.$indexSet(t3, 2, col2);
          col3 = A.unpack32(t1, 12, B.C_Endian);
          B.JSArray_methods.$indexSet(t3, 3, col3);
          col4 = A.unpack32(t1, 16, B.C_Endian);
          if (1 >= t2)
            return A.ioore($W, 1);
          t3 = $W[1];
          B.JSArray_methods.$indexSet(t3, 0, col4);
          col5 = A.unpack32(t1, 20, B.C_Endian);
          B.JSArray_methods.$indexSet(t3, 1, col5);
          col6 = A.unpack32(t1, 24, B.C_Endian);
          B.JSArray_methods.$indexSet(t3, 2, col6);
          col7 = A.unpack32(t1, 28, B.C_Endian);
          B.JSArray_methods.$indexSet(t3, 3, col7);
          for (i = 2, rcon = 1; true; rcon = rcon0) {
            rcon0 = rcon << 1;
            col0 = (col0 ^ _this._subWord$1((col7 >>> 8 | (col7 & $._MASK32_HI_BITS[24]) << 24) >>> 0) ^ rcon) >>> 0;
            if (!(i < t2))
              return A.ioore($W, i);
            t1 = $W[i];
            B.JSArray_methods.$indexSet(t1, 0, col0);
            col1 = (col1 ^ col0) >>> 0;
            B.JSArray_methods.$indexSet(t1, 1, col1);
            col2 = (col2 ^ col1) >>> 0;
            B.JSArray_methods.$indexSet(t1, 2, col2);
            col3 = (col3 ^ col2) >>> 0;
            B.JSArray_methods.$indexSet(t1, 3, col3);
            ++i;
            if (i >= 15)
              break;
            col4 = (col4 ^ _this._subWord$1(col3)) >>> 0;
            if (!(i < t2))
              return A.ioore($W, i);
            t1 = $W[i];
            B.JSArray_methods.$indexSet(t1, 0, col4);
            col5 = (col5 ^ col4) >>> 0;
            B.JSArray_methods.$indexSet(t1, 1, col5);
            col6 = (col6 ^ col5) >>> 0;
            B.JSArray_methods.$indexSet(t1, 2, col6);
            col7 = (col7 ^ col6) >>> 0;
            B.JSArray_methods.$indexSet(t1, 3, col7);
            ++i;
          }
          break;
        default:
          throw A.wrapException(A.StateError$("Should never get here"));
      }
      return $W;
    },
    _encryptBlock$5(input, inOff, out, outOff, KW) {
      var t2, t00, t10, t20, r3, t3, t4, r, t5, t6, t7, t8, t9, t11, t12, t13, t14, t15, t16, r0, r1, r2, r30, t17, t18, t19, t21, _this = this,
        C0 = A.unpack32(input, inOff, B.C_Endian),
        C1 = A.unpack32(input, inOff + 4, B.C_Endian),
        C2 = A.unpack32(input, inOff + 8, B.C_Endian),
        C3 = A.unpack32(input, inOff + 12, B.C_Endian),
        t1 = KW.length;
      if (0 >= t1)
        return A.ioore(KW, 0);
      t2 = KW[0];
      t00 = C0 ^ t2[0];
      t10 = C1 ^ t2[1];
      t20 = C2 ^ t2[2];
      r3 = C3 ^ t2[3];
      for (t2 = _this._ROUNDS - 1, t3 = _this._T0, t4 = t3.length, r = 1; r < t2;) {
        t5 = t00 & 255;
        if (!(t5 < t4))
          return A.ioore(t3, t5);
        t5 = t3[t5];
        t6 = t10 >>> 8 & 255;
        if (!(t6 < t4))
          return A.ioore(t3, t6);
        t6 = A._asInt(t3[t6]);
        t7 = B.JSInt_methods._shrOtherPositive$1(t6, 24);
        t8 = $._MASK32_HI_BITS[8];
        if (typeof t5 !== "number")
          return t5.$xor();
        t9 = t20 >>> 16 & 255;
        if (!(t9 < t4))
          return A.ioore(t3, t9);
        t9 = A._asInt(t3[t9]);
        t11 = B.JSInt_methods._shrOtherPositive$1(t9, 16);
        t12 = $._MASK32_HI_BITS[16];
        t13 = r3 >>> 24 & 255;
        if (!(t13 < t4))
          return A.ioore(t3, t13);
        t13 = A._asInt(t3[t13]);
        t14 = B.JSInt_methods._shrOtherPositive$1(t13, 8);
        t15 = $._MASK32_HI_BITS[24];
        if (!(r < t1))
          return A.ioore(KW, r);
        t16 = KW[r];
        r0 = t5 ^ (t7 | (t6 & t8) << 8) ^ (t11 | (t9 & t12) << 16) ^ (t14 | (t13 & t15) << 24) ^ t16[0];
        t13 = t10 & 255;
        if (!(t13 < t4))
          return A.ioore(t3, t13);
        t13 = t3[t13];
        t14 = t20 >>> 8 & 255;
        if (!(t14 < t4))
          return A.ioore(t3, t14);
        t14 = A._asInt(t3[t14]);
        t9 = B.JSInt_methods._shrOtherPositive$1(t14, 24);
        if (typeof t13 !== "number")
          return t13.$xor();
        t11 = r3 >>> 16 & 255;
        if (!(t11 < t4))
          return A.ioore(t3, t11);
        t11 = A._asInt(t3[t11]);
        t6 = B.JSInt_methods._shrOtherPositive$1(t11, 16);
        t7 = t00 >>> 24 & 255;
        if (!(t7 < t4))
          return A.ioore(t3, t7);
        t7 = A._asInt(t3[t7]);
        r1 = t13 ^ (t9 | (t14 & t8) << 8) ^ (t6 | (t11 & t12) << 16) ^ (B.JSInt_methods._shrOtherPositive$1(t7, 8) | (t7 & t15) << 24) ^ t16[1];
        t7 = t20 & 255;
        if (!(t7 < t4))
          return A.ioore(t3, t7);
        t7 = t3[t7];
        t11 = r3 >>> 8 & 255;
        if (!(t11 < t4))
          return A.ioore(t3, t11);
        t11 = A._asInt(t3[t11]);
        t6 = B.JSInt_methods._shrOtherPositive$1(t11, 24);
        if (typeof t7 !== "number")
          return t7.$xor();
        t14 = t00 >>> 16 & 255;
        if (!(t14 < t4))
          return A.ioore(t3, t14);
        t14 = A._asInt(t3[t14]);
        t9 = B.JSInt_methods._shrOtherPositive$1(t14, 16);
        t13 = t10 >>> 24 & 255;
        if (!(t13 < t4))
          return A.ioore(t3, t13);
        t13 = A._asInt(t3[t13]);
        r2 = t7 ^ (t6 | (t11 & t8) << 8) ^ (t9 | (t14 & t12) << 16) ^ (B.JSInt_methods._shrOtherPositive$1(t13, 8) | (t13 & t15) << 24) ^ t16[2];
        t13 = r3 & 255;
        if (!(t13 < t4))
          return A.ioore(t3, t13);
        t13 = t3[t13];
        t00 = t00 >>> 8 & 255;
        if (!(t00 < t4))
          return A.ioore(t3, t00);
        t00 = A._asInt(t3[t00]);
        t14 = B.JSInt_methods._shrOtherPositive$1(t00, 24);
        if (typeof t13 !== "number")
          return t13.$xor();
        t10 = t10 >>> 16 & 255;
        if (!(t10 < t4))
          return A.ioore(t3, t10);
        t10 = A._asInt(t3[t10]);
        t9 = B.JSInt_methods._shrOtherPositive$1(t10, 16);
        t20 = t20 >>> 24 & 255;
        if (!(t20 < t4))
          return A.ioore(t3, t20);
        t20 = A._asInt(t3[t20]);
        ++r;
        r3 = t13 ^ (t14 | (t00 & t8) << 8) ^ (t9 | (t10 & t12) << 16) ^ (B.JSInt_methods._shrOtherPositive$1(t20, 8) | (t20 & t15) << 24) ^ t16[3];
        t16 = r0 & 255;
        if (!(t16 < t4))
          return A.ioore(t3, t16);
        t16 = t3[t16];
        t20 = r1 >>> 8 & 255;
        if (!(t20 < t4))
          return A.ioore(t3, t20);
        t20 = A._asInt(t3[t20]);
        t10 = B.JSInt_methods._shrOtherPositive$1(t20, 24);
        if (typeof t16 !== "number")
          return t16.$xor();
        t9 = r2 >>> 16 & 255;
        if (!(t9 < t4))
          return A.ioore(t3, t9);
        t9 = A._asInt(t3[t9]);
        t00 = B.JSInt_methods._shrOtherPositive$1(t9, 16);
        t14 = r3 >>> 24 & 255;
        if (!(t14 < t4))
          return A.ioore(t3, t14);
        t14 = A._asInt(t3[t14]);
        t13 = B.JSInt_methods._shrOtherPositive$1(t14, 8);
        if (!(r < t1))
          return A.ioore(KW, r);
        t11 = KW[r];
        t00 = t16 ^ (t10 | (t20 & t8) << 8) ^ (t00 | (t9 & t12) << 16) ^ (t13 | (t14 & t15) << 24) ^ t11[0];
        t14 = r1 & 255;
        if (!(t14 < t4))
          return A.ioore(t3, t14);
        t14 = t3[t14];
        t13 = r2 >>> 8 & 255;
        if (!(t13 < t4))
          return A.ioore(t3, t13);
        t13 = A._asInt(t3[t13]);
        t9 = B.JSInt_methods._shrOtherPositive$1(t13, 24);
        if (typeof t14 !== "number")
          return t14.$xor();
        t20 = r3 >>> 16 & 255;
        if (!(t20 < t4))
          return A.ioore(t3, t20);
        t20 = A._asInt(t3[t20]);
        t10 = B.JSInt_methods._shrOtherPositive$1(t20, 16);
        t16 = r0 >>> 24 & 255;
        if (!(t16 < t4))
          return A.ioore(t3, t16);
        t16 = A._asInt(t3[t16]);
        t10 = t14 ^ (t9 | (t13 & t8) << 8) ^ (t10 | (t20 & t12) << 16) ^ (B.JSInt_methods._shrOtherPositive$1(t16, 8) | (t16 & t15) << 24) ^ t11[1];
        t16 = r2 & 255;
        if (!(t16 < t4))
          return A.ioore(t3, t16);
        t16 = t3[t16];
        t20 = r3 >>> 8 & 255;
        if (!(t20 < t4))
          return A.ioore(t3, t20);
        t20 = A._asInt(t3[t20]);
        t13 = B.JSInt_methods._shrOtherPositive$1(t20, 24);
        if (typeof t16 !== "number")
          return t16.$xor();
        t9 = r0 >>> 16 & 255;
        if (!(t9 < t4))
          return A.ioore(t3, t9);
        t9 = A._asInt(t3[t9]);
        t14 = B.JSInt_methods._shrOtherPositive$1(t9, 16);
        t6 = r1 >>> 24 & 255;
        if (!(t6 < t4))
          return A.ioore(t3, t6);
        t6 = A._asInt(t3[t6]);
        t20 = t16 ^ (t13 | (t20 & t8) << 8) ^ (t14 | (t9 & t12) << 16) ^ (B.JSInt_methods._shrOtherPositive$1(t6, 8) | (t6 & t15) << 24) ^ t11[2];
        t6 = r3 & 255;
        if (!(t6 < t4))
          return A.ioore(t3, t6);
        t6 = t3[t6];
        t9 = r0 >>> 8 & 255;
        if (!(t9 < t4))
          return A.ioore(t3, t9);
        t9 = A._asInt(t3[t9]);
        t14 = B.JSInt_methods._shrOtherPositive$1(t9, 24);
        if (typeof t6 !== "number")
          return t6.$xor();
        t13 = r1 >>> 16 & 255;
        if (!(t13 < t4))
          return A.ioore(t3, t13);
        t13 = A._asInt(t3[t13]);
        t16 = B.JSInt_methods._shrOtherPositive$1(t13, 16);
        t7 = r2 >>> 24 & 255;
        if (!(t7 < t4))
          return A.ioore(t3, t7);
        t7 = A._asInt(t3[t7]);
        ++r;
        r3 = t6 ^ (t14 | (t9 & t8) << 8) ^ (t16 | (t13 & t12) << 16) ^ (B.JSInt_methods._shrOtherPositive$1(t7, 8) | (t7 & t15) << 24) ^ t11[3];
      }
      t1 = t00 & 255;
      if (!(t1 < t4))
        return A.ioore(t3, t1);
      t1 = t3[t1];
      t2 = t10 >>> 8 & 255;
      if (!(t2 < t4))
        return A.ioore(t3, t2);
      t2 = A.rotr32(A._asInt(t3[t2]), 24);
      if (typeof t1 !== "number")
        return t1.$xor();
      t4 = t20 >>> 16 & 255;
      if (!(t4 < t3.length))
        return A.ioore(t3, t4);
      t4 = A.rotr32(A._asInt(t3[t4]), 16);
      t5 = r3 >>> 24 & 255;
      if (!(t5 < t3.length))
        return A.ioore(t3, t5);
      t5 = A.rotr32(A._asInt(t3[t5]), 8);
      if (!(r < KW.length))
        return A.ioore(KW, r);
      r0 = t1 ^ t2 ^ t4 ^ t5 ^ KW[r][0];
      t5 = t10 & 255;
      t4 = t3.length;
      if (!(t5 < t4))
        return A.ioore(t3, t5);
      t5 = t3[t5];
      t2 = t20 >>> 8 & 255;
      if (!(t2 < t4))
        return A.ioore(t3, t2);
      t2 = A.rotr32(A._asInt(t3[t2]), 24);
      if (typeof t5 !== "number")
        return t5.$xor();
      t4 = r3 >>> 16 & 255;
      if (!(t4 < t3.length))
        return A.ioore(t3, t4);
      t4 = A.rotr32(A._asInt(t3[t4]), 16);
      t1 = t00 >>> 24 & 255;
      if (!(t1 < t3.length))
        return A.ioore(t3, t1);
      t1 = A.rotr32(A._asInt(t3[t1]), 8);
      if (!(r < KW.length))
        return A.ioore(KW, r);
      r1 = t5 ^ t2 ^ t4 ^ t1 ^ KW[r][1];
      t1 = t20 & 255;
      t4 = t3.length;
      if (!(t1 < t4))
        return A.ioore(t3, t1);
      t1 = t3[t1];
      t2 = r3 >>> 8 & 255;
      if (!(t2 < t4))
        return A.ioore(t3, t2);
      t2 = A.rotr32(A._asInt(t3[t2]), 24);
      if (typeof t1 !== "number")
        return t1.$xor();
      t4 = t00 >>> 16 & 255;
      if (!(t4 < t3.length))
        return A.ioore(t3, t4);
      t4 = A.rotr32(A._asInt(t3[t4]), 16);
      t5 = t10 >>> 24 & 255;
      if (!(t5 < t3.length))
        return A.ioore(t3, t5);
      t5 = A.rotr32(A._asInt(t3[t5]), 8);
      if (!(r < KW.length))
        return A.ioore(KW, r);
      r2 = t1 ^ t2 ^ t4 ^ t5 ^ KW[r][2];
      t5 = r3 & 255;
      t4 = t3.length;
      if (!(t5 < t4))
        return A.ioore(t3, t5);
      t5 = t3[t5];
      t00 = t00 >>> 8 & 255;
      if (!(t00 < t4))
        return A.ioore(t3, t00);
      t00 = A.rotr32(A._asInt(t3[t00]), 24);
      if (typeof t5 !== "number")
        return t5.$xor();
      t10 = t10 >>> 16 & 255;
      if (!(t10 < t3.length))
        return A.ioore(t3, t10);
      t10 = A.rotr32(A._asInt(t3[t10]), 16);
      t20 = t20 >>> 24 & 255;
      if (!(t20 < t3.length))
        return A.ioore(t3, t20);
      t20 = A.rotr32(A._asInt(t3[t20]), 8);
      r3 = r + 1;
      t3 = KW.length;
      if (!(r < t3))
        return A.ioore(KW, r);
      r30 = t5 ^ t00 ^ t10 ^ t20 ^ KW[r][3];
      t20 = _this._S;
      t10 = t20[r0 & 255];
      t00 = t20[r1 >>> 8 & 255];
      t5 = _this._s;
      t4 = r2 >>> 16 & 255;
      t2 = t5.length;
      if (!(t4 < t2))
        return A.ioore(t5, t4);
      t4 = t5[t4];
      if (typeof t4 !== "number")
        return t4.$and();
      t1 = r30 >>> 24 & 255;
      if (!(t1 < t2))
        return A.ioore(t5, t1);
      t1 = t5[t1];
      if (typeof t1 !== "number")
        return t1.$shl();
      if (!(r3 < t3))
        return A.ioore(KW, r3);
      t3 = KW[r3];
      t6 = t3[0];
      t7 = r1 & 255;
      if (!(t7 < t2))
        return A.ioore(t5, t7);
      t7 = t5[t7];
      if (typeof t7 !== "number")
        return t7.$and();
      t8 = t20[r2 >>> 8 & 255];
      t9 = t20[r30 >>> 16 & 255];
      t11 = r0 >>> 24 & 255;
      if (!(t11 < t2))
        return A.ioore(t5, t11);
      t11 = t5[t11];
      if (typeof t11 !== "number")
        return t11.$shl();
      t12 = t3[1];
      t13 = r2 & 255;
      if (!(t13 < t2))
        return A.ioore(t5, t13);
      t13 = t5[t13];
      if (typeof t13 !== "number")
        return t13.$and();
      t14 = t20[r30 >>> 8 & 255];
      t15 = t20[r0 >>> 16 & 255];
      t16 = t20[r1 >>> 24 & 255];
      t17 = t3[2];
      t18 = r30 & 255;
      if (!(t18 < t2))
        return A.ioore(t5, t18);
      t18 = t5[t18];
      if (typeof t18 !== "number")
        return t18.$and();
      t19 = r0 >>> 8 & 255;
      if (!(t19 < t2))
        return A.ioore(t5, t19);
      t19 = t5[t19];
      if (typeof t19 !== "number")
        return t19.$and();
      t21 = r1 >>> 16 & 255;
      if (!(t21 < t2))
        return A.ioore(t5, t21);
      t21 = t5[t21];
      if (typeof t21 !== "number")
        return t21.$and();
      t20 = t20[r2 >>> 24 & 255];
      t3 = t3[3];
      A.pack32((t10 & 255 ^ (t00 & 255) << 8 ^ (t4 & 255) << 16 ^ t1 << 24 ^ t6) >>> 0, out, outOff, B.C_Endian);
      A.pack32((t7 & 255 ^ (t8 & 255) << 8 ^ (t9 & 255) << 16 ^ t11 << 24 ^ t12) >>> 0, out, outOff + 4, B.C_Endian);
      A.pack32((t13 & 255 ^ (t14 & 255) << 8 ^ (t15 & 255) << 16 ^ t16 << 24 ^ t17) >>> 0, out, outOff + 8, B.C_Endian);
      A.pack32((t18 & 255 ^ (t19 & 255) << 8 ^ (t21 & 255) << 16 ^ t20 << 24 ^ t3) >>> 0, out, outOff + 12, B.C_Endian);
    },
    _decryptBlock$5(input, inOff, out, outOff, KW) {
      var t3, t00, t10, t20, r, r3, t4, t5, t6, t7, t8, t9, t11, t12, t13, t14, t15, r0, r1, r2, t16, t17, t18, t19, t21, _this = this,
        C0 = A.unpack32(input, inOff, B.C_Endian),
        C1 = A.unpack32(input, inOff + 4, B.C_Endian),
        C2 = A.unpack32(input, inOff + 8, B.C_Endian),
        C3 = A.unpack32(input, inOff + 12, B.C_Endian),
        t1 = _this._ROUNDS,
        t2 = KW.length;
      if (!(t1 < t2))
        return A.ioore(KW, t1);
      t3 = KW[t1];
      t00 = C0 ^ t3[0];
      t10 = C1 ^ t3[1];
      t20 = C2 ^ t3[2];
      r = t1 - 1;
      r3 = C3 ^ t3[3];
      for (t1 = _this._Tinv0, t3 = t1.length; r > 1;) {
        t4 = t00 & 255;
        if (!(t4 < t3))
          return A.ioore(t1, t4);
        t4 = t1[t4];
        t5 = r3 >>> 8 & 255;
        if (!(t5 < t3))
          return A.ioore(t1, t5);
        t5 = A._asInt(t1[t5]);
        t6 = B.JSInt_methods._shrOtherPositive$1(t5, 24);
        t7 = $._MASK32_HI_BITS[8];
        if (typeof t4 !== "number")
          return t4.$xor();
        t8 = t20 >>> 16 & 255;
        if (!(t8 < t3))
          return A.ioore(t1, t8);
        t8 = A._asInt(t1[t8]);
        t9 = B.JSInt_methods._shrOtherPositive$1(t8, 16);
        t11 = $._MASK32_HI_BITS[16];
        t12 = t10 >>> 24 & 255;
        if (!(t12 < t3))
          return A.ioore(t1, t12);
        t12 = A._asInt(t1[t12]);
        t13 = B.JSInt_methods._shrOtherPositive$1(t12, 8);
        t14 = $._MASK32_HI_BITS[24];
        if (!(r < t2))
          return A.ioore(KW, r);
        t15 = KW[r];
        r0 = t4 ^ (t6 | (t5 & t7) << 8) ^ (t9 | (t8 & t11) << 16) ^ (t13 | (t12 & t14) << 24) ^ t15[0];
        t12 = t10 & 255;
        if (!(t12 < t3))
          return A.ioore(t1, t12);
        t12 = t1[t12];
        t13 = t00 >>> 8 & 255;
        if (!(t13 < t3))
          return A.ioore(t1, t13);
        t13 = A._asInt(t1[t13]);
        t8 = B.JSInt_methods._shrOtherPositive$1(t13, 24);
        if (typeof t12 !== "number")
          return t12.$xor();
        t9 = r3 >>> 16 & 255;
        if (!(t9 < t3))
          return A.ioore(t1, t9);
        t9 = A._asInt(t1[t9]);
        t5 = B.JSInt_methods._shrOtherPositive$1(t9, 16);
        t6 = t20 >>> 24 & 255;
        if (!(t6 < t3))
          return A.ioore(t1, t6);
        t6 = A._asInt(t1[t6]);
        r1 = t12 ^ (t8 | (t13 & t7) << 8) ^ (t5 | (t9 & t11) << 16) ^ (B.JSInt_methods._shrOtherPositive$1(t6, 8) | (t6 & t14) << 24) ^ t15[1];
        t6 = t20 & 255;
        if (!(t6 < t3))
          return A.ioore(t1, t6);
        t6 = t1[t6];
        t9 = t10 >>> 8 & 255;
        if (!(t9 < t3))
          return A.ioore(t1, t9);
        t9 = A._asInt(t1[t9]);
        t5 = B.JSInt_methods._shrOtherPositive$1(t9, 24);
        if (typeof t6 !== "number")
          return t6.$xor();
        t13 = t00 >>> 16 & 255;
        if (!(t13 < t3))
          return A.ioore(t1, t13);
        t13 = A._asInt(t1[t13]);
        t8 = B.JSInt_methods._shrOtherPositive$1(t13, 16);
        t12 = r3 >>> 24 & 255;
        if (!(t12 < t3))
          return A.ioore(t1, t12);
        t12 = A._asInt(t1[t12]);
        r2 = t6 ^ (t5 | (t9 & t7) << 8) ^ (t8 | (t13 & t11) << 16) ^ (B.JSInt_methods._shrOtherPositive$1(t12, 8) | (t12 & t14) << 24) ^ t15[2];
        t12 = r3 & 255;
        if (!(t12 < t3))
          return A.ioore(t1, t12);
        t12 = t1[t12];
        t20 = t20 >>> 8 & 255;
        if (!(t20 < t3))
          return A.ioore(t1, t20);
        t20 = A._asInt(t1[t20]);
        t13 = B.JSInt_methods._shrOtherPositive$1(t20, 24);
        if (typeof t12 !== "number")
          return t12.$xor();
        t10 = t10 >>> 16 & 255;
        if (!(t10 < t3))
          return A.ioore(t1, t10);
        t10 = A._asInt(t1[t10]);
        t8 = B.JSInt_methods._shrOtherPositive$1(t10, 16);
        t00 = t00 >>> 24 & 255;
        if (!(t00 < t3))
          return A.ioore(t1, t00);
        t00 = A._asInt(t1[t00]);
        --r;
        r3 = t12 ^ (t13 | (t20 & t7) << 8) ^ (t8 | (t10 & t11) << 16) ^ (B.JSInt_methods._shrOtherPositive$1(t00, 8) | (t00 & t14) << 24) ^ t15[3];
        t15 = r0 & 255;
        if (!(t15 < t3))
          return A.ioore(t1, t15);
        t15 = t1[t15];
        t00 = r3 >>> 8 & 255;
        if (!(t00 < t3))
          return A.ioore(t1, t00);
        t00 = A._asInt(t1[t00]);
        t10 = B.JSInt_methods._shrOtherPositive$1(t00, 24);
        if (typeof t15 !== "number")
          return t15.$xor();
        t8 = r2 >>> 16 & 255;
        if (!(t8 < t3))
          return A.ioore(t1, t8);
        t8 = A._asInt(t1[t8]);
        t20 = B.JSInt_methods._shrOtherPositive$1(t8, 16);
        t13 = r1 >>> 24 & 255;
        if (!(t13 < t3))
          return A.ioore(t1, t13);
        t13 = A._asInt(t1[t13]);
        t12 = B.JSInt_methods._shrOtherPositive$1(t13, 8);
        if (!(r < t2))
          return A.ioore(KW, r);
        t9 = KW[r];
        t00 = t15 ^ (t10 | (t00 & t7) << 8) ^ (t20 | (t8 & t11) << 16) ^ (t12 | (t13 & t14) << 24) ^ t9[0];
        t13 = r1 & 255;
        if (!(t13 < t3))
          return A.ioore(t1, t13);
        t13 = t1[t13];
        t12 = r0 >>> 8 & 255;
        if (!(t12 < t3))
          return A.ioore(t1, t12);
        t12 = A._asInt(t1[t12]);
        t8 = B.JSInt_methods._shrOtherPositive$1(t12, 24);
        if (typeof t13 !== "number")
          return t13.$xor();
        t20 = r3 >>> 16 & 255;
        if (!(t20 < t3))
          return A.ioore(t1, t20);
        t20 = A._asInt(t1[t20]);
        t10 = B.JSInt_methods._shrOtherPositive$1(t20, 16);
        t15 = r2 >>> 24 & 255;
        if (!(t15 < t3))
          return A.ioore(t1, t15);
        t15 = A._asInt(t1[t15]);
        t10 = t13 ^ (t8 | (t12 & t7) << 8) ^ (t10 | (t20 & t11) << 16) ^ (B.JSInt_methods._shrOtherPositive$1(t15, 8) | (t15 & t14) << 24) ^ t9[1];
        t15 = r2 & 255;
        if (!(t15 < t3))
          return A.ioore(t1, t15);
        t15 = t1[t15];
        t20 = r1 >>> 8 & 255;
        if (!(t20 < t3))
          return A.ioore(t1, t20);
        t20 = A._asInt(t1[t20]);
        t12 = B.JSInt_methods._shrOtherPositive$1(t20, 24);
        if (typeof t15 !== "number")
          return t15.$xor();
        t8 = r0 >>> 16 & 255;
        if (!(t8 < t3))
          return A.ioore(t1, t8);
        t8 = A._asInt(t1[t8]);
        t13 = B.JSInt_methods._shrOtherPositive$1(t8, 16);
        t5 = r3 >>> 24 & 255;
        if (!(t5 < t3))
          return A.ioore(t1, t5);
        t5 = A._asInt(t1[t5]);
        t20 = t15 ^ (t12 | (t20 & t7) << 8) ^ (t13 | (t8 & t11) << 16) ^ (B.JSInt_methods._shrOtherPositive$1(t5, 8) | (t5 & t14) << 24) ^ t9[2];
        t5 = r3 & 255;
        if (!(t5 < t3))
          return A.ioore(t1, t5);
        t5 = t1[t5];
        t8 = r2 >>> 8 & 255;
        if (!(t8 < t3))
          return A.ioore(t1, t8);
        t8 = A._asInt(t1[t8]);
        t13 = B.JSInt_methods._shrOtherPositive$1(t8, 24);
        if (typeof t5 !== "number")
          return t5.$xor();
        t12 = r1 >>> 16 & 255;
        if (!(t12 < t3))
          return A.ioore(t1, t12);
        t12 = A._asInt(t1[t12]);
        t15 = B.JSInt_methods._shrOtherPositive$1(t12, 16);
        t6 = r0 >>> 24 & 255;
        if (!(t6 < t3))
          return A.ioore(t1, t6);
        t6 = A._asInt(t1[t6]);
        --r;
        r3 = t5 ^ (t13 | (t8 & t7) << 8) ^ (t15 | (t12 & t11) << 16) ^ (B.JSInt_methods._shrOtherPositive$1(t6, 8) | (t6 & t14) << 24) ^ t9[3];
      }
      t2 = t00 & 255;
      if (!(t2 < t3))
        return A.ioore(t1, t2);
      t2 = t1[t2];
      t4 = r3 >>> 8 & 255;
      if (!(t4 < t3))
        return A.ioore(t1, t4);
      t4 = A.rotr32(A._asInt(t1[t4]), 24);
      if (typeof t2 !== "number")
        return t2.$xor();
      t3 = t20 >>> 16 & 255;
      if (!(t3 < t1.length))
        return A.ioore(t1, t3);
      t3 = A.rotr32(A._asInt(t1[t3]), 16);
      t5 = t10 >>> 24 & 255;
      if (!(t5 < t1.length))
        return A.ioore(t1, t5);
      t5 = A.rotr32(A._asInt(t1[t5]), 8);
      if (!(r >= 0 && r < KW.length))
        return A.ioore(KW, r);
      r0 = t2 ^ t4 ^ t3 ^ t5 ^ KW[r][0];
      t5 = t10 & 255;
      t3 = t1.length;
      if (!(t5 < t3))
        return A.ioore(t1, t5);
      t5 = t1[t5];
      t4 = t00 >>> 8 & 255;
      if (!(t4 < t3))
        return A.ioore(t1, t4);
      t4 = A.rotr32(A._asInt(t1[t4]), 24);
      if (typeof t5 !== "number")
        return t5.$xor();
      t3 = r3 >>> 16 & 255;
      if (!(t3 < t1.length))
        return A.ioore(t1, t3);
      t3 = A.rotr32(A._asInt(t1[t3]), 16);
      t2 = t20 >>> 24 & 255;
      if (!(t2 < t1.length))
        return A.ioore(t1, t2);
      t2 = A.rotr32(A._asInt(t1[t2]), 8);
      if (!(r < KW.length))
        return A.ioore(KW, r);
      r1 = t5 ^ t4 ^ t3 ^ t2 ^ KW[r][1];
      t2 = t20 & 255;
      t3 = t1.length;
      if (!(t2 < t3))
        return A.ioore(t1, t2);
      t2 = t1[t2];
      t4 = t10 >>> 8 & 255;
      if (!(t4 < t3))
        return A.ioore(t1, t4);
      t4 = A.rotr32(A._asInt(t1[t4]), 24);
      if (typeof t2 !== "number")
        return t2.$xor();
      t3 = t00 >>> 16 & 255;
      if (!(t3 < t1.length))
        return A.ioore(t1, t3);
      t3 = A.rotr32(A._asInt(t1[t3]), 16);
      t5 = r3 >>> 24 & 255;
      if (!(t5 < t1.length))
        return A.ioore(t1, t5);
      t5 = A.rotr32(A._asInt(t1[t5]), 8);
      if (!(r < KW.length))
        return A.ioore(KW, r);
      r2 = t2 ^ t4 ^ t3 ^ t5 ^ KW[r][2];
      t5 = r3 & 255;
      t3 = t1.length;
      if (!(t5 < t3))
        return A.ioore(t1, t5);
      t5 = t1[t5];
      t20 = t20 >>> 8 & 255;
      if (!(t20 < t3))
        return A.ioore(t1, t20);
      t20 = A.rotr32(A._asInt(t1[t20]), 24);
      if (typeof t5 !== "number")
        return t5.$xor();
      t10 = t10 >>> 16 & 255;
      if (!(t10 < t1.length))
        return A.ioore(t1, t10);
      t10 = A.rotr32(A._asInt(t1[t10]), 16);
      t00 = t00 >>> 24 & 255;
      if (!(t00 < t1.length))
        return A.ioore(t1, t00);
      t00 = A.rotr32(A._asInt(t1[t00]), 8);
      t1 = KW.length;
      if (!(r < t1))
        return A.ioore(KW, r);
      r3 = t5 ^ t20 ^ t10 ^ t00 ^ KW[r][3];
      t00 = _this._Si;
      t10 = t00[r0 & 255];
      t20 = _this._s;
      t5 = r3 >>> 8 & 255;
      t3 = t20.length;
      if (!(t5 < t3))
        return A.ioore(t20, t5);
      t5 = t20[t5];
      if (typeof t5 !== "number")
        return t5.$and();
      t4 = r2 >>> 16 & 255;
      if (!(t4 < t3))
        return A.ioore(t20, t4);
      t4 = t20[t4];
      if (typeof t4 !== "number")
        return t4.$and();
      t2 = t00[r1 >>> 24 & 255];
      if (0 >= t1)
        return A.ioore(KW, 0);
      t1 = KW[0];
      t6 = t1[0];
      t7 = r1 & 255;
      if (!(t7 < t3))
        return A.ioore(t20, t7);
      t7 = t20[t7];
      if (typeof t7 !== "number")
        return t7.$and();
      t8 = r0 >>> 8 & 255;
      if (!(t8 < t3))
        return A.ioore(t20, t8);
      t8 = t20[t8];
      if (typeof t8 !== "number")
        return t8.$and();
      t9 = t00[r3 >>> 16 & 255];
      t11 = r2 >>> 24 & 255;
      if (!(t11 < t3))
        return A.ioore(t20, t11);
      t11 = t20[t11];
      if (typeof t11 !== "number")
        return t11.$shl();
      t12 = t1[1];
      t13 = r2 & 255;
      if (!(t13 < t3))
        return A.ioore(t20, t13);
      t13 = t20[t13];
      if (typeof t13 !== "number")
        return t13.$and();
      t14 = t00[r1 >>> 8 & 255];
      t15 = t00[r0 >>> 16 & 255];
      t16 = r3 >>> 24 & 255;
      if (!(t16 < t3))
        return A.ioore(t20, t16);
      t16 = t20[t16];
      if (typeof t16 !== "number")
        return t16.$shl();
      t17 = t1[2];
      t00 = t00[r3 & 255];
      t18 = r2 >>> 8 & 255;
      if (!(t18 < t3))
        return A.ioore(t20, t18);
      t18 = t20[t18];
      if (typeof t18 !== "number")
        return t18.$and();
      t19 = r1 >>> 16 & 255;
      if (!(t19 < t3))
        return A.ioore(t20, t19);
      t19 = t20[t19];
      if (typeof t19 !== "number")
        return t19.$and();
      t21 = r0 >>> 24 & 255;
      if (!(t21 < t3))
        return A.ioore(t20, t21);
      t21 = t20[t21];
      if (typeof t21 !== "number")
        return t21.$shl();
      t1 = t1[3];
      A.pack32((t10 & 255 ^ (t5 & 255) << 8 ^ (t4 & 255) << 16 ^ t2 << 24 ^ t6) >>> 0, out, outOff, B.C_Endian);
      A.pack32((t7 & 255 ^ (t8 & 255) << 8 ^ (t9 & 255) << 16 ^ t11 << 24 ^ t12) >>> 0, out, outOff + 4, B.C_Endian);
      A.pack32((t13 & 255 ^ (t14 & 255) << 8 ^ (t15 & 255) << 16 ^ t16 << 24 ^ t17) >>> 0, out, outOff + 8, B.C_Endian);
      A.pack32((t00 & 255 ^ (t18 & 255) << 8 ^ (t19 & 255) << 16 ^ t21 << 24 ^ t1) >>> 0, out, outOff + 12, B.C_Endian);
    },
    set$_WorkingKey(_WorkingKey) {
      this._WorkingKey = type$.nullable_List_List_int._as(_WorkingKey);
    },
    set$_s(_s) {
      this._s = type$.List_int._as(_s);
    }
  };
  A.Blake2bDigest.prototype = {
    get$digestSize() {
      return this._digestLength;
    },
    init$0() {
      var t1, t2, t3, _this = this, _null = null;
      if (_this._chainValue == null) {
        t1 = A.Register64List$(8);
        _this._chainValue = t1;
        t1 = t1._list;
        if (0 >= t1.length)
          return A.ioore(t1, 0);
        t1 = t1[0];
        t2 = $.$get$_blake2bIV()._list;
        if (0 >= t2.length)
          return A.ioore(t2, 0);
        t1.$set$1(t2[0]);
        t1.xor$1(A.Register64$((_this._digestLength | _this._keyLength << 8 | 16842752) >>> 0, _null));
        t1 = _this._chainValue._list;
        if (1 >= t1.length)
          return A.ioore(t1, 1);
        t1 = t1[1];
        if (1 >= t2.length)
          return A.ioore(t2, 1);
        t1.$set$1(t2[1]);
        t1 = _this._chainValue._list;
        if (2 >= t1.length)
          return A.ioore(t1, 2);
        t1 = t1[2];
        if (2 >= t2.length)
          return A.ioore(t2, 2);
        t1.$set$1(t2[2]);
        t1 = _this._chainValue._list;
        if (3 >= t1.length)
          return A.ioore(t1, 3);
        t1 = t1[3];
        if (3 >= t2.length)
          return A.ioore(t2, 3);
        t1.$set$1(t2[3]);
        t1 = _this._chainValue._list;
        if (4 >= t1.length)
          return A.ioore(t1, 4);
        t1 = t1[4];
        if (4 >= t2.length)
          return A.ioore(t2, 4);
        t1.$set$1(t2[4]);
        t1 = _this._chainValue._list;
        if (5 >= t1.length)
          return A.ioore(t1, 5);
        t1 = t1[5];
        if (5 >= t2.length)
          return A.ioore(t2, 5);
        t1.$set$1(t2[5]);
        if (_this._salt != null) {
          t1 = _this._chainValue._list;
          if (4 >= t1.length)
            return A.ioore(t1, 4);
          t1 = t1[4];
          t3 = A.Register64$(0, _null);
          t3.unpack$3(_this._salt, 0, B.C_Endian);
          t1.xor$1(t3);
          t3 = _this._chainValue._list;
          if (5 >= t3.length)
            return A.ioore(t3, 5);
          t3 = t3[5];
          t1 = A.Register64$(0, _null);
          t1.unpack$3(_this._salt, 8, B.C_Endian);
          t3.xor$1(t1);
        }
        t1 = _this._chainValue._list;
        if (6 >= t1.length)
          return A.ioore(t1, 6);
        t1 = t1[6];
        if (6 >= t2.length)
          return A.ioore(t2, 6);
        t1.$set$1(t2[6]);
        t1 = _this._chainValue._list;
        if (7 >= t1.length)
          return A.ioore(t1, 7);
        t1 = t1[7];
        if (7 >= t2.length)
          return A.ioore(t2, 7);
        t1.$set$1(t2[7]);
        if (_this._personalization != null) {
          t1 = _this._chainValue._list;
          if (6 >= t1.length)
            return A.ioore(t1, 6);
          t1 = t1[6];
          t2 = A.Register64$(0, _null);
          t2.unpack$3(_this._personalization, 0, B.C_Endian);
          t1.xor$1(t2);
          t2 = _this._chainValue._list;
          if (7 >= t2.length)
            return A.ioore(t2, 7);
          t2 = t2[7];
          t1 = A.Register64$(0, _null);
          t1.unpack$3(_this._personalization, 8, B.C_Endian);
          t2.xor$1(t1);
        }
      }
    },
    update$3(inp, inpOff, len) {
      var t1, remainingLength, t2, blockWiseLastPos, msgPos, t3, _this = this;
      if (len === 0)
        return;
      t1 = _this._bufferPos;
      if (t1 !== 0) {
        remainingLength = 128 - t1;
        t2 = _this._buffer;
        if (remainingLength < len) {
          t2.toString;
          B.NativeUint8List_methods.setRange$4(t2, t1, t1 + remainingLength, inp, inpOff);
          t1 = _this._t0;
          t1.sum$1(128);
          if (A._lateReadCheck(t1.__Register64__lo32, "_lo32") === 0 && A._lateReadCheck(t1.__Register64__hi32, "_hi32") === 0)
            _this._t1.sum$1(1);
          _this._compress$2(_this._buffer, 0);
          _this._bufferPos = 0;
          t1 = _this._buffer;
          t1.toString;
          B.NativeUint8List_methods.fillRange$3(t1, 0, 128, 0);
        } else {
          t2.toString;
          B.NativeUint8List_methods.setRange$4(t2, t1, t1 + len, inp, inpOff);
          _this._bufferPos += len;
          return;
        }
      } else
        remainingLength = 0;
      t1 = inpOff + len;
      blockWiseLastPos = t1 - 128;
      for (msgPos = inpOff + remainingLength, t2 = _this._t0, t3 = _this._t1; msgPos < blockWiseLastPos; msgPos += 128) {
        t2.sum$1(128);
        if (A._lateReadCheck(t2.__Register64__lo32, "_lo32") === 0 && A._lateReadCheck(t2.__Register64__hi32, "_hi32") === 0)
          t3.sum$1(1);
        _this._compress$2(inp, msgPos);
      }
      t2 = _this._buffer;
      t2.toString;
      t1 -= msgPos;
      B.NativeUint8List_methods.setRange$4(t2, 0, t1, inp, msgPos);
      _this._bufferPos += t1;
    },
    doFinal$2(out, outOff) {
      var t2, t3, packedValue, packedValueData, i, t4, t5, start, _this = this, _4294967295 = 4294967295, _s5_ = "_lo32", _s5_0 = "_hi32",
        t1 = _this._f0;
      t1.$set$2(_4294967295, _4294967295);
      t2 = _this._t0;
      t2.sum$1(_this._bufferPos);
      if (_this._bufferPos > 0 && A._lateReadCheck(t2.__Register64__lo32, _s5_) === 0 && A._lateReadCheck(t2.__Register64__hi32, _s5_0) === 0)
        _this._t1.sum$1(1);
      _this._compress$2(_this._buffer, 0);
      t3 = _this._buffer;
      t3.toString;
      B.NativeUint8List_methods.fillRange$3(t3, 0, 128, 0);
      t3 = _this._internalState;
      t3.fillRange$3(0, 0, t3._list.length, 0);
      packedValue = new Uint8Array(8);
      packedValueData = A.NativeByteData_NativeByteData$view(packedValue.buffer, 0, null);
      i = 0;
      while (true) {
        t3 = _this._chainValue;
        t4 = t3._list;
        t5 = t4.length;
        if (!(i < t5 && i * 8 < _this._digestLength))
          break;
        if (!(i < t5))
          return A.ioore(t4, i);
        t3 = t4[i];
        switch (B.C_Endian) {
          case B.C_Endian0:
            t4 = A._lateReadCheck(t3.__Register64__hi32, _s5_0);
            B.NativeByteData_methods._setUint32$3(packedValueData, 0, t4, true);
            t3 = A._lateReadCheck(t3.__Register64__lo32, _s5_);
            B.NativeByteData_methods._setUint32$3(packedValueData, 4, t3, true);
            break;
          case B.C_Endian:
            t4 = A._lateReadCheck(t3.__Register64__hi32, _s5_0);
            B.NativeByteData_methods._setUint32$3(packedValueData, 4, t4, true);
            t3 = A._lateReadCheck(t3.__Register64__lo32, _s5_);
            B.NativeByteData_methods._setUint32$3(packedValueData, 0, t3, true);
            break;
          default:
            A.throwExpression(A.UnsupportedError$("Invalid endianness: " + B.C_Endian.toString$0(0)));
        }
        t3 = i * 8;
        start = outOff + t3;
        t4 = _this._digestLength;
        if (t3 < t4 - 8)
          B.NativeUint8List_methods.setRange$3(out, start, start + 8, packedValue);
        else
          B.NativeUint8List_methods.setRange$3(out, start, start + t4 - t3, packedValue);
        ++i;
      }
      t3.fillRange$3(0, 0, t5, 0);
      _this._bufferPos = 0;
      t1.$set$1(0);
      t2.$set$1(0);
      _this._t1.$set$1(0);
      _this._chainValue = null;
      t1 = _this._buffer;
      t1.toString;
      B.NativeUint8List_methods.fillRange$3(t1, 0, 128, 0);
      t1 = _this._key;
      if (t1 != null) {
        t2 = _this._buffer;
        t2.toString;
        B.NativeUint8List_methods.setAll$2(t2, 0, t1);
        _this._bufferPos = 128;
      }
      _this.init$0();
      return _this._digestLength;
    },
    _compress$2(message, messagePos) {
      var t3, j, round, t4, t5, offset, _this = this, _s5_ = "_hi32", _s5_0 = "_lo32",
        t1 = _this._internalState,
        t2 = _this._chainValue;
      t1.setRange$3(0, 0, t2._list.length, t2);
      t2 = _this._chainValue._list.length;
      t3 = $.$get$_blake2bIV();
      t1.setRange$3(0, t2, t2 + 4, t3);
      t1 = t1._list;
      if (12 >= t1.length)
        return A.ioore(t1, 12);
      t2 = t1[12];
      t2.$set$1(_this._t0);
      t3 = t3._list;
      if (4 >= t3.length)
        return A.ioore(t3, 4);
      t2.xor$1(t3[4]);
      if (13 >= t1.length)
        return A.ioore(t1, 13);
      t2 = t1[13];
      t2.$set$1(_this._t1);
      if (5 >= t3.length)
        return A.ioore(t3, 5);
      t2.xor$1(t3[5]);
      if (14 >= t1.length)
        return A.ioore(t1, 14);
      t2 = t1[14];
      t2.$set$1(_this._f0);
      if (6 >= t3.length)
        return A.ioore(t3, 6);
      t2.xor$1(t3[6]);
      if (15 >= t1.length)
        return A.ioore(t1, 15);
      t2 = t1[15];
      if (7 >= t3.length)
        return A.ioore(t3, 7);
      t2.$set$1(t3[7]);
      for (t2 = _this._m._list, j = 0; j < 16; ++j) {
        if (!(j < t2.length))
          return A.ioore(t2, j);
        t2[j].unpack$3(message, messagePos + j * 8, B.C_Endian);
      }
      for (round = 0; round < 12; ++round) {
        t3 = $._blake2bSigma[round];
        t4 = t3[0];
        t5 = t2.length;
        if (!(t4 < t5))
          return A.ioore(t2, t4);
        t4 = t2[t4];
        t3 = t3[1];
        if (!(t3 < t5))
          return A.ioore(t2, t3);
        _this.G$6(t4, t2[t3], 0, 4, 8, 12);
        t3 = $._blake2bSigma[round];
        t4 = t3[2];
        t5 = t2.length;
        if (!(t4 < t5))
          return A.ioore(t2, t4);
        t4 = t2[t4];
        t3 = t3[3];
        if (!(t3 < t5))
          return A.ioore(t2, t3);
        _this.G$6(t4, t2[t3], 1, 5, 9, 13);
        t3 = $._blake2bSigma[round];
        t4 = t3[4];
        t5 = t2.length;
        if (!(t4 < t5))
          return A.ioore(t2, t4);
        t4 = t2[t4];
        t3 = t3[5];
        if (!(t3 < t5))
          return A.ioore(t2, t3);
        _this.G$6(t4, t2[t3], 2, 6, 10, 14);
        t3 = $._blake2bSigma[round];
        t4 = t3[6];
        t5 = t2.length;
        if (!(t4 < t5))
          return A.ioore(t2, t4);
        t4 = t2[t4];
        t3 = t3[7];
        if (!(t3 < t5))
          return A.ioore(t2, t3);
        _this.G$6(t4, t2[t3], 3, 7, 11, 15);
        t3 = $._blake2bSigma[round];
        t4 = t3[8];
        t5 = t2.length;
        if (!(t4 < t5))
          return A.ioore(t2, t4);
        t4 = t2[t4];
        t3 = t3[9];
        if (!(t3 < t5))
          return A.ioore(t2, t3);
        _this.G$6(t4, t2[t3], 0, 5, 10, 15);
        t3 = $._blake2bSigma[round];
        t4 = t3[10];
        t5 = t2.length;
        if (!(t4 < t5))
          return A.ioore(t2, t4);
        t4 = t2[t4];
        t3 = t3[11];
        if (!(t3 < t5))
          return A.ioore(t2, t3);
        _this.G$6(t4, t2[t3], 1, 6, 11, 12);
        t3 = $._blake2bSigma[round];
        t4 = t3[12];
        t5 = t2.length;
        if (!(t4 < t5))
          return A.ioore(t2, t4);
        t4 = t2[t4];
        t3 = t3[13];
        if (!(t3 < t5))
          return A.ioore(t2, t3);
        _this.G$6(t4, t2[t3], 2, 7, 8, 13);
        t3 = $._blake2bSigma[round];
        t4 = t3[14];
        t5 = t2.length;
        if (!(t4 < t5))
          return A.ioore(t2, t4);
        t4 = t2[t4];
        t3 = t3[15];
        if (!(t3 < t5))
          return A.ioore(t2, t3);
        _this.G$6(t4, t2[t3], 3, 4, 9, 14);
      }
      for (offset = 0; t2 = _this._chainValue._list, offset < t2.length; ++offset) {
        t2 = t2[offset];
        if (!(offset < t1.length))
          return A.ioore(t1, offset);
        t3 = t1[offset];
        t2.__Register64__hi32 = (A._lateReadCheck(t2.__Register64__hi32, _s5_) ^ A._lateReadCheck(t3.__Register64__hi32, _s5_)) >>> 0;
        t2.__Register64__lo32 = (A._lateReadCheck(t2.__Register64__lo32, _s5_0) ^ A._lateReadCheck(t3.__Register64__lo32, _s5_0)) >>> 0;
        t3 = offset + 8;
        if (!(t3 < t1.length))
          return A.ioore(t1, t3);
        t3 = t1[t3];
        t2.__Register64__hi32 = (A._lateReadCheck(t2.__Register64__hi32, _s5_) ^ A._lateReadCheck(t3.__Register64__hi32, _s5_)) >>> 0;
        t2.__Register64__lo32 = (A._lateReadCheck(t2.__Register64__lo32, _s5_0) ^ A._lateReadCheck(t3.__Register64__lo32, _s5_0)) >>> 0;
      }
    },
    G$6(m1, m2, posA, posB, posC, posD) {
      var t3,
        r = A.Register64$(0, null),
        t1 = this._internalState._list,
        t2 = t1.length;
      if (!(posA < t2))
        return A.ioore(t1, posA);
      t3 = t1[posA];
      if (!(posB < t2))
        return A.ioore(t1, posB);
      r.$set$1(t1[posB]);
      r.sumReg$1(m1);
      t3.sumReg$1(r);
      t3 = t1.length;
      if (!(posD < t3))
        return A.ioore(t1, posD);
      t2 = t1[posD];
      if (!(posA < t3))
        return A.ioore(t1, posA);
      t2.xor$1(t1[posA]);
      t2.rotr$1(32);
      t2 = t1.length;
      if (!(posC < t2))
        return A.ioore(t1, posC);
      t3 = t1[posC];
      if (!(posD < t2))
        return A.ioore(t1, posD);
      t3.sumReg$1(t1[posD]);
      t3 = t1.length;
      if (!(posB < t3))
        return A.ioore(t1, posB);
      t2 = t1[posB];
      if (!(posC < t3))
        return A.ioore(t1, posC);
      t2.xor$1(t1[posC]);
      t2.rotr$1(24);
      t2 = t1.length;
      if (!(posA < t2))
        return A.ioore(t1, posA);
      t3 = t1[posA];
      if (!(posB < t2))
        return A.ioore(t1, posB);
      r.$set$1(t1[posB]);
      r.sumReg$1(m2);
      t3.sumReg$1(r);
      t3 = t1.length;
      if (!(posD < t3))
        return A.ioore(t1, posD);
      t2 = t1[posD];
      if (!(posA < t3))
        return A.ioore(t1, posA);
      t2.xor$1(t1[posA]);
      t2.rotr$1(16);
      t2 = t1.length;
      if (!(posC < t2))
        return A.ioore(t1, posC);
      t3 = t1[posC];
      if (!(posD < t2))
        return A.ioore(t1, posD);
      t3.sumReg$1(t1[posD]);
      t3 = t1.length;
      if (!(posB < t3))
        return A.ioore(t1, posB);
      t2 = t1[posB];
      if (!(posC < t3))
        return A.ioore(t1, posC);
      t2.xor$1(t1[posC]);
      t2.rotr$1(63);
    }
  };
  A.SHA256Digest.prototype = {
    processBlock$0() {
      var t1, t2, t, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, a, b, c, d, e, f, g, h, a0, i;
      for (t1 = this.buffer, t2 = t1.length, t = 16; t < 64; ++t) {
        t3 = t - 2;
        if (!(t3 < t2))
          return A.ioore(t1, t3);
        t3 = A._asInt(t1[t3]);
        t4 = B.JSInt_methods._shrOtherPositive$1(t3, 17);
        t5 = $._MASK32_HI_BITS[15];
        t6 = B.JSInt_methods._shrOtherPositive$1(t3, 19);
        t7 = $._MASK32_HI_BITS[13];
        t8 = B.JSInt_methods._shrOtherPositive$1(t3, 10);
        t9 = t - 7;
        if (!(t9 < t2))
          return A.ioore(t1, t9);
        t9 = t1[t9];
        if (typeof t9 !== "number")
          return A.iae(t9);
        t10 = t - 15;
        if (!(t10 < t2))
          return A.ioore(t1, t10);
        t10 = A._asInt(t1[t10]);
        t11 = B.JSInt_methods._shrOtherPositive$1(t10, 7);
        t12 = $._MASK32_HI_BITS[25];
        t13 = B.JSInt_methods._shrOtherPositive$1(t10, 18);
        t14 = $._MASK32_HI_BITS[14];
        t15 = B.JSInt_methods._shrOtherPositive$1(t10, 3);
        t16 = t - 16;
        if (!(t16 < t2))
          return A.ioore(t1, t16);
        t16 = t1[t16];
        if (typeof t16 !== "number")
          return A.iae(t16);
        B.JSArray_methods.$indexSet(t1, t, (((t4 | (t3 & t5) << 15) ^ (t6 | (t3 & t7) << 13) ^ t8) >>> 0) + t9 + (((t11 | (t10 & t12) << 25) ^ (t13 | (t10 & t14) << 14) ^ t15) >>> 0) + t16 >>> 0);
      }
      t3 = this.state;
      t4 = t3.length;
      if (0 >= t4)
        return A.ioore(t3, 0);
      a = t3[0];
      if (1 >= t4)
        return A.ioore(t3, 1);
      b = t3[1];
      if (2 >= t4)
        return A.ioore(t3, 2);
      c = t3[2];
      if (3 >= t4)
        return A.ioore(t3, 3);
      d = t3[3];
      if (4 >= t4)
        return A.ioore(t3, 4);
      e = t3[4];
      if (5 >= t4)
        return A.ioore(t3, 5);
      f = t3[5];
      if (6 >= t4)
        return A.ioore(t3, 6);
      g = t3[6];
      if (7 >= t4)
        return A.ioore(t3, 7);
      h = t3[7];
      for (a0 = a, t = 0, i = 0; i < 8; ++i) {
        t4 = B.JSInt_methods._shrOtherPositive$1(e, 6);
        t5 = $._MASK32_HI_BITS[26];
        t6 = B.JSInt_methods._shrOtherPositive$1(e, 11);
        t7 = $._MASK32_HI_BITS[21];
        t8 = B.JSInt_methods._shrOtherPositive$1(e, 25);
        t9 = $._MASK32_HI_BITS[7];
        if (!(t < 64))
          return A.ioore($.SHA256Digest__k, t);
        t10 = $.SHA256Digest__k[t];
        if (!(t < t2))
          return A.ioore(t1, t);
        t11 = t1[t];
        if (typeof t11 !== "number")
          return A.iae(t11);
        h = h + (((t4 | (e & t5) << 26) ^ (t6 | (e & t7) << 21) ^ (t8 | (e & t9) << 7)) >>> 0) + ((e & f ^ ~e & g) >>> 0) + t10 + t11 >>> 0;
        d = d + h >>> 0;
        t11 = B.JSInt_methods._shrOtherPositive$1(a0, 2);
        t10 = $._MASK32_HI_BITS[30];
        t8 = B.JSInt_methods._shrOtherPositive$1(a0, 13);
        t6 = $._MASK32_HI_BITS[19];
        t4 = B.JSInt_methods._shrOtherPositive$1(a0, 22);
        t12 = $._MASK32_HI_BITS[10];
        t13 = a0 & b;
        h = h + (((t11 | (a0 & t10) << 30) ^ (t8 | (a0 & t6) << 19) ^ (t4 | (a0 & t12) << 10)) >>> 0) + ((t13 ^ a0 & c ^ b & c) >>> 0) >>> 0;
        ++t;
        if (!(t < 64))
          return A.ioore($.SHA256Digest__k, t);
        t4 = $.SHA256Digest__k[t];
        if (!(t < t2))
          return A.ioore(t1, t);
        t8 = t1[t];
        if (typeof t8 !== "number")
          return A.iae(t8);
        g = g + (((d >>> 6 | (d & t5) << 26) ^ (d >>> 11 | (d & t7) << 21) ^ (d >>> 25 | (d & t9) << 7)) >>> 0) + ((d & e ^ ~d & f) >>> 0) + t4 + t8 >>> 0;
        c = c + g >>> 0;
        t8 = h & a0;
        g = g + (((h >>> 2 | (h & t10) << 30) ^ (h >>> 13 | (h & t6) << 19) ^ (h >>> 22 | (h & t12) << 10)) >>> 0) + ((t8 ^ h & b ^ t13) >>> 0) >>> 0;
        ++t;
        if (!(t < 64))
          return A.ioore($.SHA256Digest__k, t);
        t13 = $.SHA256Digest__k[t];
        if (!(t < t2))
          return A.ioore(t1, t);
        t4 = t1[t];
        if (typeof t4 !== "number")
          return A.iae(t4);
        f = f + (((c >>> 6 | (c & t5) << 26) ^ (c >>> 11 | (c & t7) << 21) ^ (c >>> 25 | (c & t9) << 7)) >>> 0) + ((c & d ^ ~c & e) >>> 0) + t13 + t4 >>> 0;
        b = b + f >>> 0;
        t4 = g & h;
        f = f + (((g >>> 2 | (g & t10) << 30) ^ (g >>> 13 | (g & t6) << 19) ^ (g >>> 22 | (g & t12) << 10)) >>> 0) + ((t4 ^ g & a0 ^ t8) >>> 0) >>> 0;
        ++t;
        if (!(t < 64))
          return A.ioore($.SHA256Digest__k, t);
        t8 = $.SHA256Digest__k[t];
        if (!(t < t2))
          return A.ioore(t1, t);
        t13 = t1[t];
        if (typeof t13 !== "number")
          return A.iae(t13);
        e = e + (((b >>> 6 | (b & t5) << 26) ^ (b >>> 11 | (b & t7) << 21) ^ (b >>> 25 | (b & t9) << 7)) >>> 0) + ((b & c ^ ~b & d) >>> 0) + t8 + t13 >>> 0;
        a0 = a0 + e >>> 0;
        t13 = f & g;
        e = e + (((f >>> 2 | (f & t10) << 30) ^ (f >>> 13 | (f & t6) << 19) ^ (f >>> 22 | (f & t12) << 10)) >>> 0) + ((t13 ^ f & h ^ t4) >>> 0) >>> 0;
        ++t;
        if (!(t < 64))
          return A.ioore($.SHA256Digest__k, t);
        t4 = $.SHA256Digest__k[t];
        if (!(t < t2))
          return A.ioore(t1, t);
        t8 = t1[t];
        if (typeof t8 !== "number")
          return A.iae(t8);
        d = d + (((a0 >>> 6 | (a0 & t5) << 26) ^ (a0 >>> 11 | (a0 & t7) << 21) ^ (a0 >>> 25 | (a0 & t9) << 7)) >>> 0) + ((a0 & b ^ ~a0 & c) >>> 0) + t4 + t8 >>> 0;
        h = h + d >>> 0;
        t8 = e & f;
        d = d + (((e >>> 2 | (e & t10) << 30) ^ (e >>> 13 | (e & t6) << 19) ^ (e >>> 22 | (e & t12) << 10)) >>> 0) + ((t8 ^ e & g ^ t13) >>> 0) >>> 0;
        ++t;
        if (!(t < 64))
          return A.ioore($.SHA256Digest__k, t);
        t13 = $.SHA256Digest__k[t];
        if (!(t < t2))
          return A.ioore(t1, t);
        t4 = t1[t];
        if (typeof t4 !== "number")
          return A.iae(t4);
        c = c + (((h >>> 6 | (h & t5) << 26) ^ (h >>> 11 | (h & t7) << 21) ^ (h >>> 25 | (h & t9) << 7)) >>> 0) + ((h & a0 ^ ~h & b) >>> 0) + t13 + t4 >>> 0;
        g = g + c >>> 0;
        t4 = d & e;
        c = c + (((d >>> 2 | (d & t10) << 30) ^ (d >>> 13 | (d & t6) << 19) ^ (d >>> 22 | (d & t12) << 10)) >>> 0) + ((t4 ^ d & f ^ t8) >>> 0) >>> 0;
        ++t;
        if (!(t < 64))
          return A.ioore($.SHA256Digest__k, t);
        t8 = $.SHA256Digest__k[t];
        if (!(t < t2))
          return A.ioore(t1, t);
        t13 = t1[t];
        if (typeof t13 !== "number")
          return A.iae(t13);
        b = b + (((g >>> 6 | (g & t5) << 26) ^ (g >>> 11 | (g & t7) << 21) ^ (g >>> 25 | (g & t9) << 7)) >>> 0) + ((g & h ^ ~g & a0) >>> 0) + t8 + t13 >>> 0;
        f = f + b >>> 0;
        t13 = c & d;
        b = b + (((c >>> 2 | (c & t10) << 30) ^ (c >>> 13 | (c & t6) << 19) ^ (c >>> 22 | (c & t12) << 10)) >>> 0) + ((t13 ^ c & e ^ t4) >>> 0) >>> 0;
        ++t;
        if (!(t < 64))
          return A.ioore($.SHA256Digest__k, t);
        t4 = $.SHA256Digest__k[t];
        if (!(t < t2))
          return A.ioore(t1, t);
        t8 = t1[t];
        if (typeof t8 !== "number")
          return A.iae(t8);
        a0 = a0 + (((f >>> 6 | (f & t5) << 26) ^ (f >>> 11 | (f & t7) << 21) ^ (f >>> 25 | (f & t9) << 7)) >>> 0) + ((f & g ^ ~f & h) >>> 0) + t4 + t8 >>> 0;
        e = e + a0 >>> 0;
        a0 = a0 + (((b >>> 2 | (b & t10) << 30) ^ (b >>> 13 | (b & t6) << 19) ^ (b >>> 22 | (b & t12) << 10)) >>> 0) + ((b & c ^ b & d ^ t13) >>> 0) >>> 0;
        ++t;
      }
      B.JSArray_methods.$indexSet(t3, 0, a + a0 >>> 0);
      t1 = t3[1];
      if (typeof t1 !== "number")
        return t1.$add();
      B.JSArray_methods.$indexSet(t3, 1, t1 + b >>> 0);
      t1 = t3[2];
      if (typeof t1 !== "number")
        return t1.$add();
      B.JSArray_methods.$indexSet(t3, 2, t1 + c >>> 0);
      t1 = t3[3];
      if (typeof t1 !== "number")
        return t1.$add();
      B.JSArray_methods.$indexSet(t3, 3, t1 + d >>> 0);
      t1 = t3[4];
      if (typeof t1 !== "number")
        return t1.$add();
      B.JSArray_methods.$indexSet(t3, 4, t1 + e >>> 0);
      t1 = t3[5];
      if (typeof t1 !== "number")
        return t1.$add();
      B.JSArray_methods.$indexSet(t3, 5, t1 + f >>> 0);
      t1 = t3[6];
      if (typeof t1 !== "number")
        return t1.$add();
      B.JSArray_methods.$indexSet(t3, 6, t1 + g >>> 0);
      t1 = t3[7];
      if (typeof t1 !== "number")
        return t1.$add();
      B.JSArray_methods.$indexSet(t3, 7, t1 + h >>> 0);
    }
  };
  A.Pbkdf2Parameters.prototype = {};
  A.ScryptParameters.prototype = {$isCipherParameters: 1};
  A.PBKDF2KeyDerivator.prototype = {
    deriveKey$4(inp, inpOff, out, outOff) {
      var keyLength, t5, outPos, i, pos, _this = this,
        _s7_ = "_params",
        _s11_ = "_digestSize",
        _s12_ = "_blockLength",
        _s9_ = "_inputPad",
        _s10_ = "_outputBuf",
        dkLen = A._lateReadCheck(_this.__PBKDF2KeyDerivator__params, _s7_).desiredKeyLength,
        t1 = _this._mac,
        t2 = A._lateReadCheck(t1.__HMac__digestSize, _s11_),
        l = B.JSInt_methods.$tdiv(dkLen + t2 - 1, t2),
        iBuf = new Uint8Array(4),
        outBytes = new Uint8Array(l * t2),
        t3 = B.NativeUint8List_methods.sublist$1(inp, inpOff),
        t4 = t1._digest;
      t4.reset$0();
      t3 = A._lateReadCheck(t3, "key");
      keyLength = t3.length;
      t5 = t1.__HMac__blockLength;
      if (keyLength > A._lateReadCheck(t5, _s12_)) {
        t4.update$3(t3, 0, keyLength);
        t4.doFinal$2(A._lateReadCheck(t1.__HMac__inputPad, _s9_), 0);
        keyLength = A._lateReadCheck(t1.__HMac__digestSize, _s11_);
      } else
        B.NativeUint8List_methods.setRange$3(A._lateReadCheck(t1.__HMac__inputPad, _s9_), 0, keyLength, t3);
      B.NativeUint8List_methods.fillRange$3(A._lateReadCheck(t1.__HMac__inputPad, _s9_), keyLength, A._lateReadCheck(t1.__HMac__inputPad, _s9_).length, 0);
      B.NativeUint8List_methods.setRange$3(A._lateReadCheck(t1.__HMac__outputBuf, _s10_), 0, A._lateReadCheck(t5, _s12_), A._lateReadCheck(t1.__HMac__inputPad, _s9_));
      t1._xorPad$3(A._lateReadCheck(t1.__HMac__inputPad, _s9_), A._lateReadCheck(t5, _s12_), 54);
      t1._xorPad$3(A._lateReadCheck(t1.__HMac__outputBuf, _s10_), A._lateReadCheck(t5, _s12_), 92);
      t4.update$3(A._lateReadCheck(t1.__HMac__inputPad, _s9_), 0, A._lateReadCheck(t1.__HMac__inputPad, _s9_).length);
      for (outPos = 0, i = 1; i <= l; ++i) {
        for (pos = 3; true; --pos) {
          if (!(pos >= 0))
            return A.ioore(iBuf, pos);
          t1 = iBuf[pos];
          if (!(pos < 4))
            return A.ioore(iBuf, pos);
          iBuf[pos] = t1 + 1;
          if (iBuf[pos] !== 0)
            break;
        }
        _this._f$5(A._lateReadCheck(_this.__PBKDF2KeyDerivator__params, _s7_).salt, A._lateReadCheck(_this.__PBKDF2KeyDerivator__params, _s7_).iterationCount, iBuf, outBytes, outPos);
        outPos += t2;
      }
      B.NativeUint8List_methods.setRange$3(out, outOff, outOff + dkLen, outBytes);
      return A._lateReadCheck(_this.__PBKDF2KeyDerivator__params, _s7_).desiredKeyLength;
    },
    _f$5($S, c, iBuf, out, outOff) {
      var t1, t2, t3, count, j, t4, t5, t6, _this = this, _s6_ = "_state";
      if (c <= 0)
        throw A.wrapException(A.ArgumentError$("Iteration count must be at least 1.", null));
      t1 = _this._mac;
      t2 = t1._digest;
      t2.update$3($S, 0, $S.length);
      t2.update$3(iBuf, 0, 4);
      t1.doFinal$2(A._lateReadCheck(_this.__PBKDF2KeyDerivator__state, _s6_), 0);
      B.NativeUint8List_methods.setRange$3(out, outOff, outOff + A._lateReadCheck(_this.__PBKDF2KeyDerivator__state, _s6_).length, A._lateReadCheck(_this.__PBKDF2KeyDerivator__state, _s6_));
      for (t3 = out.length, count = 1; count < c; ++count) {
        t2.update$3(A._lateReadCheck(_this.__PBKDF2KeyDerivator__state, _s6_), 0, A._lateReadCheck(_this.__PBKDF2KeyDerivator__state, _s6_).length);
        t1.doFinal$2(A._lateReadCheck(_this.__PBKDF2KeyDerivator__state, _s6_), 0);
        for (j = 0; j !== A._lateReadCheck(_this.__PBKDF2KeyDerivator__state, _s6_).length; ++j) {
          t4 = outOff + j;
          if (!(t4 < t3))
            return A.ioore(out, t4);
          t5 = out[t4];
          t6 = A._lateReadCheck(_this.__PBKDF2KeyDerivator__state, _s6_);
          if (!(j < t6.length))
            return A.ioore(t6, j);
          out[t4] = t5 ^ t6[j];
        }
      }
    }
  };
  A.Scrypt.prototype = {
    get$keySize() {
      return this._params.desiredKeyLength;
    },
    deriveKey$4(inp, inpOff, out, outOff) {
      var t1 = this._params;
      if (t1 == null)
        throw A.wrapException(A.StateError$("Initialize first."));
      this._scryptJ$9(inp, inpOff, out, outOff, t1.salt, t1.N, t1.r, t1.p, t1.desiredKeyLength);
      return this._params.desiredKeyLength;
    },
    _scryptJ$9(pwd, pwdOff, dk, dkOff, salt, $N, r, p, dkLen) {
      var t2, t3, pbkdf2, i,
        _s12_ = "_blockLength",
        _s11_ = "_digestSize",
        t1 = 128 * r,
        b = new Uint8Array(t1 * p),
        xy = new Uint8Array(256 * r),
        v = new Uint8Array(t1 * $N);
      t1 = A.Register64$(0, null);
      t2 = new Uint8Array(4);
      t3 = type$.int;
      t3 = new A.SHA256Digest(t1, t2, B.C_Endian0, 8, A.List_List$filled(8, 0, false, t3), A.List_List$filled(64, 0, false, t3));
      t3.reset$0();
      t3 = new A.HMac(t3, 64);
      t3.__HMac__digestSize = 32;
      t2 = A._lateReadCheck(64, _s12_);
      t3.__HMac__inputPad = new Uint8Array(t2);
      t1 = A._lateReadCheck(64, _s12_);
      t2 = A._lateReadCheck(32, _s11_);
      t3.__HMac__outputBuf = new Uint8Array(t1 + t2);
      pbkdf2 = new A.PBKDF2KeyDerivator(t3);
      t1 = A._lateReadCheck(32, _s11_);
      pbkdf2.__PBKDF2KeyDerivator__state = new Uint8Array(t1);
      pbkdf2.__PBKDF2KeyDerivator__params = new A.Pbkdf2Parameters(salt, 1, p * 128 * r);
      pbkdf2.deriveKey$4(pwd, pwdOff, b, 0);
      for (i = 0; i < p; ++i)
        this._smix$6(b, i * 128 * r, r, $N, v, xy);
      pbkdf2.__PBKDF2KeyDerivator__params = new A.Pbkdf2Parameters(b, 1, dkLen);
      pbkdf2.deriveKey$4(pwd, pwdOff, dk, dkOff);
    },
    _smix$6($B, bi, r, $N, $V, xy) {
      var i, t2, t3, t4, t5,
        yi = 128 * r,
        t1 = type$.List_int;
      t1._as($B);
      t1._as(xy);
      B.NativeUint8List_methods.setRange$4(xy, 0, yi, $B, bi);
      for (i = 0; i < $N; ++i) {
        t2 = i * yi;
        B.NativeUint8List_methods.setRange$4(t1._as($V), t2, t2 + yi, xy, 0);
        this._blockmixSalsa8$4(xy, 0, yi, r);
      }
      for (t1 = (2 * r - 1) * 64, t2 = $N - 1, t3 = xy.length, i = 0; i < $N; ++i) {
        t4 = xy.buffer;
        t5 = xy.byteOffset;
        t4 = new DataView(t4, t5, t3);
        this._blockxor$5($V, ((B.NativeByteData_methods._getUint32$2(t4, t1, true) & t2) >>> 0) * yi, xy, 0, yi);
        this._blockmixSalsa8$4(xy, 0, yi, r);
      }
      B.NativeUint8List_methods.setRange$4($B, bi, bi + yi, xy, 0);
    },
    _blockmixSalsa8$4(by, bi, yi, r) {
      var t1, t2, t3, i, t4, j,
        byByteData = A.NativeByteData_NativeByteData$view(by.buffer, by.byteOffset, by.length);
      for (t1 = this._b32, t2 = 2 * r, t3 = bi + (t2 - 1) * 64, i = 0; i < 16; ++i)
        B.JSArray_methods.$indexSet(t1, i, B.NativeByteData_methods._getUint32$2(byByteData, t3 + i * 4, true));
      for (t3 = this._x, i = 0; i < t2; ++i) {
        for (t4 = i * 64, j = 0; j < 16; ++j) {
          B.JSArray_methods.$indexSet(t1, j, (t1[j] ^ B.NativeByteData_methods._getUint32$2(byByteData, t4 + j * 4, true)) >>> 0);
          B.JSArray_methods.$indexSet(t3, j, t1[j]);
        }
        this._salsa20_8$0();
        for (t4 = yi + t4, j = 0; j < 16; ++j)
          B.NativeByteData_methods._setUint32$3(byByteData, t4 + j * 4, t1[j], true);
      }
      for (t1 = type$.List_int, i = 0; i < r; ++i) {
        t2 = bi + i * 64;
        t1._as(by);
        B.NativeUint8List_methods.setRange$4(by, t2, t2 + 64, by, yi + i * 2 * 64);
      }
      for (i = 0; i < r; ++i) {
        t2 = bi + (i + r) * 64;
        t1._as(by);
        B.NativeUint8List_methods.setRange$4(by, t2, t2 + 64, by, yi + (i * 2 + 1) * 64);
      }
    },
    _salsa20_8$0() {
      var t1, i, t2, t3, t4;
      for (t1 = this._x, i = 8; i > 0; i -= 2) {
        t2 = t1[4];
        t3 = t1[0];
        t4 = t1[12];
        if (typeof t3 !== "number")
          return t3.$add();
        if (typeof t4 !== "number")
          return A.iae(t4);
        t4 = A._asInt(t3 + t4);
        if (typeof t2 !== "number")
          return t2.$xor();
        B.JSArray_methods.$indexSet(t1, 4, (t2 ^ (t4 << 7 | t4 >>> 0 >>> 25)) >>> 0);
        t4 = t1[8];
        t2 = t1[4];
        t3 = t1[0];
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return A.iae(t3);
        t3 = A._asInt(t2 + t3);
        if (typeof t4 !== "number")
          return t4.$xor();
        B.JSArray_methods.$indexSet(t1, 8, (t4 ^ (t3 << 9 | t3 >>> 0 >>> 23)) >>> 0);
        t3 = t1[12];
        t4 = t1[8];
        t2 = t1[4];
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t2 !== "number")
          return A.iae(t2);
        t2 = A._asInt(t4 + t2);
        if (typeof t3 !== "number")
          return t3.$xor();
        B.JSArray_methods.$indexSet(t1, 12, (t3 ^ (t2 << 13 | t2 >>> 0 >>> 19)) >>> 0);
        t2 = t1[0];
        t3 = t1[12];
        t4 = t1[8];
        if (typeof t3 !== "number")
          return t3.$add();
        if (typeof t4 !== "number")
          return A.iae(t4);
        t4 = A._asInt(t3 + t4);
        if (typeof t2 !== "number")
          return t2.$xor();
        B.JSArray_methods.$indexSet(t1, 0, (t2 ^ (t4 << 18 | t4 >>> 0 >>> 14)) >>> 0);
        t4 = t1[9];
        t2 = t1[5];
        t3 = t1[1];
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return A.iae(t3);
        t3 = A._asInt(t2 + t3);
        if (typeof t4 !== "number")
          return t4.$xor();
        B.JSArray_methods.$indexSet(t1, 9, (t4 ^ (t3 << 7 | t3 >>> 0 >>> 25)) >>> 0);
        t3 = t1[13];
        t4 = t1[9];
        t2 = t1[5];
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t2 !== "number")
          return A.iae(t2);
        t2 = A._asInt(t4 + t2);
        if (typeof t3 !== "number")
          return t3.$xor();
        B.JSArray_methods.$indexSet(t1, 13, (t3 ^ (t2 << 9 | t2 >>> 0 >>> 23)) >>> 0);
        t2 = t1[1];
        t3 = t1[13];
        t4 = t1[9];
        if (typeof t3 !== "number")
          return t3.$add();
        if (typeof t4 !== "number")
          return A.iae(t4);
        t4 = A._asInt(t3 + t4);
        if (typeof t2 !== "number")
          return t2.$xor();
        B.JSArray_methods.$indexSet(t1, 1, (t2 ^ (t4 << 13 | t4 >>> 0 >>> 19)) >>> 0);
        t4 = t1[5];
        t2 = t1[1];
        t3 = t1[13];
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return A.iae(t3);
        t3 = A._asInt(t2 + t3);
        if (typeof t4 !== "number")
          return t4.$xor();
        B.JSArray_methods.$indexSet(t1, 5, (t4 ^ (t3 << 18 | t3 >>> 0 >>> 14)) >>> 0);
        t3 = t1[14];
        t4 = t1[10];
        t2 = t1[6];
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t2 !== "number")
          return A.iae(t2);
        t2 = A._asInt(t4 + t2);
        if (typeof t3 !== "number")
          return t3.$xor();
        B.JSArray_methods.$indexSet(t1, 14, (t3 ^ (t2 << 7 | t2 >>> 0 >>> 25)) >>> 0);
        t2 = t1[2];
        t3 = t1[14];
        t4 = t1[10];
        if (typeof t3 !== "number")
          return t3.$add();
        if (typeof t4 !== "number")
          return A.iae(t4);
        t4 = A._asInt(t3 + t4);
        if (typeof t2 !== "number")
          return t2.$xor();
        B.JSArray_methods.$indexSet(t1, 2, (t2 ^ (t4 << 9 | t4 >>> 0 >>> 23)) >>> 0);
        t4 = t1[6];
        t2 = t1[2];
        t3 = t1[14];
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return A.iae(t3);
        t3 = A._asInt(t2 + t3);
        if (typeof t4 !== "number")
          return t4.$xor();
        B.JSArray_methods.$indexSet(t1, 6, (t4 ^ (t3 << 13 | t3 >>> 0 >>> 19)) >>> 0);
        t3 = t1[10];
        t4 = t1[6];
        t2 = t1[2];
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t2 !== "number")
          return A.iae(t2);
        t2 = A._asInt(t4 + t2);
        if (typeof t3 !== "number")
          return t3.$xor();
        B.JSArray_methods.$indexSet(t1, 10, (t3 ^ (t2 << 18 | t2 >>> 0 >>> 14)) >>> 0);
        t2 = t1[3];
        t3 = t1[15];
        t4 = t1[11];
        if (typeof t3 !== "number")
          return t3.$add();
        if (typeof t4 !== "number")
          return A.iae(t4);
        t4 = A._asInt(t3 + t4);
        if (typeof t2 !== "number")
          return t2.$xor();
        B.JSArray_methods.$indexSet(t1, 3, (t2 ^ (t4 << 7 | t4 >>> 0 >>> 25)) >>> 0);
        t4 = t1[7];
        t2 = t1[3];
        t3 = t1[15];
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return A.iae(t3);
        t3 = A._asInt(t2 + t3);
        if (typeof t4 !== "number")
          return t4.$xor();
        B.JSArray_methods.$indexSet(t1, 7, (t4 ^ (t3 << 9 | t3 >>> 0 >>> 23)) >>> 0);
        t3 = t1[11];
        t4 = t1[7];
        t2 = t1[3];
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t2 !== "number")
          return A.iae(t2);
        t2 = A._asInt(t4 + t2);
        if (typeof t3 !== "number")
          return t3.$xor();
        B.JSArray_methods.$indexSet(t1, 11, (t3 ^ (t2 << 13 | t2 >>> 0 >>> 19)) >>> 0);
        t2 = t1[15];
        t3 = t1[11];
        t4 = t1[7];
        if (typeof t3 !== "number")
          return t3.$add();
        if (typeof t4 !== "number")
          return A.iae(t4);
        t4 = A._asInt(t3 + t4);
        if (typeof t2 !== "number")
          return t2.$xor();
        B.JSArray_methods.$indexSet(t1, 15, (t2 ^ (t4 << 18 | t4 >>> 0 >>> 14)) >>> 0);
        t4 = t1[1];
        t2 = t1[0];
        t3 = t1[3];
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return A.iae(t3);
        t3 = A._asInt(t2 + t3);
        if (typeof t4 !== "number")
          return t4.$xor();
        B.JSArray_methods.$indexSet(t1, 1, (t4 ^ (t3 << 7 | t3 >>> 0 >>> 25)) >>> 0);
        t3 = t1[2];
        t4 = t1[1];
        t2 = t1[0];
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t2 !== "number")
          return A.iae(t2);
        t2 = A._asInt(t4 + t2);
        if (typeof t3 !== "number")
          return t3.$xor();
        B.JSArray_methods.$indexSet(t1, 2, (t3 ^ (t2 << 9 | t2 >>> 0 >>> 23)) >>> 0);
        t2 = t1[3];
        t3 = t1[2];
        t4 = t1[1];
        if (typeof t3 !== "number")
          return t3.$add();
        if (typeof t4 !== "number")
          return A.iae(t4);
        t4 = A._asInt(t3 + t4);
        if (typeof t2 !== "number")
          return t2.$xor();
        B.JSArray_methods.$indexSet(t1, 3, (t2 ^ (t4 << 13 | t4 >>> 0 >>> 19)) >>> 0);
        t4 = t1[0];
        t2 = t1[3];
        t3 = t1[2];
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return A.iae(t3);
        t3 = A._asInt(t2 + t3);
        if (typeof t4 !== "number")
          return t4.$xor();
        B.JSArray_methods.$indexSet(t1, 0, (t4 ^ (t3 << 18 | t3 >>> 0 >>> 14)) >>> 0);
        t3 = t1[6];
        t4 = t1[5];
        t2 = t1[4];
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t2 !== "number")
          return A.iae(t2);
        t2 = A._asInt(t4 + t2);
        if (typeof t3 !== "number")
          return t3.$xor();
        B.JSArray_methods.$indexSet(t1, 6, (t3 ^ (t2 << 7 | t2 >>> 0 >>> 25)) >>> 0);
        t2 = t1[7];
        t3 = t1[6];
        t4 = t1[5];
        if (typeof t3 !== "number")
          return t3.$add();
        if (typeof t4 !== "number")
          return A.iae(t4);
        t4 = A._asInt(t3 + t4);
        if (typeof t2 !== "number")
          return t2.$xor();
        B.JSArray_methods.$indexSet(t1, 7, (t2 ^ (t4 << 9 | t4 >>> 0 >>> 23)) >>> 0);
        t4 = t1[4];
        t2 = t1[7];
        t3 = t1[6];
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return A.iae(t3);
        t3 = A._asInt(t2 + t3);
        if (typeof t4 !== "number")
          return t4.$xor();
        B.JSArray_methods.$indexSet(t1, 4, (t4 ^ (t3 << 13 | t3 >>> 0 >>> 19)) >>> 0);
        t3 = t1[5];
        t4 = t1[4];
        t2 = t1[7];
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t2 !== "number")
          return A.iae(t2);
        t2 = A._asInt(t4 + t2);
        if (typeof t3 !== "number")
          return t3.$xor();
        B.JSArray_methods.$indexSet(t1, 5, (t3 ^ (t2 << 18 | t2 >>> 0 >>> 14)) >>> 0);
        t2 = t1[11];
        t3 = t1[10];
        t4 = t1[9];
        if (typeof t3 !== "number")
          return t3.$add();
        if (typeof t4 !== "number")
          return A.iae(t4);
        t4 = A._asInt(t3 + t4);
        if (typeof t2 !== "number")
          return t2.$xor();
        B.JSArray_methods.$indexSet(t1, 11, (t2 ^ (t4 << 7 | t4 >>> 0 >>> 25)) >>> 0);
        t4 = t1[8];
        t2 = t1[11];
        t3 = t1[10];
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return A.iae(t3);
        t3 = A._asInt(t2 + t3);
        if (typeof t4 !== "number")
          return t4.$xor();
        B.JSArray_methods.$indexSet(t1, 8, (t4 ^ (t3 << 9 | t3 >>> 0 >>> 23)) >>> 0);
        t3 = t1[9];
        t4 = t1[8];
        t2 = t1[11];
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t2 !== "number")
          return A.iae(t2);
        t2 = A._asInt(t4 + t2);
        if (typeof t3 !== "number")
          return t3.$xor();
        B.JSArray_methods.$indexSet(t1, 9, (t3 ^ (t2 << 13 | t2 >>> 0 >>> 19)) >>> 0);
        t2 = t1[10];
        t3 = t1[9];
        t4 = t1[8];
        if (typeof t3 !== "number")
          return t3.$add();
        if (typeof t4 !== "number")
          return A.iae(t4);
        t4 = A._asInt(t3 + t4);
        if (typeof t2 !== "number")
          return t2.$xor();
        B.JSArray_methods.$indexSet(t1, 10, (t2 ^ (t4 << 18 | t4 >>> 0 >>> 14)) >>> 0);
        t4 = t1[12];
        t2 = t1[15];
        t3 = t1[14];
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return A.iae(t3);
        t3 = A._asInt(t2 + t3);
        if (typeof t4 !== "number")
          return t4.$xor();
        B.JSArray_methods.$indexSet(t1, 12, (t4 ^ (t3 << 7 | t3 >>> 0 >>> 25)) >>> 0);
        t3 = t1[13];
        t4 = t1[12];
        t2 = t1[15];
        if (typeof t4 !== "number")
          return t4.$add();
        if (typeof t2 !== "number")
          return A.iae(t2);
        t2 = A._asInt(t4 + t2);
        if (typeof t3 !== "number")
          return t3.$xor();
        B.JSArray_methods.$indexSet(t1, 13, (t3 ^ (t2 << 9 | t2 >>> 0 >>> 23)) >>> 0);
        t2 = t1[14];
        t3 = t1[13];
        t4 = t1[12];
        if (typeof t3 !== "number")
          return t3.$add();
        if (typeof t4 !== "number")
          return A.iae(t4);
        t4 = A._asInt(t3 + t4);
        if (typeof t2 !== "number")
          return t2.$xor();
        B.JSArray_methods.$indexSet(t1, 14, (t2 ^ (t4 << 13 | t4 >>> 0 >>> 19)) >>> 0);
        t4 = t1[15];
        t2 = t1[14];
        t3 = t1[13];
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return A.iae(t3);
        t3 = A._asInt(t2 + t3);
        if (typeof t4 !== "number")
          return t4.$xor();
        B.JSArray_methods.$indexSet(t1, 15, (t4 ^ (t3 << 18 | t3 >>> 0 >>> 14)) >>> 0);
      }
      for (t2 = this._b32, i = 0; i < 16; ++i) {
        t3 = t1[i];
        t4 = t2[i];
        if (typeof t3 !== "number")
          return t3.$add();
        B.JSArray_methods.$indexSet(t2, i, t3 + t4 >>> 0);
      }
    },
    _blockxor$5(s, si, d, di, len) {
      var t1, t2, i, t3, t4, t5;
      for (t1 = d.length, t2 = s.length, i = 0; i < len; ++i) {
        t3 = di + i;
        if (!(t3 < t1))
          return A.ioore(d, t3);
        t4 = d[t3];
        t5 = si + i;
        if (!(t5 >= 0 && t5 < t2))
          return A.ioore(s, t5);
        d[t3] = t4 ^ s[t5];
      }
    }
  };
  A.HMac.prototype = {
    doFinal$2(out, outOff) {
      var len, _this = this,
        _s10_ = "_outputBuf",
        _s12_ = "_blockLength",
        _s9_ = "_inputPad",
        t1 = _this._digest,
        t2 = _this.__HMac__blockLength;
      t1.doFinal$2(A._lateReadCheck(_this.__HMac__outputBuf, _s10_), A._lateReadCheck(t2, _s12_));
      t1.update$3(A._lateReadCheck(_this.__HMac__outputBuf, _s10_), 0, A._lateReadCheck(_this.__HMac__outputBuf, _s10_).length);
      len = t1.doFinal$2(out, outOff);
      B.NativeUint8List_methods.fillRange$3(A._lateReadCheck(_this.__HMac__outputBuf, _s10_), A._lateReadCheck(t2, _s12_), A._lateReadCheck(_this.__HMac__outputBuf, _s10_).length, 0);
      t1.update$3(A._lateReadCheck(_this.__HMac__inputPad, _s9_), 0, A._lateReadCheck(_this.__HMac__inputPad, _s9_).length);
      return len;
    },
    _xorPad$3(pad, len, n) {
      var t1, i;
      for (t1 = pad.length, i = 0; i < len; ++i) {
        if (!(i < t1))
          return A.ioore(pad, i);
        pad[i] = pad[i] ^ n;
      }
    }
  };
  A.BaseBlockCipher.prototype = {$isBlockCipher: 1};
  A.BaseDigest.prototype = {$isDigest: 1};
  A.BaseKeyDerivator.prototype = {};
  A.BaseMac.prototype = {$isMac: 1};
  A.BaseStreamCipher.prototype = {
    process$1(data) {
      var t1 = data.length,
        out = new Uint8Array(t1);
      this.processBytes$5(data, 0, t1, out, 0);
      return out;
    }
  };
  A.MD4FamilyDigest.prototype = {
    reset$0() {
      var t1, _this = this;
      _this._byteCount.$set$1(0);
      _this.__MD4FamilyDigest__wordBufferOffset = 0;
      B.NativeUint8List_methods.fillRange$3(_this._wordBuffer, 0, 4, 0);
      _this.__MD4FamilyDigest_bufferOffset = 0;
      t1 = _this.buffer;
      B.JSArray_methods.fillRange$3(t1, 0, t1.length, 0);
      t1 = _this.state;
      B.JSArray_methods.$indexSet(t1, 0, 1779033703);
      B.JSArray_methods.$indexSet(t1, 1, 3144134277);
      B.JSArray_methods.$indexSet(t1, 2, 1013904242);
      B.JSArray_methods.$indexSet(t1, 3, 2773480762);
      B.JSArray_methods.$indexSet(t1, 4, 1359893119);
      B.JSArray_methods.$indexSet(t1, 5, 2600822924);
      B.JSArray_methods.$indexSet(t1, 6, 528734635);
      B.JSArray_methods.$indexSet(t1, 7, 1541459225);
    },
    updateByte$1(inp) {
      var _this = this,
        _s17_ = "_wordBufferOffset",
        t1 = _this._wordBuffer,
        t2 = A._lateReadCheck(_this.__MD4FamilyDigest__wordBufferOffset, _s17_),
        t3 = t2 + 1;
      _this.__MD4FamilyDigest__wordBufferOffset = t3;
      if (t2 >>> 0 !== t2 || t2 >= 4)
        return A.ioore(t1, t2);
      t1[t2] = inp & 255;
      if (A._lateReadCheck(t3, _s17_) === 4) {
        _this._processWord$2(t1, 0);
        _this.__MD4FamilyDigest__wordBufferOffset = 0;
      }
      _this._byteCount.sum$1(1);
    },
    update$3(inp, inpOff, len) {
      var nbytes = this._processUntilNextWord$3(inp, inpOff, len);
      inpOff += nbytes;
      len -= nbytes;
      nbytes = this._processWholeWords$3(inp, inpOff, len);
      this._processBytes$3(inp, inpOff + nbytes, len - nbytes);
    },
    doFinal$2(out, outOff) {
      var _this = this, _s5_ = "_lo32", _s5_0 = "_hi32",
        bitLength = A.Register64$(_this._byteCount, null),
        t1 = A._lateReadCheck(bitLength.__Register64__hi32, _s5_0);
      t1 = A.shiftl32(t1, 3);
      bitLength.__Register64__hi32 = t1;
      bitLength.__Register64__hi32 = (A._lateReadCheck(t1, _s5_0) | A._lateReadCheck(bitLength.__Register64__lo32, _s5_) >>> 29) >>> 0;
      bitLength.__Register64__lo32 = A.shiftl32(A._lateReadCheck(bitLength.__Register64__lo32, _s5_), 3);
      _this._processPadding$0();
      if (A._lateReadCheck(_this.__MD4FamilyDigest_bufferOffset, "bufferOffset") > 14)
        _this._doProcessBlock$0();
      t1 = _this._endian;
      switch (t1) {
        case B.C_Endian:
          t1 = _this.buffer;
          B.JSArray_methods.$indexSet(t1, 14, A._lateReadCheck(bitLength.__Register64__lo32, _s5_));
          B.JSArray_methods.$indexSet(t1, 15, A._lateReadCheck(bitLength.__Register64__hi32, _s5_0));
          break;
        case B.C_Endian0:
          t1 = _this.buffer;
          B.JSArray_methods.$indexSet(t1, 14, A._lateReadCheck(bitLength.__Register64__hi32, _s5_0));
          B.JSArray_methods.$indexSet(t1, 15, A._lateReadCheck(bitLength.__Register64__lo32, _s5_));
          break;
        default:
          A.throwExpression(A.StateError$("Invalid endianness: " + t1.toString$0(0)));
      }
      _this._doProcessBlock$0();
      _this._packState$2(out, outOff);
      _this.reset$0();
      return 32;
    },
    _processWord$2(inp, inpOff) {
      var _this = this,
        _s12_ = "bufferOffset",
        t1 = A._lateReadCheck(_this.__MD4FamilyDigest_bufferOffset, _s12_);
      _this.__MD4FamilyDigest_bufferOffset = t1 + 1;
      B.JSArray_methods.$indexSet(_this.buffer, t1, A.unpack32(inp, inpOff, _this._endian));
      if (A._lateReadCheck(_this.__MD4FamilyDigest_bufferOffset, _s12_) === 16)
        _this._doProcessBlock$0();
    },
    _doProcessBlock$0() {
      this.processBlock$0();
      this.__MD4FamilyDigest_bufferOffset = 0;
      B.JSArray_methods.fillRange$3(this.buffer, 0, 16, 0);
    },
    _processBytes$3(inp, inpOff, len) {
      var t1;
      for (t1 = inp.length; len > 0;) {
        if (!(inpOff < t1))
          return A.ioore(inp, inpOff);
        this.updateByte$1(inp[inpOff]);
        ++inpOff;
        --len;
      }
    },
    _processWholeWords$3(inp, inpOff, len) {
      var t1, processed;
      for (t1 = this._byteCount, processed = 0; len > 4;) {
        this._processWord$2(inp, inpOff);
        inpOff += 4;
        len -= 4;
        t1.sum$1(4);
        processed += 4;
      }
      return processed;
    },
    _processUntilNextWord$3(inp, inpOff, len) {
      var t1 = inp.length,
        processed = 0;
      while (true) {
        if (!(A._lateReadCheck(this.__MD4FamilyDigest__wordBufferOffset, "_wordBufferOffset") !== 0 && len > 0))
          break;
        if (!(inpOff < t1))
          return A.ioore(inp, inpOff);
        this.updateByte$1(inp[inpOff]);
        ++inpOff;
        --len;
        ++processed;
      }
      return processed;
    },
    _processPadding$0() {
      this.updateByte$1(128);
      for (; A._lateReadCheck(this.__MD4FamilyDigest__wordBufferOffset, "_wordBufferOffset") !== 0;)
        this.updateByte$1(0);
    },
    _packState$2(out, outOff) {
      var t1, t2, t3, t4, t5, i, t6, t7, t8, out0;
      for (t1 = this._packedStateSize, t2 = out.length, t3 = this.state, t4 = t3.length, t5 = this._endian, i = 0; i < t1; ++i) {
        if (!(i < t4))
          return A.ioore(t3, i);
        t6 = t3[i];
        t7 = out.buffer;
        t8 = out.byteOffset;
        out0 = new DataView(t7, t8, t2);
        B.NativeByteData_methods._setUint32$3(out0, outOff + i * 4, t6, B.C_Endian === t5);
      }
    }
  };
  A.NodeCrypto.prototype = {};
  A.Register64.prototype = {
    $eq(_, y) {
      if (y == null)
        return false;
      return y instanceof A.Register64 && A._lateReadCheck(this.__Register64__hi32, "_hi32") === A._lateReadCheck(y.__Register64__hi32, "_hi32") && A._lateReadCheck(this.__Register64__lo32, "_lo32") === A._lateReadCheck(y.__Register64__lo32, "_lo32");
    },
    $set$2(hiOrLo32OrY, lo32) {
      var _this = this;
      if (lo32 == null)
        if (hiOrLo32OrY instanceof A.Register64) {
          _this.__Register64__hi32 = A._lateReadCheck(hiOrLo32OrY.__Register64__hi32, "_hi32");
          _this.__Register64__lo32 = A._lateReadCheck(hiOrLo32OrY.__Register64__lo32, "_lo32");
        } else {
          _this.__Register64__hi32 = 0;
          _this.__Register64__lo32 = A._asInt(hiOrLo32OrY);
        }
      else {
        _this.__Register64__hi32 = A._asInt(hiOrLo32OrY);
        _this.__Register64__lo32 = lo32;
      }
    },
    $set$1(hiOrLo32OrY) {
      return this.$set$2(hiOrLo32OrY, null);
    },
    sum$1(y) {
      var _this = this,
        t1 = A._lateReadCheck(_this.__Register64__lo32, "_lo32"),
        slo32 = t1 + (y >>> 0);
      t1 = slo32 >>> 0;
      _this.__Register64__lo32 = t1;
      if (slo32 !== A._lateReadCheck(t1, "_lo32")) {
        t1 = A._lateReadCheck(_this.__Register64__hi32, "_hi32") + 1;
        _this.__Register64__hi32 = t1;
        _this.__Register64__hi32 = A._lateReadCheck(t1, "_hi32") >>> 0;
      }
    },
    sumReg$1(y) {
      var carry, _this = this, _s5_ = "_lo32",
        slo32 = A._lateReadCheck(_this.__Register64__lo32, _s5_) + A._lateReadCheck(y.__Register64__lo32, _s5_),
        t1 = slo32 >>> 0;
      _this.__Register64__lo32 = t1;
      carry = slo32 !== A._lateReadCheck(t1, _s5_) ? 1 : 0;
      _this.__Register64__hi32 = A._lateReadCheck(_this.__Register64__hi32, "_hi32") + A._lateReadCheck(y.__Register64__hi32, "_hi32") + carry >>> 0;
    },
    xor$1(y) {
      var _this = this;
      _this.__Register64__hi32 = (A._lateReadCheck(_this.__Register64__hi32, "_hi32") ^ A._lateReadCheck(y.__Register64__hi32, "_hi32")) >>> 0;
      _this.__Register64__lo32 = (A._lateReadCheck(_this.__Register64__lo32, "_lo32") ^ A._lateReadCheck(y.__Register64__lo32, "_lo32")) >>> 0;
    },
    rotr$1(n) {
      var t1, t2, t3, _this = this, _s5_ = "_hi32", _s5_0 = "_lo32";
      n &= 63;
      if (n !== 0) {
        if (n >= 32) {
          t1 = A._lateReadCheck(_this.__Register64__hi32, _s5_);
          _this.__Register64__hi32 = A._lateReadCheck(_this.__Register64__lo32, _s5_0);
          _this.__Register64__lo32 = t1;
          n -= 32;
        }
        if (n !== 0) {
          t1 = A._lateReadCheck(_this.__Register64__hi32, _s5_);
          t2 = B.JSInt_methods._shrReceiverPositive$1(A._lateReadCheck(_this.__Register64__hi32, _s5_), n);
          _this.__Register64__hi32 = t2;
          t3 = 32 - n;
          _this.__Register64__hi32 = (A._lateReadCheck(t2, _s5_) | A.shiftl32(A._lateReadCheck(_this.__Register64__lo32, _s5_0), t3)) >>> 0;
          t2 = B.JSInt_methods._shrReceiverPositive$1(A._lateReadCheck(_this.__Register64__lo32, _s5_0), n);
          _this.__Register64__lo32 = t2;
          _this.__Register64__lo32 = (A._lateReadCheck(t2, _s5_0) | A.shiftl32(t1, t3)) >>> 0;
        }
      }
    },
    unpack$3(inp, offset, endian) {
      var _this = this;
      switch (endian) {
        case B.C_Endian0:
          _this.__Register64__hi32 = A.unpack32(inp, offset, endian);
          _this.__Register64__lo32 = A.unpack32(inp, offset + 4, endian);
          break;
        case B.C_Endian:
          _this.__Register64__hi32 = A.unpack32(inp, offset + 4, endian);
          _this.__Register64__lo32 = A.unpack32(inp, offset, endian);
          break;
        default:
          throw A.wrapException(A.UnsupportedError$("Invalid endianness: " + endian.toString$0(0)));
      }
    },
    toString$0(_) {
      var t1, _this = this,
        sb = new A.StringBuffer("");
      _this._padWrite$2(sb, A._lateReadCheck(_this.__Register64__hi32, "_hi32"));
      _this._padWrite$2(sb, A._lateReadCheck(_this.__Register64__lo32, "_lo32"));
      t1 = sb._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _padWrite$2(sb, value) {
      var i,
        str = B.JSInt_methods.toRadixString$1(value, 16);
      for (i = 8 - str.length; i > 0; --i)
        sb._contents += "0";
      sb._contents += str;
    },
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, this);
    }
  };
  A.Register64List.prototype = {
    get$length(_) {
      return this._list.length;
    },
    $index(_, index) {
      var t1;
      A._asInt(index);
      t1 = this._list;
      if (!(index < t1.length))
        return A.ioore(t1, index);
      return t1[index];
    },
    fillRange$3(_, start, end, hiOrLo32OrY) {
      var t1, i;
      for (t1 = this._list, i = start; i < end; ++i) {
        if (!(i < t1.length))
          return A.ioore(t1, i);
        t1[i].$set$2(hiOrLo32OrY, null);
      }
    },
    setRange$3(_, start, end, list) {
      var t1, t2, i, t3,
        $length = end - start;
      for (t1 = this._list, t2 = type$.Register64List._as(list)._list, i = 0; i < $length; ++i) {
        t3 = start + i;
        if (!(t3 < t1.length))
          return A.ioore(t1, t3);
        t3 = t1[t3];
        if (!(i < t2.length))
          return A.ioore(t2, i);
        t3.$set$1(t2[i]);
      }
    },
    toString$0(_) {
      var t1, i, t2, t3, sb;
      for (t1 = this._list, i = 0, t2 = "("; i < t1.length; ++i, t2 = t3) {
        if (i > 0)
          t2 += ", ";
        t3 = t1[i];
        sb = new A.StringBuffer("");
        t3._padWrite$2(sb, A._lateReadCheck(t3.__Register64__hi32, "_hi32"));
        t3._padWrite$2(sb, A._lateReadCheck(t3.__Register64__lo32, "_lo32"));
        t3 = sb._contents;
        t3 = t2 + (t3.charCodeAt(0) == 0 ? t3 : t3);
      }
      t1 = t2 + ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.CTRStreamCipher.prototype = {};
  A.SICStreamCipher.prototype = {
    SICStreamCipher$1(underlyingCipher) {
      this.__SICStreamCipher__iv = new Uint8Array(16);
      this.__SICStreamCipher__counter = new Uint8Array(16);
      this.__SICStreamCipher__counterOut = new Uint8Array(16);
    },
    processBytes$5(inp, inpOff, len, out, outOff) {
      var t1, t2, t3, i, t4, t5, t6, t7, t8, _this = this,
        _s9_ = "_consumed",
        _s11_ = "_counterOut";
      for (t1 = out.length, t2 = inp.length, t3 = _this.underlyingCipher, i = 0; i < len; ++i) {
        t4 = outOff + i;
        t5 = inpOff + i;
        if (!(t5 < t2))
          return A.ioore(inp, t5);
        t5 = inp[t5];
        if (A._lateReadCheck(_this.__SICStreamCipher__consumed, _s9_) >= A._lateReadCheck(_this.__SICStreamCipher__counterOut, _s11_).length) {
          t6 = A._lateReadCheck(_this.__SICStreamCipher__counter, "_counter");
          t7 = A._lateReadCheck(_this.__SICStreamCipher__counterOut, _s11_);
          t8 = t3._WorkingKey;
          if (t8 == null)
            A.throwExpression(A.StateError$("AES engine not initialised"));
          if (16 > t6.byteLength)
            A.throwExpression(A.ArgumentError$("Input buffer too short", null));
          if (16 > t7.byteLength)
            A.throwExpression(A.ArgumentError$("Output buffer too short", null));
          if (t3._forEncryption)
            t3._encryptBlock$5(t6, 0, t7, 0, t8);
          else
            t3._decryptBlock$5(t6, 0, t7, 0, t8);
          _this._incrementCounter$0();
          _this.__SICStreamCipher__consumed = 0;
        }
        t6 = A._lateReadCheck(_this.__SICStreamCipher__counterOut, _s11_);
        t7 = A._lateReadCheck(_this.__SICStreamCipher__consumed, _s9_);
        _this.__SICStreamCipher__consumed = t7 + 1;
        if (t7 >>> 0 !== t7 || t7 >= t6.length)
          return A.ioore(t6, t7);
        t7 = t6[t7];
        if (!(t4 < t1))
          return A.ioore(out, t4);
        out[t4] = t5 & 255 ^ t7;
      }
    },
    _incrementCounter$0() {
      var i, t1, val, _this = this,
        _s8_ = "_counter";
      for (i = A._lateReadCheck(_this.__SICStreamCipher__counter, _s8_).byteLength - 1; i >= 0; --i) {
        t1 = A._lateReadCheck(_this.__SICStreamCipher__counter, _s8_);
        if (!(i < t1.length))
          return A.ioore(t1, i);
        val = t1[i];
        t1 = A._lateReadCheck(_this.__SICStreamCipher__counter, _s8_);
        if (!(i < t1.length))
          return A.ioore(t1, i);
        t1[i] = val + 1;
        t1 = A._lateReadCheck(_this.__SICStreamCipher__counter, _s8_);
        if (!(i < t1.length))
          return A.ioore(t1, i);
        if (t1[i] !== 0)
          break;
      }
    }
  };
  A.main_closure.prototype = {
    call$1(e) {
      var t3, params, encoded, password, data, version, $crypto, kdf, derParams, derivator, derivedKey, encryptedPrivateKey, result, toplExtendedPrvKeyUint8List, _null = null,
        _s12_ = "keyStoreJson",
        _s8_ = "password",
        t1 = type$.MessageEvent._as(e).data,
        t2 = new A._AcceptStructuredCloneDart2Js([], []);
      t2.mustCopy = true;
      t3 = type$.Map_String_dynamic;
      params = t3._as(B.C_JsonCodec.decode$2$reviver(A._asString(t2.walk$1(t1)), _null));
      t1 = t3._as(A.LinkedHashMap_LinkedHashMap$_literal(["keyStoreJson", A._asString(params.$index(0, _s12_)), "password", A._asString(params.$index(0, _s8_))], type$.String, type$.dynamic));
      encoded = A._asString(t1.$index(0, _s12_));
      password = A._asString(t1.$index(0, _s8_));
      data = B.C_JsonCodec.decode$1(encoded);
      t1 = J.getInterceptor$asx(data);
      version = t1.$index(data, "version");
      if (!J.$eq$(version, 1))
        A.throwExpression(A.ArgumentError$value(version, "version", "Library only supports version 1 of key store files at the moment. However, the following value has been given:"));
      $crypto = t1.$index(data, "crypto");
      if ($crypto == null)
        $crypto = t1.$index(data, "Crypto");
      t2 = J.getInterceptor$asx($crypto);
      kdf = A._asString(t2.$index($crypto, "kdf"));
      switch (kdf) {
        case "scrypt":
          derParams = t3._as(t2.$index($crypto, "kdfparams"));
          derivator = new A._ScryptKeyDerivator(A._asInt(derParams.$index(0, "dkLen")), A._asInt(derParams.$index(0, "n")), A._asInt(derParams.$index(0, "r")), A._asInt(derParams.$index(0, "p")), new Uint8Array(A._ensureNativeList(A.str2ByteArray(A._asString(derParams.$index(0, "salt")), ""))));
          break;
        default:
          A.throwExpression(A.ArgumentError$("Wallet file uses " + kdf + " as key derivation function which is currently not supported", _null));
          derivator = _null;
      }
      derivedKey = derivator.deriveKey$1(new Uint8Array(A._ensureNativeList(A.str2ByteArray(password, "latin1"))));
      encryptedPrivateKey = A.str2ByteArray(A._asString(t2.$index($crypto, "cipherText")), "");
      if (A.KeyStore__getMac(derivedKey, encryptedPrivateKey) !== t2.$index($crypto, "mac"))
        A.throwExpression(A.ArgumentError$("Invalid MAC: Could not unlock key store file. You either supplied the wrong password or the file is corrupted", _null));
      if (!J.$eq$(t2.$index($crypto, "cipher"), "aes-256-ctr"))
        A.throwExpression(A.ArgumentError$("Invalid Cipher: key store file uses " + A.S(t2.$index($crypto, "cipher")) + " as cipher, but only aes-256-ctr is supported.", _null));
      result = A.Base58_encode(type$.List_int._as(A.KeyStore__initCipher(false, derivedKey, A.str2ByteArray(A._asString(J.$index$asx(t2.$index($crypto, "cipherParams"), "iv")), "")).process$1(encryptedPrivateKey)));
      t1 = A._asString(t1.$index(data, "id"));
      t1 = type$.HexCodec._eval$1("Codec.T")._as(A.stringReplaceAllUnchecked(t1, "-", ""));
      B.C_HexCodec.get$decoder().convert$1(t1);
      toplExtendedPrvKeyUint8List = new Uint8Array(A._ensureNativeList(A.Base58_decode(result)));
      J.postMessage$2$x(self.self, B.C_JsonCodec.encode$2$toEncodable(toplExtendedPrvKeyUint8List, _null), null);
    },
    $signature: 16
  };
  (function aliases() {
    var _ = J.LegacyJavaScriptObject.prototype;
    _.super$LegacyJavaScriptObject$toString = _.toString$0;
    _ = A.ListMixin.prototype;
    _.super$ListMixin$setRange = _.setRange$4;
  })();
  (function installTearOffs() {
    var _static_1 = hunkHelpers._static_1,
      _static_0 = hunkHelpers._static_0;
    _static_1(A, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 1);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 1);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 1);
    _static_0(A, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
    _static_1(A, "convert___defaultToEncodable$closure", "_defaultToEncodable", 2);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.Object, null);
    _inheritMany(A.Object, [A.JS_CONST, J.Interceptor, J.ArrayIterator, A.Error, A._ListBase_Object_ListMixin, A.Iterable, A.ListIterator, A.FixedLengthListMixin, A.UnmodifiableListMixin, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A._StackTrace, A.Closure, A.MapMixin, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.Rti, A._FunctionParameters, A._TimerImpl, A.AsyncError, A._Completer, A._FutureListener, A._Future, A._AsyncCallbackEntry, A.Stream, A.StreamSubscription, A.StreamTransformerBase, A._Zone, A.ListMixin, A.Codec, A._JsonStringifier, A.DateTime, A.OutOfMemoryError, A.StackOverflowError, A._Exception, A.FormatException, A.Null, A._StringStackTrace, A.StringBuffer, A.EventStreamProvider, A._StructuredClone, A._AcceptStructuredClone, A.NullRejectionException, A.Endian, A._KeyDerivator, A.KeyStore, A.CipherParameters, A.ParametersWithIV, A.BaseBlockCipher, A.BaseDigest, A.ScryptParameters, A.BaseKeyDerivator, A.BaseMac, A.BaseStreamCipher, A.Register64, A.Register64List]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, A.NativeByteBuffer, A.NativeTypedData]);
    _inheritMany(J.JavaScriptObject, [J.LegacyJavaScriptObject, A.Blob, A.EventTarget, A.DomException, A.Event]);
    _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction, A.NodeCrypto]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(A.Error, [A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A.RuntimeError, A._Error, A.JsonUnsupportedObjectError, A.AssertionError, A.NullThrownError, A.ArgumentError, A.UnsupportedError, A.UnimplementedError, A.StateError, A.ConcurrentModificationError, A.CyclicInitializationError]);
    _inherit(A.ListBase, A._ListBase_Object_ListMixin);
    _inherit(A.UnmodifiableListBase, A.ListBase);
    _inherit(A.CodeUnits, A.UnmodifiableListBase);
    _inherit(A.EfficientLengthIterable, A.Iterable);
    _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.LinkedHashMapKeyIterable]);
    _inheritMany(A.ListIterable, [A.SubListIterable, A._JsonMapKeyIterable]);
    _inherit(A.NullError, A.TypeError);
    _inheritMany(A.Closure, [A.Closure0Args, A.Closure2Args, A.TearOffClosure, A.initHooks_closure, A.initHooks_closure1, A._AsyncRun__initializeScheduleImmediate_internalCallback, A._AsyncRun__initializeScheduleImmediate_closure, A._Future__chainForeignFuture_closure, A._Future__propagateToListeners_handleWhenCompleteCallback_closure, A.Stream_length_closure, A._RootZone_bindUnaryCallbackGuarded_closure, A._EventStreamSubscription_closure, A.promiseToFuture_closure, A.promiseToFuture_closure0, A.main_closure]);
    _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
    _inherit(A.MapBase, A.MapMixin);
    _inheritMany(A.MapBase, [A.JsLinkedHashMap, A._JsonMap]);
    _inheritMany(A.Closure2Args, [A.initHooks_closure0, A._Future__chainForeignFuture_closure0, A.MapBase_mapToString_closure, A._JsonStringifier_writeMap_closure, A._StructuredClone_walk_closure, A._StructuredClone_walk_closure0, A._AcceptStructuredClone_walk_closure]);
    _inheritMany(A.NativeTypedData, [A.NativeByteData, A.NativeTypedArray]);
    _inheritMany(A.NativeTypedArray, [A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfDouble, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfInt, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(A.NativeTypedArrayOfInt, [A.NativeInt16List, A.NativeInt32List, A.NativeInt8List, A.NativeUint16List, A.NativeUint32List, A.NativeUint8ClampedList, A.NativeUint8List]);
    _inherit(A._TypeError, A._Error);
    _inheritMany(A.Closure0Args, [A._AsyncRun__scheduleImmediateJsOverride_internalCallback, A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, A._TimerImpl_internalCallback, A._Future__addListener_closure, A._Future__prependListeners_closure, A._Future__chainForeignFuture_closure1, A._Future__asyncCompleteWithValue_closure, A._Future__chainFuture_closure, A._Future__asyncCompleteError_closure, A._Future__propagateToListeners_handleWhenCompleteCallback, A._Future__propagateToListeners_handleValueCallback, A._Future__propagateToListeners_handleError, A.Stream_length_closure0, A._rootHandleError_closure, A._RootZone_bindCallbackGuarded_closure]);
    _inherit(A._AsyncCompleter, A._Completer);
    _inherit(A._RootZone, A._Zone);
    _inherit(A.Converter, A.StreamTransformerBase);
    _inheritMany(A.Converter, [A._UnicodeSubsetEncoder, A.JsonEncoder, A.JsonDecoder, A.HexDecoder]);
    _inherit(A.JsonCyclicError, A.JsonUnsupportedObjectError);
    _inheritMany(A.Codec, [A.JsonCodec, A.HexCodec]);
    _inherit(A._JsonStringStringifier, A._JsonStringifier);
    _inherit(A.Latin1Encoder, A._UnicodeSubsetEncoder);
    _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
    _inheritMany(A.EventTarget, [A.WorkerGlobalScope, A.MessagePort]);
    _inherit(A.DedicatedWorkerGlobalScope, A.WorkerGlobalScope);
    _inherit(A.File, A.Blob);
    _inherit(A.MessageEvent, A.Event);
    _inherit(A._EventStream, A.Stream);
    _inherit(A._EventStreamSubscription, A.StreamSubscription);
    _inherit(A._StructuredCloneDart2Js, A._StructuredClone);
    _inherit(A._AcceptStructuredCloneDart2Js, A._AcceptStructuredClone);
    _inherit(A._ScryptKeyDerivator, A._KeyDerivator);
    _inheritMany(A.CipherParameters, [A.KeyParameter, A.Pbkdf2Parameters]);
    _inherit(A.AESEngine, A.BaseBlockCipher);
    _inheritMany(A.BaseDigest, [A.Blake2bDigest, A.MD4FamilyDigest]);
    _inherit(A.SHA256Digest, A.MD4FamilyDigest);
    _inheritMany(A.BaseKeyDerivator, [A.PBKDF2KeyDerivator, A.Scrypt]);
    _inherit(A.HMac, A.BaseMac);
    _inherit(A.SICStreamCipher, A.BaseStreamCipher);
    _inherit(A.CTRStreamCipher, A.SICStreamCipher);
    _mixin(A.UnmodifiableListBase, A.UnmodifiableListMixin);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A.ListMixin);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.ListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._ListBase_Object_ListMixin, A.ListMixin);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
    mangledNames: {},
    types: ["~()", "~(~())", "@(@)", "Null(@)", "Null()", "~(Object?,Object?)", "~(@)", "@(@,String)", "@(String)", "Null(~())", "Null(Object,StackTrace)", "_Future<@>(@)", "~(Event)", "~(@,@)", "Null(@,@)", "@(@,@)", "~(MessageEvent)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: Symbol("$ti")
  };
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","JavaScriptFunction":"LegacyJavaScriptObject","NodeCrypto":"LegacyJavaScriptObject","AbortPaymentEvent":"Event","ExtendableEvent":"Event","NativeFloat32List":"NativeTypedArrayOfDouble","JSBool":{"bool":[]},"JSNull":{"Null":[]},"LegacyJavaScriptObject":{"JSObject":[]},"JSArray":{"List":["1"],"Iterable":["1"],"JSIndexable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"Iterable":["1"],"JSIndexable":["1"]},"JSNumber":{"double":[],"num":[]},"JSInt":{"double":[],"int":[],"num":[]},"JSNumNotInt":{"double":[],"num":[]},"JSString":{"String":[],"Pattern":[],"JSIndexable":["@"]},"LateError":{"Error":[]},"CodeUnits":{"ListMixin":["int"],"UnmodifiableListMixin":["int"],"List":["int"],"Iterable":["int"],"ListMixin.E":"int","UnmodifiableListMixin.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"Iterable":["1"],"ListIterable.E":"1"},"UnmodifiableListBase":{"ListMixin":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"Iterable":["1"]},"NullError":{"TypeError":[],"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"Closure0Args":{"Function":[]},"Closure2Args":{"Function":[]},"TearOffClosure":{"Function":[]},"StaticClosure":{"Function":[]},"BoundClosure":{"Function":[]},"RuntimeError":{"Error":[]},"JsLinkedHashMap":{"MapMixin":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"LinkedHashMapKeyIterable":{"Iterable":["1"]},"NativeByteData":{"NativeTypedData":[],"ByteData":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"],"NativeTypedData":[],"JSIndexable":["1"]},"NativeTypedArrayOfDouble":{"NativeTypedArray":["double"],"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"NativeTypedData":[],"JSIndexable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"],"ListMixin.E":"double"},"NativeTypedArrayOfInt":{"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"]},"NativeInt16List":{"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeInt32List":{"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeInt8List":{"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeUint16List":{"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeUint32List":{"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeUint8ClampedList":{"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeUint8List":{"NativeTypedArray":["int"],"ListMixin":["int"],"Uint8List":[],"JavaScriptIndexingBehavior":["int"],"List":["int"],"NativeTypedData":[],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"_Error":{"Error":[]},"_TypeError":{"TypeError":[],"Error":[]},"_Future":{"Future":["1"]},"AsyncError":{"Error":[]},"_AsyncCompleter":{"_Completer":["1"]},"_Zone":{"Zone":[]},"_RootZone":{"_Zone":[],"Zone":[]},"ListBase":{"ListMixin":["1"],"List":["1"],"Iterable":["1"]},"MapBase":{"MapMixin":["1","2"],"Map":["1","2"]},"MapMixin":{"Map":["1","2"]},"_JsonMap":{"MapMixin":["String","@"],"Map":["String","@"],"MapMixin.K":"String","MapMixin.V":"@"},"_JsonMapKeyIterable":{"ListIterable":["String"],"Iterable":["String"],"ListIterable.E":"String"},"_UnicodeSubsetEncoder":{"Converter":["String","List<int>"]},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"JsonCodec":{"Codec":["Object?","String"],"Codec.T":"String"},"JsonEncoder":{"Converter":["Object?","String"]},"JsonDecoder":{"Converter":["String","Object?"]},"Latin1Encoder":{"Converter":["String","List<int>"]},"double":{"num":[]},"int":{"num":[]},"List":{"Iterable":["1"]},"String":{"Pattern":[]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"NullThrownError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"CyclicInitializationError":{"Error":[]},"_StringStackTrace":{"StackTrace":[]},"StringBuffer":{"StringSink":[]},"MessageEvent":{"Event":[]},"DedicatedWorkerGlobalScope":{"EventTarget":[]},"File":{"Blob":[]},"MessagePort":{"EventTarget":[]},"WorkerGlobalScope":{"EventTarget":[]},"_EventStream":{"Stream":["1"]},"_ScryptKeyDerivator":{"_KeyDerivator":[]},"HexCodec":{"Codec":["List<int>","String"],"Codec.T":"String"},"HexDecoder":{"Converter":["String","List<int>"]},"KeyParameter":{"CipherParameters":[]},"ParametersWithIV":{"CipherParameters":[]},"AESEngine":{"BlockCipher":[]},"Blake2bDigest":{"Digest":[]},"SHA256Digest":{"Digest":[]},"Pbkdf2Parameters":{"CipherParameters":[]},"ScryptParameters":{"CipherParameters":[]},"HMac":{"Mac":[]},"BaseBlockCipher":{"BlockCipher":[]},"BaseDigest":{"Digest":[]},"BaseMac":{"Mac":[]},"MD4FamilyDigest":{"Digest":[]}}'));
  A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"EfficientLengthIterable":1,"UnmodifiableListBase":1,"NativeTypedArray":1,"StreamSubscription":1,"StreamTransformerBase":2,"ListBase":1,"MapBase":2,"_ListBase_Object_ListMixin":1}'));
  var string$ = {
    _23456: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
    Error_: "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a value of the returned future's type"
  };
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      AsyncError: findType("AsyncError"),
      Blob: findType("Blob"),
      ByteData: findType("ByteData"),
      Error: findType("Error"),
      Event: findType("Event"),
      File: findType("File"),
      Function: findType("Function"),
      Future_dynamic: findType("Future<@>"),
      HexCodec: findType("HexCodec"),
      Iterable_double: findType("Iterable<double>"),
      Iterable_dynamic: findType("Iterable<@>"),
      Iterable_int: findType("Iterable<int>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSIndexable_dynamic: findType("JSIndexable<@>"),
      JSNull: findType("JSNull"),
      JSObject: findType("JSObject"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      List_dynamic: findType("List<@>"),
      List_int: findType("List<int>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      MessageEvent: findType("MessageEvent"),
      MessagePort: findType("MessagePort"),
      NativeByteBuffer: findType("NativeByteBuffer"),
      NativeTypedData: findType("NativeTypedData"),
      Null: findType("Null"),
      Object: findType("Object"),
      ParametersWithIV_nullable_CipherParameters: findType("ParametersWithIV<CipherParameters?>"),
      Register64: findType("Register64"),
      Register64List: findType("Register64List"),
      StackTrace: findType("StackTrace"),
      String: findType("String"),
      TypeError: findType("TypeError"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      bool: findType("bool"),
      bool_Function_Object: findType("bool(Object)"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function: findType("@()"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      dynamic_Function_dynamic_dynamic: findType("@(@,@)"),
      int: findType("int"),
      legacy_Never: findType("0&*"),
      legacy_Object: findType("Object*"),
      nullable_EventTarget: findType("EventTarget?"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_List_List_int: findType("List<List<int>>?"),
      nullable_List_Object: findType("List<Object>?"),
      nullable_List_dynamic: findType("List<@>?"),
      nullable_Object: findType("Object?"),
      nullable__FutureListener_dynamic_dynamic: findType("_FutureListener<@,@>?"),
      nullable_dynamic_Function_Event: findType("@(Event)?"),
      nullable_nullable_Object_Function_2_nullable_Object_and_nullable_Object: findType("Object?(Object?,Object?)?"),
      nullable_nullable_Object_Function_dynamic: findType("Object?(@)?"),
      nullable_void_Function: findType("~()?"),
      nullable_void_Function_MessageEvent: findType("~(MessageEvent)?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_String_dynamic: findType("~(String,@)")
    };
  })();
  (function constants() {
    B.DedicatedWorkerGlobalScope_methods = A.DedicatedWorkerGlobalScope.prototype;
    B.Interceptor_methods = J.Interceptor.prototype;
    B.JSArray_methods = J.JSArray.prototype;
    B.JSInt_methods = J.JSInt.prototype;
    B.JSNumber_methods = J.JSNumber.prototype;
    B.JSString_methods = J.JSString.prototype;
    B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
    B.NativeByteData_methods = A.NativeByteData.prototype;
    B.NativeUint8List_methods = A.NativeUint8List.prototype;
    B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    B.C_Endian0 = new A.Endian();
    B.C_Endian = new A.Endian();
    B.C_HexCodec = new A.HexCodec();
    B.C_HexDecoder = new A.HexDecoder();
    B.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    B.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    B.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    B.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    B.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    B.C_JS_CONST5 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    B.C_JS_CONST4 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    B.C_JS_CONST3 = function(hooks) { return hooks; }
;
    B.C_JsonCodec = new A.JsonCodec();
    B.C_Latin1Encoder = new A.Latin1Encoder();
    B.C_OutOfMemoryError = new A.OutOfMemoryError();
    B.C__RootZone = new A._RootZone();
    B.C__StringStackTrace = new A._StringStackTrace();
    B.JsonDecoder_null = new A.JsonDecoder(null);
    B.JsonEncoder_null = new A.JsonEncoder(null);
  })();
  (function staticFields() {
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.Primitives__identityHashCodeProperty = null;
    $.BoundClosure__receiverFieldNameCache = null;
    $.BoundClosure__interceptorFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = B.C__RootZone;
    $._toStringVisiting = A._setArrayType([], A.findType("JSArray<Object>"));
    $._blake2bSigma = function() {
      var t1 = type$.JSArray_int;
      return A._setArrayType([A._setArrayType([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], t1), A._setArrayType([14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3], t1), A._setArrayType([11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4], t1), A._setArrayType([7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8], t1), A._setArrayType([9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13], t1), A._setArrayType([2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9], t1), A._setArrayType([12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11], t1), A._setArrayType([13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10], t1), A._setArrayType([6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5], t1), A._setArrayType([10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0], t1), A._setArrayType([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], t1), A._setArrayType([14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3], t1)], A.findType("JSArray<List<int>>"));
    }();
    $.SHA256Digest__k = A._setArrayType([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], type$.JSArray_int);
    $._MASK32_HI_BITS = A._setArrayType([4294967295, 2147483647, 1073741823, 536870911, 268435455, 134217727, 67108863, 33554431, 16777215, 8388607, 4194303, 2097151, 1048575, 524287, 262143, 131071, 65535, 32767, 16383, 8191, 4095, 2047, 1023, 511, 255, 127, 63, 31, 15, 7, 3, 1, 0], type$.JSArray_int);
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal;
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", () => A._AsyncRun__initializeScheduleImmediate());
    _lazyFinal($, "_blake2bIV", "$get$_blake2bIV", () => {
      var t1 = type$.JSArray_int;
      return A.Register64List$from(A._setArrayType([A._setArrayType([1779033703, 4089235720], t1), A._setArrayType([3144134277, 2227873595], t1), A._setArrayType([1013904242, 4271175723], t1), A._setArrayType([2773480762, 1595750129], t1), A._setArrayType([1359893119, 2917565137], t1), A._setArrayType([2600822924, 725511199], t1), A._setArrayType([528734635, 4215389547], t1), A._setArrayType([1541459225, 327033209], t1)], A.findType("JSArray<List<int>>")));
    });
    _lazyFinal($, "Uuid__byteToHex", "$get$Uuid__byteToHex", () => {
      var i,
        _list = J.JSArray_JSArray$allocateGrowable(256, type$.String);
      for (i = 0; i < 256; ++i)
        _list[i] = B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(i, 16), 2, "0");
      return _list;
    });
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({DOMError: J.JavaScriptObject, MediaError: J.JavaScriptObject, NavigatorUserMediaError: J.JavaScriptObject, OverconstrainedError: J.JavaScriptObject, PositionError: J.JavaScriptObject, GeolocationPositionError: J.JavaScriptObject, ArrayBuffer: A.NativeByteBuffer, ArrayBufferView: A.NativeTypedData, DataView: A.NativeByteData, Float32Array: A.NativeTypedArrayOfDouble, Float64Array: A.NativeTypedArrayOfDouble, Int16Array: A.NativeInt16List, Int32Array: A.NativeInt32List, Int8Array: A.NativeInt8List, Uint16Array: A.NativeUint16List, Uint32Array: A.NativeUint32List, Uint8ClampedArray: A.NativeUint8ClampedList, CanvasPixelArray: A.NativeUint8ClampedList, Uint8Array: A.NativeUint8List, Blob: A.Blob, DedicatedWorkerGlobalScope: A.DedicatedWorkerGlobalScope, DOMException: A.DomException, AbortPaymentEvent: A.Event, AnimationEvent: A.Event, AnimationPlaybackEvent: A.Event, ApplicationCacheErrorEvent: A.Event, BackgroundFetchClickEvent: A.Event, BackgroundFetchEvent: A.Event, BackgroundFetchFailEvent: A.Event, BackgroundFetchedEvent: A.Event, BeforeInstallPromptEvent: A.Event, BeforeUnloadEvent: A.Event, BlobEvent: A.Event, CanMakePaymentEvent: A.Event, ClipboardEvent: A.Event, CloseEvent: A.Event, CompositionEvent: A.Event, CustomEvent: A.Event, DeviceMotionEvent: A.Event, DeviceOrientationEvent: A.Event, ErrorEvent: A.Event, ExtendableEvent: A.Event, ExtendableMessageEvent: A.Event, FetchEvent: A.Event, FocusEvent: A.Event, FontFaceSetLoadEvent: A.Event, ForeignFetchEvent: A.Event, GamepadEvent: A.Event, HashChangeEvent: A.Event, InstallEvent: A.Event, KeyboardEvent: A.Event, MediaEncryptedEvent: A.Event, MediaKeyMessageEvent: A.Event, MediaQueryListEvent: A.Event, MediaStreamEvent: A.Event, MediaStreamTrackEvent: A.Event, MIDIConnectionEvent: A.Event, MIDIMessageEvent: A.Event, MouseEvent: A.Event, DragEvent: A.Event, MutationEvent: A.Event, NotificationEvent: A.Event, PageTransitionEvent: A.Event, PaymentRequestEvent: A.Event, PaymentRequestUpdateEvent: A.Event, PointerEvent: A.Event, PopStateEvent: A.Event, PresentationConnectionAvailableEvent: A.Event, PresentationConnectionCloseEvent: A.Event, ProgressEvent: A.Event, PromiseRejectionEvent: A.Event, PushEvent: A.Event, RTCDataChannelEvent: A.Event, RTCDTMFToneChangeEvent: A.Event, RTCPeerConnectionIceEvent: A.Event, RTCTrackEvent: A.Event, SecurityPolicyViolationEvent: A.Event, SensorErrorEvent: A.Event, SpeechRecognitionError: A.Event, SpeechRecognitionEvent: A.Event, SpeechSynthesisEvent: A.Event, StorageEvent: A.Event, SyncEvent: A.Event, TextEvent: A.Event, TouchEvent: A.Event, TrackEvent: A.Event, TransitionEvent: A.Event, WebKitTransitionEvent: A.Event, UIEvent: A.Event, VRDeviceEvent: A.Event, VRDisplayEvent: A.Event, VRSessionEvent: A.Event, WheelEvent: A.Event, MojoInterfaceRequestEvent: A.Event, ResourceProgressEvent: A.Event, USBConnectionEvent: A.Event, IDBVersionChangeEvent: A.Event, AudioProcessingEvent: A.Event, OfflineAudioCompletionEvent: A.Event, WebGLContextEvent: A.Event, Event: A.Event, InputEvent: A.Event, SubmitEvent: A.Event, EventTarget: A.EventTarget, File: A.File, MessageEvent: A.MessageEvent, MessagePort: A.MessagePort, WorkerGlobalScope: A.WorkerGlobalScope});
    hunkHelpers.setOrUpdateLeafTags({DOMError: true, MediaError: true, NavigatorUserMediaError: true, OverconstrainedError: true, PositionError: true, GeolocationPositionError: true, ArrayBuffer: true, ArrayBufferView: false, DataView: true, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false, Blob: false, DedicatedWorkerGlobalScope: true, DOMException: true, AbortPaymentEvent: true, AnimationEvent: true, AnimationPlaybackEvent: true, ApplicationCacheErrorEvent: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, BlobEvent: true, CanMakePaymentEvent: true, ClipboardEvent: true, CloseEvent: true, CompositionEvent: true, CustomEvent: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, ErrorEvent: true, ExtendableEvent: true, ExtendableMessageEvent: true, FetchEvent: true, FocusEvent: true, FontFaceSetLoadEvent: true, ForeignFetchEvent: true, GamepadEvent: true, HashChangeEvent: true, InstallEvent: true, KeyboardEvent: true, MediaEncryptedEvent: true, MediaKeyMessageEvent: true, MediaQueryListEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MIDIConnectionEvent: true, MIDIMessageEvent: true, MouseEvent: true, DragEvent: true, MutationEvent: true, NotificationEvent: true, PageTransitionEvent: true, PaymentRequestEvent: true, PaymentRequestUpdateEvent: true, PointerEvent: true, PopStateEvent: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, ProgressEvent: true, PromiseRejectionEvent: true, PushEvent: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, SecurityPolicyViolationEvent: true, SensorErrorEvent: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, SpeechSynthesisEvent: true, StorageEvent: true, SyncEvent: true, TextEvent: true, TouchEvent: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, UIEvent: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, WheelEvent: true, MojoInterfaceRequestEvent: true, ResourceProgressEvent: true, USBConnectionEvent: true, IDBVersionChangeEvent: true, AudioProcessingEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, Event: false, InputEvent: false, SubmitEvent: false, EventTarget: false, File: true, MessageEvent: true, MessagePort: true, WorkerGlobalScope: false});
    A.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
  })();
  Function.prototype.call$0 = function() {
    return this();
  };
  Function.prototype.call$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$1$1 = function(a) {
    return this(a);
  };
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = A.main;
    if (typeof dartMainRunner === "function")
      dartMainRunner(callMain, []);
    else
      callMain([]);
  });
})();

//# sourceMappingURL=login_worker.js.map
